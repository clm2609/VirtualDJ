var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppAboutComponent.html",[0,0.127,1,0.405]],["body/components/AppAboutComponent.html",[0,0.234,1,0.744,2,0.36,3,0.287,4,0.804,5,0.287,6,1.293,7,3.66,8,3.601,9,1.458,10,1.411,11,0.804,12,1.28,13,0.974,14,1.006,15,4.502,16,1.006,17,4.502,18,0.959,19,0.609,20,3.601,21,0.36,22,0.046,23,0.287,24,0.287,25,0.36,26,1.478,27,4.502,28,4.502,29,5.404,30,5.404,31,4.502,32,5.404,33,5.404,34,5.404,35,5.404,36,4.502,37,4.502,38,1.15,39,0.804,40,0.451,41,0.804,42,0.521,43,0.804,44,0.521,45,0.804,46,0.521,47,0.521,48,0.804,49,0.521,50,0.804,51,0.521,52,0.521,53,0.804,54,0.521,55,0.804,56,0.521,57,0.804,58,0.521,59,0.804,60,0.521,61,0.804,62,0.521,63,0.804,64,0.804,65,0.521,66,0.804,67,0.804,68,0.804,69,0.804,70,0.036,71,0.036]],["title/components/AppComponent.html",[0,0.127,42,0.405]],["body/components/AppComponent.html",[0,0.241,1,0.567,2,0.393,3,0.313,4,0.876,5,0.313,11,0.876,12,1.292,13,0.972,14,1.06,16,1.06,21,0.393,22,0.047,23,0.313,24,0.313,25,0.393,38,1.184,39,0.876,40,0.475,41,0.876,42,0.766,43,0.876,44,0.567,45,0.876,46,0.567,47,0.567,48,0.876,49,0.567,50,0.876,51,0.567,52,0.567,53,0.876,54,0.567,55,0.876,56,0.567,57,0.876,58,0.567,59,0.876,60,0.567,61,0.876,62,0.567,63,0.876,64,0.876,65,0.567,66,0.876,67,0.876,68,0.876,69,0.876,70,0.038,71,0.038,72,3.923,73,2.836,74,4.746,75,4.746]],["title/components/AppDeckComponent.html",[0,0.127,44,0.405]],["body/components/AppDeckComponent.html",[0,0.182,1,0.288,2,0.2,3,0.159,4,0.446,5,0.239,6,1.592,9,0.97,10,1.033,11,0.446,12,1.173,13,0.902,14,0.669,16,0.669,18,0.389,19,0.933,21,0.467,22,0.048,23,0.159,24,0.159,25,0.2,26,0.819,38,0.893,39,0.446,40,0.45,41,0.446,42,0.288,43,0.446,44,0.578,45,0.446,46,0.288,47,0.694,48,0.446,49,0.288,50,0.446,51,0.288,52,0.288,53,0.446,54,0.288,55,0.446,56,0.288,57,0.446,58,0.288,59,0.446,60,0.288,61,0.446,62,0.288,63,0.446,64,0.446,65,0.288,66,0.446,67,0.446,68,0.446,69,0.446,70,0.024,71,0.024,76,4.505,77,1.995,78,2.923,79,2.923,80,1.85,81,2.995,82,2.995,83,0.288,84,0.584,85,3.997,86,3.997,87,3.997,88,4.498,89,5,90,4.666,91,4.498,92,3.901,93,2.388,94,0.669,95,3.997,96,2.995,97,3.997,98,2.995,99,3.997,100,3.997,101,3.997,102,3.997,103,3.997,104,2.995,105,2.756,106,3.596,107,1.045,108,1.64,109,2.788,110,2.995,111,0.675,112,0.858,113,0.675,114,1.569,115,1.64,116,1.995,117,1.995,118,1.134,119,1.162,120,2.995,121,1.995,122,1.995,123,2.995,124,1.995,125,1.995,126,1.995,127,1.995,128,1.995,129,1.995,130,1.995,131,2.995,132,1.995,133,1.995,134,1.995,135,1.995,136,1.995,137,1.088,138,0.957,139,1.995,140,1.995,141,2.434,142,2.065,143,1.75,144,1.846,145,3.218,146,2.434,147,2.065,148,2.434,149,1.292,150,1.995,151,1.995,152,1.995,153,1.045,154,1.045,155,1.376,156,2.434,157,1.045,158,1.995,159,1.621,160,1.995,161,1.995,162,2.995,163,1.995,164,1.476,165,1.376,166,1.192,167,1.79,168,1.376,169,1.995,170,3.249,171,1.621,172,1.995,173,1.457,174,1.995,175,1.192,176,1.995,177,1.386,178,1.995,179,2.954,180,1.995,181,4.498,182,1.995,183,1.621,184,1.995,185,1.995,186,1.995,187,1.995,188,1.995,189,1.995,190,1.995,191,1.995,192,1.995,193,1.995,194,1.995,195,1.995,196,1.995,197,1.995,198,1.995,199,2.995,200,1.995,201,1.995,202,1.995,203,1.995,204,1.995,205,1.621,206,1.995,207,1.995,208,1.995,209,1.995,210,2.995,211,1.621,212,1.995,213,1.995,214,1.995,215,1.995,216,3.596,217,1.995,218,1.995,219,1.995,220,1.995,221,1.995,222,2.923,223,2.434,224,2.56,225,3.596,226,1.995,227,1.621,228,1.621,229,1.995,230,1.995,231,1.995,232,2.995,233,1.995,234,3.997,235,2.995,236,1.995,237,1.995,238,1.995,239,1.995,240,1.995,241,1.995,242,1.995,243,3.596,244,3.596,245,1.995,246,1.995,247,1.995,248,1.092,249,2.434,250,2.434,251,2.995,252,2.995,253,2.995,254,2.995,255,2.995,256,2.995,257,3.249,258,1.79,259,2.065,260,1.79]],["title/components/AppEffectsCreatorComponent.html",[0,0.127,46,0.405]],["body/components/AppEffectsCreatorComponent.html",[0,0.184,1,0.296,2,0.205,3,0.163,4,0.457,5,0.163,6,1.573,9,0.988,10,1.048,11,0.457,12,1.178,13,0.905,14,0.682,16,0.682,18,0.399,19,0.921,21,0.365,22,0.048,23,0.163,24,0.163,25,0.205,26,0.84,38,0.904,39,0.457,40,0.518,41,0.457,42,0.296,43,0.457,44,0.296,45,0.457,46,0.585,47,0.842,48,0.457,49,0.296,50,0.457,51,0.296,52,0.296,53,0.457,54,0.296,55,0.457,56,0.296,57,0.457,58,0.296,59,0.457,60,0.296,61,0.457,62,0.296,63,0.457,64,0.457,65,0.296,66,0.457,67,0.682,68,0.457,69,0.457,70,0.025,71,0.025,83,0.296,84,0.596,94,0.682,111,0.617,112,0.863,113,0.617,115,1.715,118,1.168,119,1.014,137,1.099,138,1.178,143,1.113,149,1.048,164,0.84,166,1.222,167,2.418,168,1.411,173,1.182,175,2.181,177,0.947,248,1.579,258,2.418,259,2.517,260,2.713,261,3.776,262,1.663,263,2.481,264,3.052,265,3.052,266,2.713,267,4.047,268,4.047,269,4.047,270,3.691,271,4.047,272,3.29,273,4.047,274,4.047,275,4.047,276,3.29,277,3.052,278,3.29,279,4.047,280,3.052,281,1.663,282,2.121,283,3.65,284,4.047,285,3.052,286,2.105,287,2.045,288,2.045,289,3.052,290,2.045,291,3.052,292,2.045,293,2.045,294,2.045,295,2.045,296,3.052,297,2.045,298,4.047,299,2.045,300,2.481,301,2.045,302,2.045,303,2.045,304,2.045,305,2.954,306,2.045,307,2.045,308,2.045,309,2.045,310,2.045,311,1.411,312,3.052,313,2.045,314,3.052,315,0.947,316,2.045,317,2.045,318,2.967,319,3.052,320,2.045,321,2.045,322,2.045,323,2.045,324,3.65,325,3.052,326,2.045,327,2.045,328,2.045,329,2.045,330,2.045,331,2.045,332,3.052,333,2.045,334,2.045,335,2.045,336,1.663,337,2.045,338,2.517,339,1.824,340,3.65,341,2.045,342,2.045,343,3.052,344,2.045,345,2.045,346,2.045,347,2.045,348,4.329,349,2.481,350,2.481,351,2.481,352,2.481,353,2.045,354,2.045,355,2.045,356,2.045,357,2.105,358,1.663,359,2.045,360,1.663,361,2.045,362,1.663,363,2.045,364,2.045,365,2.045,366,2.045,367,3.65,368,2.045,369,3.052,370,2.105,371,1.663,372,4.151,373,2.045,374,2.045,375,2.045,376,3.052,377,3.052,378,2.045,379,3.052,380,4.047,381,2.045,382,2.045,383,4.047,384,3.052,385,3.052,386,3.052,387,3.052,388,3.052,389,4.047,390,3.052,391,4.047,392,3.052,393,3.052]],["title/components/AppLayoutComponent.html",[0,0.127,49,0.405]],["body/components/AppLayoutComponent.html",[0,0.226,1,0.473,2,0.328,3,0.261,4,0.731,5,0.261,6,1.478,10,0.94,11,0.731,12,1.266,13,0.965,14,0.946,16,0.946,18,0.639,19,0.84,21,0.424,22,0.047,23,0.261,24,0.261,25,0.328,38,1.11,39,0.731,40,0.47,41,0.731,42,0.473,43,0.731,44,0.473,45,0.731,46,0.473,47,0.473,48,0.731,49,0.718,50,0.731,51,0.473,52,0.473,53,0.731,54,0.473,55,0.731,56,0.473,57,0.731,58,0.473,59,0.731,60,0.473,61,0.731,62,0.473,63,0.731,64,0.731,65,0.473,66,0.731,67,0.731,68,0.731,69,0.731,70,0.034,71,0.034,83,0.473,84,0.827,111,0.553,112,0.794,113,0.553,115,1.922,137,0.831,138,1.049,143,1.194,179,3.751,248,1.545,394,4.184,395,3.274,396,4.237,397,4.237,398,4.237,399,4.421,400,5.273,401,4.237,402,3.076,403,4.237,404,3.274,405,3.274,406,2.661,407,4.699,408,3.274,409,4.699,410,3.274,411,3.274,412,4.237,413,3.274,414,4.237,415,4.237,416,4.237,417,3.445,418,4.237,419,3.445,420,4.237,421,4.237,422,4.237,423,3.445,424,4.237,425,4.237]],["title/modules/AppModule.html",[426,1.151,427,1.675]],["body/modules/AppModule.html",[1,0.757,2,0.319,3,0.254,5,0.254,7,2.592,13,0.539,21,0.575,22,0.048,23,0.254,24,0.332,25,0.319,42,0.809,44,0.757,46,0.757,47,0.602,49,0.757,51,0.757,52,0.602,54,0.757,56,0.757,58,0.757,60,0.757,62,0.757,65,0.757,70,0.034,71,0.034,76,2.592,258,1.905,261,2.199,315,1.928,394,2.592,426,1.71,427,3.49,428,1.905,429,2.592,430,3.771,431,3.771,432,2.489,433,2.592,434,2.592,435,2.592,436,2.592,437,2.743,438,3.386,439,2.199,440,3.188,441,4.165,442,2.592,443,2.199,444,3.386,445,3.188,446,3.188,447,5.469,448,3.188,449,3.188,450,2.592,451,3.188,452,3.188,453,2.592,454,4.165,455,3.386,456,3.188,457,2.592,458,2.592,459,3.188,460,2.592,461,3.188,462,2.592,463,3.188,464,2.592,465,3.188,466,3.188,467,3.188,468,4.165]],["title/components/AppMusicListComponent.html",[0,0.127,51,0.405]],["body/components/AppMusicListComponent.html",[0,0.213,1,0.407,2,0.282,3,0.225,4,0.629,5,0.42,6,1.532,9,1.242,10,0.809,11,0.629,12,1.241,13,0.948,14,0.857,16,0.857,18,0.55,19,0.889,21,0.437,22,0.048,23,0.225,24,0.225,25,0.282,38,1.046,39,0.629,40,0.49,41,0.629,42,0.407,43,0.629,44,0.407,45,0.629,46,0.407,47,0.407,48,0.629,49,0.407,50,0.629,51,0.677,52,0.837,53,0.629,54,0.407,55,0.629,56,0.407,57,0.629,58,0.407,59,0.629,60,0.407,61,0.629,62,0.407,63,0.629,64,0.629,65,0.407,66,0.629,67,0.629,68,0.629,69,0.629,70,0.031,71,0.038,79,3.545,80,1.304,83,0.407,84,0.749,93,3.188,94,0.857,107,2.01,108,2.122,111,0.737,112,0.828,113,0.737,114,2.648,118,1.094,119,1.046,149,1.102,153,1.476,154,1.476,156,3.118,157,1.476,164,1.156,165,1.943,173,1.242,211,2.29,227,2.29,228,2.29,250,3.118,305,2.606,349,3.118,350,3.118,351,3.118,352,3.118,462,4.337,469,2.817,470,3.835,471,3.835,472,3.835,473,4.681,474,5.053,475,4.681,476,3.835,477,3.835,478,4.681,479,3.835,480,3.835,481,2.817,482,3.835,483,2.817,484,2.817,485,2.817,486,2.817,487,2.817,488,1.943,489,4.681,490,2.817,491,3.835,492,2.817,493,2.817,494,2.817,495,2.817,496,3.835,497,2.817,498,3.835,499,2.817,500,2.817,501,2.817,502,2.817,503,2.817,504,3.835,505,3.118,506,3.118,507,3.118,508,3.118,509,3.118,510,3.835]],["title/modules/AppRoutingModule.html",[426,1.151,437,1.469]],["body/modules/AppRoutingModule.html",[2,0.431,3,0.343,5,0.343,21,0.547,22,0.047,23,0.343,24,0.4,25,0.431,70,0.04,71,0.04,173,1.393,315,1.991,426,1.766,437,2.627,444,4.075,455,4.075,511,4.302,512,4.302,513,5.305,514,5.013,515,3.497,516,4.302]],["title/components/AppSearchComponent.html",[0,0.127,54,0.405]],["body/components/AppSearchComponent.html",[0,0.221,1,0.45,2,0.312,3,0.248,4,0.695,5,0.404,6,1.455,9,1.328,10,1.317,11,0.695,12,1.258,13,0.959,14,0.916,16,0.916,18,0.608,19,0.824,21,0.411,22,0.047,23,0.248,24,0.248,25,0.312,26,1.278,38,1.089,39,0.695,40,0.507,41,0.695,42,0.45,43,0.695,44,0.45,45,0.695,46,0.45,47,0.45,48,0.695,49,0.45,50,0.695,51,0.45,52,0.45,53,0.695,54,0.705,55,0.695,56,0.45,57,0.695,58,0.45,59,0.695,60,0.45,61,0.695,62,0.45,63,0.695,64,0.695,65,0.45,66,0.695,67,0.695,68,0.695,69,0.695,70,0.047,71,0.033,83,0.45,84,0.8,94,0.916,107,2.149,108,2.176,111,0.775,112,0.824,113,0.775,114,2.726,118,0.916,119,0.916,143,2.054,144,2.38,149,0.894,153,1.632,154,1.632,458,4.117,488,2.147,507,3.334,517,3.114,518,4.101,519,4.101,520,4.101,521,3.334,522,4.101,523,4.101,524,3.114,525,3.114,526,3.334,527,3.728,528,3.114,529,3.114,530,4.101]],["title/components/AppSettingsComponent.html",[0,0.127,56,0.405]],["body/components/AppSettingsComponent.html",[0,0.209,1,0.39,2,0.27,3,0.215,4,0.953,5,0.215,6,1.537,9,1.207,10,1.225,11,0.603,12,1.234,13,0.943,14,0.832,16,0.832,18,0.527,19,0.893,21,0.46,22,0.048,23,0.215,24,0.215,25,0.27,26,1.108,38,1.027,39,0.603,40,0.46,41,0.603,42,0.39,43,0.603,44,0.39,45,0.603,46,0.39,47,0.764,48,0.603,49,0.39,50,0.603,51,0.39,52,0.39,53,0.603,54,0.39,55,0.603,56,0.665,57,0.603,58,0.39,59,0.603,60,0.39,61,0.603,62,0.39,63,0.603,64,0.603,65,0.39,66,0.603,67,0.603,68,0.603,69,0.603,70,0.03,71,0.03,80,1.725,83,0.39,84,0.727,94,0.832,109,2.748,111,0.63,112,0.815,113,0.63,115,1.359,118,0.832,119,0.832,137,1.168,138,1.027,155,1.862,164,1.529,168,1.862,173,0.875,175,1.614,205,3.922,248,1.759,249,3.029,260,2.226,270,4.055,272,3.738,281,2.195,282,2.41,286,2.569,305,2.226,311,1.862,318,2.195,336,3.467,402,3.055,406,2.195,464,4.35,531,2.701,532,3.029,533,3.726,534,3.726,535,4.599,536,4.599,537,3.029,538,3.738,539,4.266,540,2.701,541,3.726,542,4.599,543,2.701,544,2.701,545,2.701,546,2.701,547,2.701,548,2.701,549,2.701,550,3.467,551,2.701,552,2.701,553,2.701,554,4.266,555,4.266,556,4.266,557,4.266,558,4.266,559,2.701,560,2.701,561,3.726,562,2.701,563,2.701,564,3.726,565,3.726,566,3.726,567,2.701,568,2.701,569,2.701,570,2.701,571,2.701,572,2.701,573,2.701,574,2.701,575,2.701,576,3.726,577,3.726,578,3.726,579,3.726,580,3.726,581,3.726,582,2.569,583,3.726,584,3.726,585,3.726,586,3.726,587,3.726,588,3.726,589,3.726,590,3.726,591,3.726,592,3.726,593,3.726,594,3.726]],["title/components/AppTabsComponent.html",[0,0.127,58,0.405]],["body/components/AppTabsComponent.html",[0,0.217,1,0.426,2,0.295,3,0.235,4,0.659,5,0.356,6,1.588,11,0.659,12,1.249,13,0.953,14,0.884,16,0.884,18,0.576,19,0.928,21,0.396,22,0.047,23,0.235,24,0.235,25,0.295,38,1.066,39,0.659,40,0.513,41,0.659,42,0.426,43,0.659,44,0.426,45,0.659,46,0.426,47,0.645,48,0.659,49,0.426,50,0.659,51,0.426,52,0.719,53,0.659,54,0.426,55,0.659,56,0.426,57,0.659,58,0.69,59,0.659,60,0.426,61,0.659,62,0.426,63,0.659,64,0.659,65,0.426,66,0.659,67,0.659,68,0.659,69,0.659,70,0.032,71,0.032,83,0.426,84,0.772,93,2.365,94,0.884,107,2.074,108,2.148,111,0.806,112,0.806,113,0.806,114,2.684,118,1.066,119,1.066,137,1.134,138,0.997,149,0.847,153,1.546,154,1.546,166,3.061,167,3.061,177,1.366,222,2.398,263,3.216,305,2.365,460,4.494,488,2.035,508,3.878,509,3.216,521,3.216,526,3.216,527,3.629,532,3.216,595,2.95,596,3.957,597,3.957,598,3.957,599,5.318,600,3.957,601,3.957,602,3.629,603,4.465,604,3.957,605,2.95,606,2.95,607,2.398,608,3.629,609,2.95,610,2.95,611,3.957,612,2.95,613,2.95,614,2.95,615,3.957,616,2.95,617,2.95,618,2.95,619,2.95,620,2.95,621,3.957,622,3.957,623,3.957,624,2.95,625,4.465,626,2.95,627,2.95,628,2.95,629,2.95,630,3.957]],["title/components/AppVolumeComponent.html",[0,0.127,60,0.405]],["body/components/AppVolumeComponent.html",[0,0.208,1,0.387,2,0.268,3,0.213,4,0.597,5,0.213,6,1.593,9,1.199,10,1.219,11,0.597,12,1.232,13,0.942,14,0.827,16,0.827,18,0.722,19,0.932,21,0.458,22,0.048,23,0.213,24,0.213,25,0.268,38,1.023,39,0.597,40,0.481,41,0.597,42,0.387,43,0.597,44,0.387,45,0.597,46,0.387,47,0.387,48,0.597,49,0.387,50,0.597,51,0.387,52,0.387,53,0.597,54,0.387,55,0.597,56,0.387,57,0.597,58,0.387,59,0.597,60,0.662,61,0.597,62,0.387,63,0.597,64,0.597,65,0.387,66,0.597,67,0.597,68,0.597,69,0.597,70,0.03,71,0.03,78,3.45,80,2.12,83,0.387,84,0.722,94,0.827,107,1.402,108,1.88,109,3.047,111,0.717,112,0.912,113,0.717,114,1.94,115,2.048,118,0.948,119,0.948,137,1.356,138,1.193,143,1.35,149,1.6,153,1.402,154,1.402,155,1.845,164,1.742,165,3.159,224,2.972,248,1.67,282,2.4,286,2.927,311,1.845,450,4.508,631,2.675,632,3.009,633,3.701,634,3.701,635,3.723,636,3.723,637,3.723,638,3.723,639,3.723,640,3.723,641,4.58,642,4.58,643,4.58,644,3.701,645,3.701,646,4.244,647,2.675,648,3.701,649,2.675,650,2.675,651,2.675,652,2.675,653,2.675,654,2.675,655,2.675,656,2.675,657,2.675,658,2.675,659,2.675,660,2.675,661,2.675,662,2.675,663,3.701,664,4.244,665,2.675,666,4.58,667,4.58,668,4.58]],["title/injectables/EffectsService.html",[282,1.469,669,1.151]],["body/injectables/EffectsService.html",[2,0.093,3,0.074,5,0.074,18,0.414,19,0.655,21,0.16,22,0.048,23,0.074,24,0.074,25,0.093,40,0.581,47,0.776,70,0.013,71,0.013,73,0.552,80,0.428,83,0.134,84,0.313,94,0.358,111,0.483,112,0.874,113,0.63,118,0.998,119,0.358,137,1.445,138,1.222,141,3.15,142,2.455,143,2.093,144,1.286,145,3.173,146,2.893,147,1.744,148,1.302,149,1.638,166,2.461,167,2.671,171,1.302,173,1.207,175,0.957,177,1.648,223,1.302,224,1.873,257,2.056,259,2.32,260,0.957,266,3.135,276,1.302,278,1.302,282,0.839,300,2.547,370,3.249,417,1.302,419,1.302,423,2.056,550,1.302,582,1.105,632,0.751,635,1.723,636,2.325,637,2.734,638,2.734,639,2.325,640,2.325,669,0.87,670,0.924,671,2.529,672,1.602,673,1.602,674,1.602,675,2.529,676,2.529,677,0.924,678,1.602,679,0.924,680,1.602,681,0.924,682,0.924,683,1.602,684,0.924,685,1.602,686,2.86,687,0.924,688,0.924,689,0.924,690,1.602,691,0.924,692,3.431,693,4.886,694,1.602,695,4.47,696,3.134,697,3.559,698,3.134,699,3.875,700,3.134,701,3.875,702,4.312,703,3.875,704,3.875,705,2.529,706,2.529,707,2.529,708,3.875,709,4.312,710,3.134,711,3.875,712,3.875,713,2.529,714,2.529,715,2.529,716,3.875,717,3.559,718,1.602,719,1.602,720,1.602,721,2.529,722,3.559,723,4.119,724,3.559,725,3.134,726,2.529,727,3.134,728,2.529,729,2.529,730,3.134,731,2.529,732,4.6,733,0.924,734,3.134,735,4.957,736,4.589,737,4.589,738,1.602,739,4.312,740,1.602,741,1.602,742,3.134,743,1.602,744,1.602,745,1.602,746,1.602,747,3.134,748,2.529,749,2.529,750,1.602,751,3.134,752,2.529,753,2.529,754,3.134,755,1.602,756,1.602,757,1.602,758,1.602,759,1.602,760,3.134,761,1.302,762,1.602,763,4.119,764,1.602,765,1.602,766,1.602,767,2.529,768,1.602,769,1.602,770,1.602,771,1.602,772,3.559,773,1.602,774,1.602,775,1.602,776,1.602,777,3.559,778,1.602,779,1.602,780,1.602,781,2.529,782,2.529,783,4.6,784,1.602,785,1.602,786,3.134,787,1.602,788,3.134,789,1.602,790,1.602,791,1.602,792,1.602,793,1.602,794,1.602,795,1.602,796,1.602,797,2.529,798,2.529,799,2.529,800,2.529,801,1.602,802,1.602,803,1.602,804,1.602,805,1.302,806,1.602,807,1.602,808,1.602,809,1.602,810,1.602,811,1.602,812,0.924,813,1.602,814,0.751,815,0.637,816,0.924,817,0.924,818,1.602,819,0.924,820,0.924,821,0.924,822,0.924,823,0.924,824,2.12,825,2.12,826,0.924,827,0.924,828,0.552,829,0.924,830,1.602,831,0.924,832,0.924,833,0.924,834,0.924,835,4.711,836,2.529,837,1.602,838,1.602,839,1.602,840,3.559,841,1.602,842,1.602,843,1.602,844,1.602,845,2.529,846,1.602,847,1.602,848,0.924,849,0.924,850,1.602,851,1.602,852,1.602,853,1.602,854,1.602,855,1.602,856,1.602,857,1.602,858,0.924,859,0.924,860,0.924,861,0.924]],["title/injectables/MusicLoaderService.html",[108,1.151,669,1.151]],["body/injectables/MusicLoaderService.html",[2,0.3,3,0.239,5,0.419,18,0.586,19,0.93,21,0.481,22,0.048,23,0.239,24,0.239,25,0.3,40,0.481,52,0.781,70,0.032,71,0.032,73,1.793,80,1.389,83,0.434,84,0.781,93,2.99,94,0.894,108,1.643,109,3.332,111,0.812,112,0.888,113,0.812,118,1.006,119,1.006,137,1.307,138,1.15,143,1.094,144,1.232,149,0.862,157,1.573,173,1.667,183,2.439,506,3.253,669,1.848,805,2.439,815,2.069,828,3.23,862,5.543,863,3.001,864,4.803,865,5.338,866,4.803,867,4.002,868,4.002,869,4.002,870,4.002,871,4.002,872,3.001,873,4.002,874,3.001,875,4.002,876,3.001,877,4.271,878,3.001,879,3.001,880,4.002,881,4.002,882,3.001,883,3.001,884,4.002,885,3.001,886,3.001,887,3.001,888,3.001,889,2.439,890,3.001,891,3.001,892,4.002,893,3.001,894,3.001,895,3.001,896,3.001,897,3.001,898,4.503,899,4.002,900,3.001,901,3.001,902,3.001,903,3.001,904,3.001,905,3.001,906,3.001,907,3.001,908,3.001,909,3.001,910,3.001,911,3.001,912,3.001,913,3.001,914,3.001,915,3.001,916,3.001,917,3.001,918,3.001,919,3.001,920,4.002,921,3.001]],["title/components/RouletteControllerComponent.html",[0,0.127,62,0.405]],["body/components/RouletteControllerComponent.html",[0,0.205,1,0.374,2,0.259,3,0.206,4,0.577,5,0.206,9,1.17,10,1.197,11,0.577,12,1.239,13,0.896,14,0.807,16,0.807,18,0.813,19,0.914,21,0.362,22,0.048,23,0.206,24,0.288,25,0.259,26,1.061,38,1.008,39,0.577,40,0.475,41,0.577,42,0.374,43,0.577,44,0.374,45,0.577,46,0.374,47,0.374,48,0.577,49,0.374,50,0.577,51,0.374,52,0.374,53,0.577,54,0.374,55,0.577,56,0.374,57,0.577,58,0.374,59,0.577,60,0.374,61,0.577,62,0.686,63,1.169,64,0.577,65,0.374,66,1.008,67,0.931,68,0.577,69,0.577,70,0.029,71,0.029,83,0.374,84,0.705,92,4.189,94,0.807,105,3.112,111,0.704,112,0.853,113,0.704,115,1.731,118,1.099,119,1.128,137,1.058,138,1.185,142,1.782,144,1.061,149,1.197,164,1.71,170,3.387,173,1.593,177,2.277,224,1.544,248,0.942,266,2.49,315,1.196,338,1.782,339,1.544,432,2.49,457,4.431,602,3.387,607,2.1,608,2.937,692,2.1,736,2.1,737,2.1,922,5.451,923,2.1,924,3.387,925,3.387,926,2.937,927,2.937,928,4.512,929,4.512,930,2.937,931,2.937,932,4.512,933,2.937,934,3.613,935,2.1,936,2.584,937,2.584,938,3.613,939,2.584,940,2.937,941,2.584,942,3.668,943,2.937,944,2.584,945,2.584,946,2.584,947,2.937,948,2.584,949,2.1,950,2.1,951,2.1,952,2.584,953,2.937,954,2.937,955,2.937,956,3.387,957,2.1,958,2.1,959,2.1,960,2.1,961,2.1,962,2.584,963,3.613,964,2.1,965,2.1,966,4.166,967,3.613,968,3.613,969,2.1,970,2.1,971,3.613,972,3.613,973,2.584,974,2.584,975,2.584,976,4.166,977,2.937,978,2.1,979,2.584,980,2.584,981,2.584,982,4.748,983,2.584,984,2.584,985,2.584,986,2.584,987,2.584,988,2.584,989,2.584,990,2.584,991,2.584,992,2.584,993,2.584,994,2.584]],["title/injectables/SizeService.html",[402,1.675,669,1.151]],["body/injectables/SizeService.html",[2,0.346,3,0.276,5,0.276,18,0.941,19,0.945,21,0.439,22,0.048,23,0.276,24,0.276,25,0.346,40,0.346,70,0.035,71,0.035,73,2.067,83,0.5,84,0.857,94,0.98,111,0.585,112,0.742,113,0.585,115,2.005,118,1.169,119,0.773,137,1.288,138,1.133,157,1.813,179,3.935,248,1.601,399,4.6,402,2.623,538,3.568,669,1.979,815,2.385,828,3.031,877,4.256,995,3.459,996,5.072,997,5.072,998,5.072,999,5.072,1000,4.39,1001,4.39,1002,3.459,1003,3.459,1004,3.459,1005,3.459,1006,3.459,1007,3.459,1008,4.39,1009,3.459,1010,4.39,1011,3.459,1012,3.459,1013,3.459,1014,5.072,1015,3.459,1016,5.072,1017,3.459,1018,3.459,1019,3.459,1020,3.459,1021,3.459,1022,3.459,1023,3.459]],["title/components/SliderControllerComponent.html",[0,0.127,65,0.405]],["body/components/SliderControllerComponent.html",[0,0.162,1,0.231,2,0.16,3,0.127,4,0.357,5,0.127,9,0.818,10,0.899,11,0.357,12,1.121,13,0.796,14,0.564,16,0.564,19,0.902,21,0.253,22,0.048,23,0.127,24,0.201,25,0.16,26,0.656,38,0.794,39,0.357,40,0.388,41,0.357,42,0.231,43,0.357,44,0.231,45,0.357,46,0.231,47,0.231,48,0.357,49,0.231,50,0.357,51,0.231,52,0.231,53,0.357,54,0.231,55,0.357,56,0.231,57,0.357,58,0.231,59,0.357,60,0.231,61,0.357,62,0.231,63,0.357,64,0.357,65,0.56,66,1.073,67,0.699,68,0.357,69,0.357,70,0.02,71,0.02,83,0.231,84,0.493,94,0.564,105,2.452,111,0.529,112,0.777,113,0.529,115,1.296,118,1.225,119,0.919,137,0.641,138,0.919,143,1.5,144,1.971,147,2.452,149,1.238,164,1.036,173,1.877,177,0.74,248,1.781,266,1.87,315,0.74,338,1.102,339,0.955,432,1.87,453,4.36,923,1.299,924,2.544,925,2.544,926,2.052,927,2.052,930,2.052,931,2.052,933,2.052,935,1.299,940,2.052,942,2.89,943,2.052,947,2.052,949,1.299,950,1.299,951,1.299,953,2.052,954,2.052,955,2.052,956,2.544,957,1.299,958,1.299,959,1.299,960,1.299,961,1.299,964,3.97,965,3.345,969,4.622,970,1.299,977,2.052,978,1.299,1024,5.363,1025,4.708,1026,5.073,1027,3.555,1028,3.555,1029,3.555,1030,2.525,1031,3.129,1032,3.129,1033,3.129,1034,3.129,1035,3.129,1036,3.129,1037,3.129,1038,3.129,1039,3.129,1040,3.129,1041,3.129,1042,3.129,1043,1.598,1044,1.598,1045,1.598,1046,1.598,1047,3.129,1048,3.555,1049,1.598,1050,2.525,1051,1.598,1052,1.598,1053,1.598,1054,1.598,1055,1.598,1056,1.598,1057,1.598,1058,1.598,1059,1.598,1060,1.598,1061,1.598,1062,1.598,1063,1.598,1064,1.598,1065,1.598,1066,1.598,1067,1.598,1068,1.598,1069,1.598,1070,1.598,1071,1.598,1072,1.598,1073,1.598,1074,1.598,1075,1.598,1076,1.598,1077,1.598,1078,4.884,1079,5.363,1080,5.018,1081,4.955,1082,4.955,1083,2.525,1084,4.884,1085,4.309,1086,5.208,1087,5.073,1088,5.245,1089,4.466,1090,4.466,1091,5.208,1092,4.884,1093,3.555,1094,4.466,1095,1.598,1096,1.598,1097,1.598,1098,1.598,1099,1.598,1100,1.598]],["title/dependencies.html",[428,2.014,1101,2.343]],["body/dependencies.html",[22,0.047,23,0.337,52,0.611,70,0.04,71,0.04,157,2.214,159,3.434,315,1.955,362,3.434,428,2.524,442,4.032,443,3.42,515,3.434,814,3.434,889,3.434,1102,4.224,1103,5.737,1104,4.224,1105,4.224,1106,4.224,1107,4.224,1108,4.224,1109,4.224,1110,4.224,1111,4.224,1112,4.224,1113,4.224,1114,4.224,1115,4.224]],["title/miscellaneous/functions.html",[357,2.324,1116,1.904]],["body/miscellaneous/functions.html",[6,1.237,22,0.046,40,0.502,47,0.79,70,0.04,71,0.04,83,0.623,111,0.848,112,0.728,113,0.848,138,1.121,261,2.971,262,4.315,339,2.574,357,2.971,358,3.502,360,4.079,370,2.971,371,3.502,372,4.079,1116,3.502,1117,5.017,1118,5.017]],["title/index.html",[83,0.339,505,1.904,1119,2.343]],["body/index.html",[0,0.23,3,0.307,5,0.307,13,0.856,22,0.038,40,0.386,70,0.038,71,0.038,439,2.657,537,3.132,582,2.657,761,4.116,828,2.302,1120,3.853,1121,4.694,1122,5.402,1123,5.063,1124,5.063,1125,3.853,1126,3.853,1127,3.853,1128,4.694,1129,5.562,1130,5.494,1131,3.853,1132,3.853,1133,3.853,1134,3.853,1135,3.853,1136,3.853,1137,3.853,1138,3.853,1139,5.402,1140,3.853,1141,3.853,1142,3.853,1143,3.853,1144,3.853,1145,3.853,1146,4.694,1147,4.694,1148,5.402,1149,3.853,1150,4.694,1151,4.694,1152,3.853,1153,5.27,1154,3.853,1155,3.853,1156,3.853,1157,5.063,1158,3.853,1159,5.27,1160,3.853,1161,3.853,1162,4.694,1163,3.853,1164,3.853,1165,3.853,1166,3.853,1167,4.694,1168,4.694,1169,3.853,1170,4.694,1171,3.853,1172,3.853,1173,3.853]],["title/modules.html",[426,1.569]],["body/modules.html",[22,0.041,70,0.041,71,0.041,426,1.848,427,2.69,437,2.359,443,3.104,1174,4.502,1175,4.502,1176,5.146,1177,4.502,1178,4.502]],["title/overview.html",[1179,3.107]],["body/overview.html",[0,0.177,1,0.735,22,0.047,24,0.31,42,0.806,44,0.735,46,0.735,49,0.735,51,0.735,54,0.735,56,0.735,58,0.735,60,0.735,62,0.735,65,0.735,70,0.038,71,0.038,144,1.597,145,2.683,258,2.325,426,1.938,427,3.523,428,2.325,429,3.162,430,3.162,431,3.162,432,2.325,433,3.162,434,3.162,435,3.162,436,3.162,437,2.665,438,3.838,439,2.683,669,1.597,1179,3.162,1180,3.89]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":149,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["0.0001",{"_index":741,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.001",{"_index":777,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.0045",{"_index":740,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.01",{"_index":300,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["0.065",{"_index":698,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.1",{"_index":715,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.2",{"_index":724,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.25",{"_index":141,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["0.3",{"_index":722,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.45",{"_index":745,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.5",{"_index":142,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["0.7",{"_index":757,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.8.26",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["000",{"_index":200,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["1",{"_index":143,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSearchComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/SliderControllerComponent.html":{}}}],["1.0.2",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":423,"title":{},"body":{"components/AppLayoutComponent.html":{},"injectables/EffectsService.html":{}}}],["1.25",{"_index":1096,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["1.5",{"_index":738,"title":{},"body":{"injectables/EffectsService.html":{}}}],["10",{"_index":223,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["100",{"_index":224,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["1000",{"_index":767,"title":{},"body":{"injectables/EffectsService.html":{}}}],["10000",{"_index":747,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1024",{"_index":798,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1024x768",{"_index":592,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["10px",{"_index":206,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["12",{"_index":1180,"title":{},"body":{"overview.html":{}}}],["125",{"_index":838,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1280x1024",{"_index":589,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["1280x720",{"_index":591,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["1280x800",{"_index":590,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["135",{"_index":974,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["1360x768",{"_index":588,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["1366x768",{"_index":587,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["150",{"_index":748,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1500",{"_index":731,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16",{"_index":147,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{},"components/SliderControllerComponent.html":{}}}],["16000",{"_index":844,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1600x900",{"_index":585,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["16384",{"_index":704,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1680x1050",{"_index":586,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["16x",{"_index":255,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["180",{"_index":727,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1920x1080",{"_index":584,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["1920x1200",{"_index":583,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["2",{"_index":144,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["2.1.1",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":1083,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["2.5.4",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":751,"title":{},"body":{"injectables/EffectsService.html":{}}}],["200",{"_index":808,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2000",{"_index":753,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2048",{"_index":799,"title":{},"body":{"injectables/EffectsService.html":{}}}],["22050",{"_index":752,"title":{},"body":{"injectables/EffectsService.html":{}}}],["250",{"_index":839,"title":{},"body":{"injectables/EffectsService.html":{}}}],["256",{"_index":703,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2px",{"_index":203,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["2x",{"_index":252,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["3",{"_index":257,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["3.0",{"_index":35,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["3.5",{"_index":700,"title":{},"body":{"injectables/EffectsService.html":{}}}],["30",{"_index":726,"title":{},"body":{"injectables/EffectsService.html":{}}}],["3000",{"_index":769,"title":{},"body":{"injectables/EffectsService.html":{}}}],["32",{"_index":148,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["32x",{"_index":256,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["360",{"_index":226,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["4",{"_index":145,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{},"overview.html":{}}}],["40",{"_index":772,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4000",{"_index":841,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4096",{"_index":702,"title":{},"body":{"injectables/EffectsService.html":{}}}],["440",{"_index":775,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4x",{"_index":253,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["5",{"_index":259,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["50",{"_index":171,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["500",{"_index":730,"title":{},"body":{"injectables/EffectsService.html":{}}}],["512",{"_index":797,"title":{},"body":{"injectables/EffectsService.html":{}}}],["6",{"_index":260,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{}}}],["6.0.0",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":1126,"title":{},"body":{"index.html":{}}}],["64",{"_index":837,"title":{},"body":{"injectables/EffectsService.html":{}}}],["700",{"_index":729,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8",{"_index":146,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["8000",{"_index":842,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8192",{"_index":800,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8x",{"_index":254,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_",{"_index":961,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["_contain",{"_index":994,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["_wave",{"_index":188,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_wave').offsetheight",{"_index":182,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["a.id",{"_index":557,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["about'},{'nam",{"_index":41,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["about.compon",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["about.component.css",{"_index":15,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.t",{"_index":8,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.ts:8",{"_index":20,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about/app",{"_index":7,"title":{},"body":{"components/AppAboutComponent.html":{},"modules/AppModule.html":{}}}],["abstractcontrol",{"_index":312,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["ac",{"_index":682,"title":{},"body":{"injectables/EffectsService.html":{}}}],["access",{"_index":1163,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":1030,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["activ",{"_index":166,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["activeloop",{"_index":85,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["activeloopregion",{"_index":86,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["actual_compon",{"_index":69,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["actualconfig",{"_index":321,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualconfig.default",{"_index":325,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualconfig.step",{"_index":330,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualconfig.valu",{"_index":333,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualheight",{"_index":996,"title":{},"body":{"injectables/SizeService.html":{}}}],["actualwidth",{"_index":997,"title":{},"body":{"injectables/SizeService.html":{}}}],["addcu",{"_index":95,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["addeffect",{"_index":672,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addeffect(effect",{"_index":678,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addsong",{"_index":867,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["addsong(song",{"_index":871,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["adjusteqvalu",{"_index":834,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(0.75",{"_index":840,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(bass0",{"_index":836,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(bass1",{"_index":845,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(trebble0",{"_index":843,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(trebble1",{"_index":846,"title":{},"body":{"injectables/EffectsService.html":{}}}],["advanc",{"_index":833,"title":{},"body":{"injectables/EffectsService.html":{}}}],["afterviewinit",{"_index":78,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppVolumeComponent.html":{}}}],["algorithmindex",{"_index":759,"title":{},"body":{"injectables/EffectsService.html":{}}}],["allpass",{"_index":785,"title":{},"body":{"injectables/EffectsService.html":{}}}],["analog",{"_index":801,"title":{},"body":{"injectables/EffectsService.html":{}}}],["angular",{"_index":1123,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":315,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["appaboutcompon",{"_index":1,"title":{"components/AppAboutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appcompon",{"_index":42,"title":{"components/AppComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appdeckcompon",{"_index":44,"title":{"components/AppDeckComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appeffectscreatorcompon",{"_index":46,"title":{"components/AppEffectsCreatorComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["applayoutcompon",{"_index":49,"title":{"components/AppLayoutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appli",{"_index":743,"title":{},"body":{"injectables/EffectsService.html":{}}}],["applic",{"_index":416,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["applyeffect",{"_index":96,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["applyeffect(i",{"_index":120,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["appmodul",{"_index":427,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmusiclistcompon",{"_index":51,"title":{"components/AppMusicListComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["approutingmodul",{"_index":437,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsearchcompon",{"_index":54,"title":{"components/AppSearchComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appsettingscompon",{"_index":56,"title":{"components/AppSettingsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["apptabscompon",{"_index":58,"title":{"components/AppTabsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appvolumecompon",{"_index":60,"title":{"components/AppVolumeComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["argument",{"_index":607,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["arraybuff",{"_index":906,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["artifact",{"_index":1140,"title":{},"body":{"index.html":{}}}],["artist",{"_index":504,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["attack",{"_index":766,"title":{},"body":{"injectables/EffectsService.html":{}}}],["attribut",{"_index":28,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["audiocontext",{"_index":904,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["audiodata",{"_index":908,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["auto",{"_index":550,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{}}}],["automakeup",{"_index":773,"title":{},"body":{"injectables/EffectsService.html":{}}}],["automat",{"_index":582,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"index.html":{}}}],["automod",{"_index":790,"title":{},"body":{"injectables/EffectsService.html":{}}}],["avail",{"_index":1178,"title":{},"body":{"modules.html":{}}}],["availableeffect",{"_index":535,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["availableeffect.nam",{"_index":594,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["averag",{"_index":910,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["b.id).id",{"_index":558,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["back",{"_index":381,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["background",{"_index":198,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["band.f",{"_index":856,"title":{},"body":{"injectables/EffectsService.html":{}}}],["band.typ",{"_index":851,"title":{},"body":{"injectables/EffectsService.html":{}}}],["band.valu",{"_index":853,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bandpass",{"_index":780,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basefrequ",{"_index":791,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basemodulationfrequ",{"_index":728,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basic",{"_index":693,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bass0",{"_index":635,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["bass1",{"_index":636,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["be",{"_index":422,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["beat",{"_index":87,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["between",{"_index":804,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bigval",{"_index":1087,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["bit",{"_index":713,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bitcrush",{"_index":712,"title":{},"body":{"injectables/EffectsService.html":{}}}],["boolean",{"_index":292,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["bootstrap",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bounc",{"_index":803,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bpm",{"_index":88,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["bpm*(1+pitch/100",{"_index":251,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["break",{"_index":989,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["brows",{"_index":1176,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["buffer",{"_index":907,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["buffer.getchanneldata(0",{"_index":914,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["buffer.getchanneldata(1",{"_index":916,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["buffer.numberofchannel",{"_index":912,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["buffers",{"_index":701,"title":{},"body":{"injectables/EffectsService.html":{}}}],["build",{"_index":1139,"title":{},"body":{"index.html":{}}}],["builder",{"_index":283,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["bypass",{"_index":732,"title":{},"body":{"injectables/EffectsService.html":{}}}],["c.map(a",{"_index":555,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["cc",{"_index":34,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["chang",{"_index":537,"title":{},"body":{"components/AppSettingsComponent.html":{},"index.html":{}}}],["change(i",{"_index":541,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["changepitch",{"_index":97,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["changes",{"_index":538,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/SizeService.html":{}}}],["changesize(width",{"_index":1001,"title":{},"body":{"injectables/SizeService.html":{}}}],["changevolum",{"_index":644,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["changevolume(deck",{"_index":648,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["channel",{"_index":805,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{}}}],["channel1data",{"_index":913,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["channel1data.length",{"_index":918,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["channel2data",{"_index":915,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["check",{"_index":1160,"title":{},"body":{"index.html":{}}}],["checknam",{"_index":275,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["choos",{"_index":530,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["choru",{"_index":734,"title":{},"body":{"injectables/EffectsService.html":{}}}],["class",{"_index":25,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["cli",{"_index":1124,"title":{},"body":{"index.html":{}}}],["click)=\"removeeffect",{"_index":392,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["closest",{"_index":981,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["closest(el",{"_index":993,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["clunki",{"_index":363,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["cluster_appmodul",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1136,"title":{},"body":{"index.html":{}}}],["color",{"_index":199,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["compodoc",{"_index":1164,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":39,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["components/app",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["components/roulett",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["components/slid",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["compressor",{"_index":760,"title":{},"body":{"injectables/EffectsService.html":{}}}],["comput",{"_index":510,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["config",{"_index":266,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["config.nam",{"_index":387,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["config.valu",{"_index":388,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["config[actualconfig.nam",{"_index":324,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["configslid",{"_index":928,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["configur",{"_index":386,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["console.log('error",{"_index":899,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["const",{"_index":173,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{}}}],["constructor(effectserv",{"_index":281,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["constructor(musicservic",{"_index":107,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["constructor(playerservic",{"_index":869,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["constructor(priv",{"_index":168,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["constructor(sizeservic",{"_index":401,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["contain",{"_index":186,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["content",{"_index":27,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["context",{"_index":903,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["context.decodeaudiodata(reader1.result",{"_index":905,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["control",{"_index":67,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["control.valu",{"_index":369,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["controller'},{'nam",{"_index":64,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.compon",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["controller.component.css",{"_index":926,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.html",{"_index":927,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.t",{"_index":923,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:104",{"_index":1064,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:123",{"_index":1066,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:146",{"_index":1068,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:158",{"_index":1070,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:173",{"_index":1072,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:185",{"_index":1074,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:196",{"_index":1076,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:20",{"_index":936,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:21",{"_index":950,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:216",{"_index":1045,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:22",{"_index":952,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:221",{"_index":1046,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:226",{"_index":1043,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:229",{"_index":1044,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":949,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:24",{"_index":951,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:25",{"_index":1051,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":935,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:27",{"_index":1052,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:29",{"_index":1054,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:39",{"_index":1056,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:44",{"_index":945,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:49",{"_index":946,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:53",{"_index":1058,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:54",{"_index":948,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:60",{"_index":941,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:63",{"_index":944,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:67",{"_index":939,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:70",{"_index":1060,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:89",{"_index":1062,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller/roulett",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{}}}],["controller/slid",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"components/SliderControllerComponent.html":{}}}],["controlvalueaccessor",{"_index":924,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["core",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["creat",{"_index":383,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["createeffect",{"_index":276,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["createeffects(ac",{"_index":680,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeq",{"_index":673,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeq(bass0",{"_index":683,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeqeffect",{"_index":674,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeqeffect(deck",{"_index":685,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createloop",{"_index":98,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["createloop(loop",{"_index":123,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["creator",{"_index":263,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{}}}],["creator'},{'nam",{"_index":48,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["creator.compon",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["creator.component.css",{"_index":264,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.html",{"_index":265,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.t",{"_index":262,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["creator.component.ts:11",{"_index":302,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:12",{"_index":301,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:13",{"_index":308,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:14",{"_index":309,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:15",{"_index":303,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:16",{"_index":304,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:17",{"_index":299,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:18",{"_index":306,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:19",{"_index":307,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:20",{"_index":310,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:21",{"_index":285,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:27",{"_index":297,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:51",{"_index":294,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:55",{"_index":295,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:58",{"_index":290,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:61",{"_index":288,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:73",{"_index":287,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:93",{"_index":293,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator/app",{"_index":261,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["cue",{"_index":89,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["cue['perc",{"_index":233,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["cue['po",{"_index":236,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["cursor",{"_index":160,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["cursor.cr",{"_index":194,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["curveamount",{"_index":758,"title":{},"body":{"injectables/EffectsService.html":{}}}],["custom_text_input_control_value_accessor",{"_index":925,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["customshowtimestyl",{"_index":197,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["cutoff",{"_index":697,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dark",{"_index":580,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["data",{"_index":213,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["data.beat",{"_index":221,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["data.bpm",{"_index":219,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["data.song",{"_index":217,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["decent",{"_index":718,"title":{},"body":{"injectables/EffectsService.html":{}}}],["decimaladjust",{"_index":360,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["decimaladjust('round",{"_index":368,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["decimaladjust(typ",{"_index":371,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["deck",{"_index":80,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{}}}],["deck'},{'nam",{"_index":45,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deck.compon",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["deck.component.css",{"_index":81,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.html",{"_index":82,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.t",{"_index":77,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:100",{"_index":122,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:104",{"_index":129,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:109",{"_index":117,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:121",{"_index":132,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:124",{"_index":126,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:127",{"_index":124,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:141",{"_index":128,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:16",{"_index":116,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:18",{"_index":151,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:20",{"_index":152,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:21",{"_index":136,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:22",{"_index":135,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:23",{"_index":140,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:24",{"_index":150,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:25",{"_index":139,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:26",{"_index":133,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:27",{"_index":134,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:28",{"_index":110,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:81",{"_index":130,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:86",{"_index":127,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:93",{"_index":125,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:97",{"_index":121,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck/app",{"_index":76,"title":{},"body":{"components/AppDeckComponent.html":{},"modules/AppModule.html":{}}}],["deck[0].backend.ac.createbiquadfilt",{"_index":849,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck[1].backend.ac.createbiquadfilt",{"_index":859,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck_",{"_index":187,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deckload",{"_index":864,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["decknumb",{"_index":106,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["decksong",{"_index":865,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["declar",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":1049,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["default",{"_index":137,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["defaultstep",{"_index":267,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["defin",{"_index":19,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["delay",{"_index":739,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytim",{"_index":746,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytimeleft",{"_index":806,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytimeright",{"_index":807,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deletesong",{"_index":868,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["deletesong(song",{"_index":873,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["depend",{"_index":428,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":721,"title":{},"body":{"injectables/EffectsService.html":{}}}],["descript",{"_index":735,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dev",{"_index":1132,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1127,"title":{},"body":{"index.html":{}}}],["devic",{"_index":420,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["direct",{"_index":68,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1138,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1143,"title":{},"body":{"index.html":{}}}],["disabled]=\"\">remov",{"_index":393,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["dist",{"_index":1142,"title":{},"body":{"index.html":{}}}],["document",{"_index":1162,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('deck_",{"_index":180,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["document:click",{"_index":934,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["document:click(ev",{"_index":937,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["drag",{"_index":508,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["drive",{"_index":756,"title":{},"body":{"injectables/EffectsService.html":{}}}],["drop",{"_index":630,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drope",{"_index":600,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["droped(ev",{"_index":611,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drylevel",{"_index":750,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dynam",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":379,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["e2",{"_index":1154,"title":{},"body":{"index.html":{}}}],["eff",{"_index":174,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["eff.filter(_",{"_index":176,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["effect",{"_index":47,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["effect.id",{"_index":818,"title":{},"body":{"injectables/EffectsService.html":{}}}],["effect.nam",{"_index":348,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectscr",{"_index":671,"title":{},"body":{"injectables/EffectsService.html":{}}}],["effectscreatorarray",{"_index":268,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectserv",{"_index":286,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["effectsnum",{"_index":536,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["effectsservic",{"_index":282,"title":{"injectables/EffectsService.html":{}},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["effectstruct",{"_index":269,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectstruct.descript",{"_index":385,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectstruct.nam",{"_index":384,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["el",{"_index":982,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.match",{"_index":984,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.mozmatchesselector",{"_index":986,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.msmatchesselector",{"_index":987,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.parentel",{"_index":990,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.webkitmatchesselector",{"_index":985,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["element",{"_index":992,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["elementref",{"_index":1048,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["end",{"_index":1153,"title":{},"body":{"index.html":{}}}],["english",{"_index":578,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["eq",{"_index":686,"title":{},"body":{"injectables/EffectsService.html":{}}}],["eq[0].map(band",{"_index":848,"title":{},"body":{"injectables/EffectsService.html":{}}}],["eq[1].map(band",{"_index":858,"title":{},"body":{"injectables/EffectsService.html":{}}}],["error",{"_index":898,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["event",{"_index":608,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["event.preventdefault",{"_index":622,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.stoppropag",{"_index":623,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.target",{"_index":991,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["excursionoctav",{"_index":792,"title":{},"body":{"injectables/EffectsService.html":{}}}],["execut",{"_index":1150,"title":{},"body":{"index.html":{}}}],["exp",{"_index":372,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["f",{"_index":835,"title":{},"body":{"injectables/EffectsService.html":{}}}],["fals",{"_index":167,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["feedback",{"_index":723,"title":{},"body":{"injectables/EffectsService.html":{}}}],["fff",{"_index":201,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["fi",{"_index":796,"title":{},"body":{"injectables/EffectsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["filechangeev",{"_index":520,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filechangeevent(fileinput",{"_index":523,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["fileinput",{"_index":525,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filelist",{"_index":527,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["fileread",{"_index":892,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["fill",{"_index":970,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fillheight",{"_index":1036,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillleft",{"_index":1038,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filloffset",{"_index":1094,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillsiz",{"_index":1025,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filltop",{"_index":1037,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillwidth",{"_index":1035,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filter",{"_index":695,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.frequency.valu",{"_index":855,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.gain.valu",{"_index":852,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.q.valu",{"_index":854,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.typ",{"_index":850,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter0",{"_index":847,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter1",{"_index":857,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filtertyp",{"_index":778,"title":{},"body":{"injectables/EffectsService.html":{}}}],["finish",{"_index":209,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["flag",{"_index":1145,"title":{},"body":{"index.html":{}}}],["float",{"_index":364,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["fn",{"_index":942,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fold",{"_index":929,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["font",{"_index":204,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["forbidden",{"_index":367,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["formbuild",{"_index":284,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["formgroup",{"_index":298,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["formsmodul",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["forwardref",{"_index":953,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["freepik",{"_index":37,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["frequenc",{"_index":774,"title":{},"body":{"injectables/EffectsService.html":{}}}],["function",{"_index":357,"title":{"miscellaneous/functions.html":{}},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1156,"title":{},"body":{"index.html":{}}}],["gain",{"_index":763,"title":{},"body":{"injectables/EffectsService.html":{}}}],["gener",{"_index":1122,"title":{},"body":{"index.html":{}}}],["get",{"_index":1119,"title":{"index.html":{}},"body":{}}],["geteffect",{"_index":675,"title":{},"body":{"injectables/EffectsService.html":{}}}],["geteffectscr",{"_index":676,"title":{},"body":{"injectables/EffectsService.html":{}}}],["getfillheight",{"_index":1063,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillleft",{"_index":1067,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfilltop",{"_index":1065,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillwidth",{"_index":1061,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getheight",{"_index":998,"title":{},"body":{"injectables/SizeService.html":{}}}],["getthumbheight",{"_index":1055,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbleft",{"_index":1059,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbtop",{"_index":1057,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbwidth",{"_index":1053,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackheight",{"_index":1071,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackleft",{"_index":1075,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettracktop",{"_index":1073,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackwidth",{"_index":1069,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getwidth",{"_index":999,"title":{},"body":{"injectables/SizeService.html":{}}}],["go",{"_index":1159,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1177,"title":{},"body":{"modules.html":{}}}],["height",{"_index":179,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"injectables/SizeService.html":{}}}],["help",{"_index":1157,"title":{},"body":{"index.html":{}}}],["here",{"_index":509,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["high",{"_index":666,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["higher",{"_index":419,"title":{},"body":{"components/AppLayoutComponent.html":{},"injectables/EffectsService.html":{}}}],["highpass",{"_index":779,"title":{},"body":{"injectables/EffectsService.html":{}}}],["highshelf",{"_index":782,"title":{},"body":{"injectables/EffectsService.html":{}}}],["hostlisten",{"_index":602,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["hostlistener('document:click",{"_index":979,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["hostlistener('window:dragleav",{"_index":628,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["hostlistener('window:dragov",{"_index":626,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["htmlelement",{"_index":1047,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["http://localhost:4200",{"_index":1134,"title":{},"body":{"index.html":{}}}],["http://virtualdj",{"_index":1171,"title":{},"body":{"index.html":{}}}],["http://virtualdj.surge.sh",{"_index":1173,"title":{},"body":{"index.html":{}}}],["https://clm2609.gitlab.io/tfg",{"_index":1165,"title":{},"body":{"index.html":{}}}],["i+1",{"_index":249,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["icon",{"_index":29,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["id",{"_index":692,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["ie",{"_index":811,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ignor",{"_index":955,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["includes(lowsearch",{"_index":502,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["index",{"_index":83,"title":{"index.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["inject",{"_index":669,"title":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/SizeService.html":{}},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/SizeService.html":{},"overview.html":{}}}],["input",{"_index":105,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["intens",{"_index":787,"title":{},"body":{"injectables/EffectsService.html":{}}}],["isdefin",{"_index":277,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["isdefined(someth",{"_index":289,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["isnan(valu",{"_index":374,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["j",{"_index":542,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["j+1",{"_index":593,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["jest",{"_index":1152,"title":{},"body":{"index.html":{}}}],["js",{"_index":362,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"dependencies.html":{}}}],["json",{"_index":270,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["json.parse(effect",{"_index":320,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["json.parse(json.stringify(effect",{"_index":561,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.availableeffects.find(a",{"_index":569,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.effect",{"_index":816,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.parse(json.stringify(this.effectscr",{"_index":817,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.parse(json.stringify(this.playerserv.effect",{"_index":552,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(localstorage.getitem('effect",{"_index":861,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.stringify(this.effect",{"_index":825,"title":{},"body":{"injectables/EffectsService.html":{}}}],["key",{"_index":359,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["knee",{"_index":771,"title":{},"body":{"injectables/EffectsService.html":{}}}],["languag",{"_index":576,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["latest",{"_index":1168,"title":{},"body":{"index.html":{}}}],["layout",{"_index":396,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":50,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["layout.compon",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["layout.component.css",{"_index":397,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.html",{"_index":398,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.t",{"_index":395,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:10",{"_index":405,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:11",{"_index":404,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:12",{"_index":403,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout/app",{"_index":394,"title":{},"body":{"components/AppLayoutComponent.html":{},"modules/AppModule.html":{}}}],["left",{"_index":708,"title":{},"body":{"injectables/EffectsService.html":{}}}],["legend",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["length",{"_index":917,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["licens",{"_index":33,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["light",{"_index":579,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["list",{"_index":470,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list'},{'nam",{"_index":53,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["list.compon",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":471,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.html",{"_index":472,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.t",{"_index":469,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:11",{"_index":486,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:13",{"_index":485,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:14",{"_index":487,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:15",{"_index":479,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:30",{"_index":481,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:33",{"_index":483,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:36",{"_index":484,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list/app",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"components/AppMusicListComponent.html":{}}}],["lo",{"_index":795,"title":{},"body":{"injectables/EffectsService.html":{}}}],["load",{"_index":506,"title":{},"body":{"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["load(deck",{"_index":875,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.servic",{"_index":154,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["loader.service.t",{"_index":863,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:10",{"_index":885,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:11",{"_index":883,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:12",{"_index":878,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:13",{"_index":882,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:14",{"_index":879,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:15",{"_index":870,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:19",{"_index":876,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:59",{"_index":872,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:63",{"_index":874,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:9",{"_index":886,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loadondeck",{"_index":476,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loadondeck(deck",{"_index":480,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loc",{"_index":1092,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["localstorage.getitem('effect",{"_index":860,"title":{},"body":{"injectables/EffectsService.html":{}}}],["localstorage.getitem('height",{"_index":1013,"title":{},"body":{"injectables/SizeService.html":{}}}],["localstorage.getitem('width",{"_index":1012,"title":{},"body":{"injectables/SizeService.html":{}}}],["localstorage.removeitem('height",{"_index":1023,"title":{},"body":{"injectables/SizeService.html":{}}}],["localstorage.removeitem('width",{"_index":1022,"title":{},"body":{"injectables/SizeService.html":{}}}],["localstorage.setitem('effect",{"_index":824,"title":{},"body":{"injectables/EffectsService.html":{}}}],["localstorage.setitem('height",{"_index":1021,"title":{},"body":{"injectables/SizeService.html":{}}}],["localstorage.setitem('width",{"_index":1020,"title":{},"body":{"injectables/SizeService.html":{}}}],["loop",{"_index":90,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["low",{"_index":668,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["lowpass",{"_index":742,"title":{},"body":{"injectables/EffectsService.html":{}}}],["lowsearch",{"_index":499,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["lowshelf",{"_index":781,"title":{},"body":{"injectables/EffectsService.html":{}}}],["made",{"_index":30,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["makeup",{"_index":762,"title":{},"body":{"injectables/EffectsService.html":{}}}],["makeupgain",{"_index":765,"title":{},"body":{"injectables/EffectsService.html":{}}}],["mastermultipli",{"_index":663,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["match",{"_index":71,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchesselector",{"_index":983,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["matchesselector.call(el",{"_index":988,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["math",{"_index":366,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["math.max(0",{"_index":1095,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["math.max(valoranterior",{"_index":821,"title":{},"body":{"injectables/EffectsService.html":{}}}],["math[type](+(value[0",{"_index":378,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["math[type](valu",{"_index":373,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["max",{"_index":737,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["maxim",{"_index":599,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["method",{"_index":94,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["mid",{"_index":667,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["mid0",{"_index":637,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["mid1",{"_index":638,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["min",{"_index":736,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["miscellan",{"_index":1116,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modul",{"_index":426,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moog",{"_index":694,"title":{},"body":{"injectables/EffectsService.html":{}}}],["moogfilt",{"_index":696,"title":{},"body":{"injectables/EffectsService.html":{}}}],["more",{"_index":1158,"title":{},"body":{"index.html":{}}}],["mouseev",{"_index":938,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["multi",{"_index":958,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music",{"_index":52,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["music.filter(mu",{"_index":500,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musiclist",{"_index":473,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicload",{"_index":866,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["musicloaderservic",{"_index":108,"title":{"injectables/MusicLoaderService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["musicservic",{"_index":114,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["musicservice.mus",{"_index":490,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicservice.music$.subscribe(a",{"_index":492,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicsubscript",{"_index":165,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppVolumeComponent.html":{}}}],["musictempo",{"_index":888,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namechar",{"_index":271,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["nan",{"_index":375,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["navig",{"_index":1133,"title":{},"body":{"index.html":{}}}],["need",{"_index":361,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["new",{"_index":828,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/SizeService.html":{},"index.html":{}}}],["ng",{"_index":1130,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":954,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ngafterviewinit",{"_index":178,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["ngmodel)]=\"selectedeffectremov",{"_index":390,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["ngmodul",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":227,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["noop",{"_index":956,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["normalize('nfd",{"_index":350,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["normfreq",{"_index":714,"title":{},"body":{"injectables/EffectsService.html":{}}}],["notch",{"_index":784,"title":{},"body":{"injectables/EffectsService.html":{}}}],["npm",{"_index":1149,"title":{},"body":{"index.html":{}}}],["null",{"_index":248,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["number",{"_index":115,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["number(a.id",{"_index":570,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["number(id",{"_index":827,"title":{},"body":{"injectables/EffectsService.html":{}}}],["number(localstorage.getitem('height",{"_index":1017,"title":{},"body":{"injectables/SizeService.html":{}}}],["number(localstorage.getitem('width",{"_index":1015,"title":{},"body":{"injectables/SizeService.html":{}}}],["number(this.selectedeffects[i][j",{"_index":571,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["number(valu",{"_index":412,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["onchangecallback",{"_index":960,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ondestroy",{"_index":79,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ondocumentclick(ev",{"_index":980,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ondragover(ev",{"_index":627,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ontouchedcallback",{"_index":959,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["opac",{"_index":196,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["option",{"_index":113,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outputgain",{"_index":755,"title":{},"body":{"injectables/EffectsService.html":{}}}],["overdr",{"_index":754,"title":{},"body":{"injectables/EffectsService.html":{}}}],["overview",{"_index":1179,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1101,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":202,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["pan",{"_index":710,"title":{},"body":{"injectables/EffectsService.html":{}}}],["panner",{"_index":709,"title":{},"body":{"injectables/EffectsService.html":{}}}],["paramet",{"_index":111,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["pc",{"_index":1086,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["peak",{"_index":783,"title":{},"body":{"injectables/EffectsService.html":{}}}],["percent",{"_index":971,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["phaser",{"_index":716,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ping",{"_index":705,"title":{},"body":{"injectables/EffectsService.html":{}}}],["pingpongdelay",{"_index":707,"title":{},"body":{"injectables/EffectsService.html":{}}}],["pitch",{"_index":91,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["player.servic",{"_index":887,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["playerserv",{"_index":539,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["playerservic",{"_index":109,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["playpaus",{"_index":99,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["plugin",{"_index":193,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["point",{"_index":365,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["pong",{"_index":706,"title":{},"body":{"injectables/EffectsService.html":{}}}],["possibl",{"_index":720,"title":{},"body":{"injectables/EffectsService.html":{}}}],["preparedeffect",{"_index":830,"title":{},"body":{"injectables/EffectsService.html":{}}}],["preparedeffects.push(new",{"_index":831,"title":{},"body":{"injectables/EffectsService.html":{}}}],["privat",{"_index":164,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["prod",{"_index":1144,"title":{},"body":{"index.html":{}}}],["product",{"_index":1146,"title":{},"body":{"index.html":{}}}],["progresscolor",{"_index":191,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["project",{"_index":1121,"title":{},"body":{"index.html":{}}}],["properli",{"_index":418,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["properti",{"_index":84,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["protractor",{"_index":1155,"title":{},"body":{"index.html":{}}}],["provid",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["providedin",{"_index":815,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/SizeService.html":{}}}],["purpl",{"_index":192,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["q",{"_index":776,"title":{},"body":{"injectables/EffectsService.html":{}}}],["queri",{"_index":474,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["rang",{"_index":719,"title":{},"body":{"injectables/EffectsService.html":{}}}],["rate",{"_index":717,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ratio",{"_index":770,"title":{},"body":{"injectables/EffectsService.html":{}}}],["reactiveformsmodul",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["reader",{"_index":891,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onerror",{"_index":897,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onload",{"_index":894,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.readasdataurl(song",{"_index":893,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.result",{"_index":896,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader1",{"_index":900,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader1.onload",{"_index":902,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader1.readasarraybuffer(song",{"_index":901,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["readm",{"_index":1161,"title":{},"body":{"index.html":{}}}],["recievedfil",{"_index":521,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["recievedfiles(fil",{"_index":526,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["recommend",{"_index":425,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["red",{"_index":190,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["region",{"_index":162,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["regions.cr",{"_index":207,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["registeronchang",{"_index":930,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registeronchange(fn",{"_index":940,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouch",{"_index":931,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouched(fn",{"_index":943,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["releas",{"_index":768,"title":{},"body":{"injectables/EffectsService.html":{}}}],["reload",{"_index":1135,"title":{},"body":{"index.html":{}}}],["remov",{"_index":389,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["removeeffect",{"_index":278,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["removeeffect(id",{"_index":690,"title":{},"body":{"injectables/EffectsService.html":{}}}],["removesong",{"_index":477,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["removesong(song",{"_index":482,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["replace(/[\\u0300",{"_index":351,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["requestanimationfram",{"_index":183,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["reset",{"_index":258,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["resetcu",{"_index":100,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["resetdisc",{"_index":101,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["reseteq",{"_index":645,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["reseteq(deck",{"_index":650,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["resetloop",{"_index":102,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["resetpitch",{"_index":103,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["resetremov",{"_index":279,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["resolut",{"_index":581,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["reson",{"_index":699,"title":{},"body":{"injectables/EffectsService.html":{}}}],["result",{"_index":70,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":118,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["right",{"_index":711,"title":{},"body":{"injectables/EffectsService.html":{}}}],["root",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/SizeService.html":{}}}],["root'},{'nam",{"_index":43,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["rotat",{"_index":92,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["roulett",{"_index":63,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["roulettecontrollercompon",{"_index":62,"title":{"components/RouletteControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["roundicon",{"_index":36,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["rout",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1129,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":157,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/SizeService.html":{},"dependencies.html":{}}}],["safari",{"_index":810,"title":{},"body":{"injectables/EffectsService.html":{}}}],["scaffold",{"_index":1137,"title":{},"body":{"index.html":{}}}],["search",{"_index":507,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{}}}],["search'},{'nam",{"_index":55,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["search.compon",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.css",{"_index":518,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.html",{"_index":519,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.t",{"_index":517,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:15",{"_index":524,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:19",{"_index":528,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:9",{"_index":522,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search/app",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"components/AppSearchComponent.html":{}}}],["searchmus",{"_index":497,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchmusic(this.queri",{"_index":503,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchqueri",{"_index":498,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["see",{"_index":1167,"title":{},"body":{"index.html":{}}}],["selectedeffect",{"_index":272,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["selectedeffectremov",{"_index":273,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["sensit",{"_index":794,"title":{},"body":{"injectables/EffectsService.html":{}}}],["serv",{"_index":1131,"title":{},"body":{"index.html":{}}}],["server",{"_index":1128,"title":{},"body":{"index.html":{}}}],["services/effects.servic",{"_index":311,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["services/mus",{"_index":153,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["services/player.servic",{"_index":155,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["services/size.servic",{"_index":406,"title":{},"body":{"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{}}}],["set",{"_index":532,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{}}}],["setact",{"_index":601,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["setactive(act",{"_index":615,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["seteq",{"_index":646,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["setinterv",{"_index":169,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["settings'},{'nam",{"_index":57,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["settings.compon",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["settings.component.css",{"_index":533,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.html",{"_index":534,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.t",{"_index":531,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:10",{"_index":540,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:16",{"_index":548,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":547,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":546,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":545,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:20",{"_index":549,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:21",{"_index":551,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:35",{"_index":543,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:42",{"_index":544,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings/app",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"components/AppSettingsComponent.html":{}}}],["setvalu",{"_index":1029,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell",{"_index":1026,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetheight",{"_index":1082,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetwidth",{"_index":1081,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shellview",{"_index":1027,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shift",{"_index":376,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["shownmus",{"_index":475,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["showtim",{"_index":195,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["signal",{"_index":744,"title":{},"body":{"injectables/EffectsService.html":{}}}],["size",{"_index":205,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["size[1",{"_index":575,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["sizeservic",{"_index":402,"title":{"injectables/SizeService.html":{}},"body":{"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/SizeService.html":{}}}],["sizeservice.getheight",{"_index":410,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["sizeservice.getwidth",{"_index":408,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["sizeservice.height$.subscribe(valu",{"_index":413,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["sizeservice.width$.subscribe(valu",{"_index":411,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["slider",{"_index":66,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["slidercontrollercompon",{"_index":65,"title":{"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["smallval",{"_index":1080,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["smashicon",{"_index":31,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["someth",{"_index":291,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["song",{"_index":93,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["song.nam",{"_index":250,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["sound",{"_index":802,"title":{},"body":{"injectables/EffectsService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["spanish",{"_index":577,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["src/.../app",{"_index":1117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/app",{"_index":6,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/roulett",{"_index":922,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["src/app/components/slid",{"_index":1024,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["src/app/services/effects.service.t",{"_index":670,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:226",{"_index":688,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:229",{"_index":689,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:232",{"_index":679,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:238",{"_index":691,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:242",{"_index":681,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:251",{"_index":684,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:366",{"_index":687,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:384",{"_index":677,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:75",{"_index":812,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:8",{"_index":733,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/mus",{"_index":862,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["src/app/services/size.service.t",{"_index":995,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:10",{"_index":1006,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:11",{"_index":1005,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:12",{"_index":1011,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:13",{"_index":1000,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:23",{"_index":1002,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:36",{"_index":1004,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:40",{"_index":1003,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:8",{"_index":1009,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:9",{"_index":1007,"title":{},"body":{"injectables/SizeService.html":{}}}],["stage",{"_index":1169,"title":{},"body":{"index.html":{}}}],["stage.surge.sh",{"_index":1172,"title":{},"body":{"index.html":{}}}],["start",{"_index":505,"title":{"index.html":{}},"body":{"components/AppMusicListComponent.html":{}}}],["startcu",{"_index":104,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["startcue(cu",{"_index":131,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["state",{"_index":1170,"title":{},"body":{"index.html":{}}}],["step",{"_index":370,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{},"miscellaneous/functions.html":{}}}],["stepvalid",{"_index":1118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stepvalidator(actualconfig.step",{"_index":329,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["stepvalidator(step",{"_index":358,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["stereo",{"_index":809,"title":{},"body":{"injectables/EffectsService.html":{}}}],["stereophas",{"_index":725,"title":{},"body":{"injectables/EffectsService.html":{}}}],["stopdrag",{"_index":629,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["store",{"_index":1141,"title":{},"body":{"index.html":{}}}],["string",{"_index":305,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{}}}],["string(mus.nam",{"_index":501,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["style=\"width:250px",{"_index":391,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["subject",{"_index":877,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/SizeService.html":{}}}],["subscript",{"_index":156,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["support",{"_index":1174,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1175,"title":{},"body":{"modules.html":{}}}],["sweep",{"_index":793,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tab",{"_index":596,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs'},{'nam",{"_index":59,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tabs.compon",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.component.css",{"_index":597,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.html",{"_index":598,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.t",{"_index":595,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:10",{"_index":617,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:11",{"_index":618,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:12",{"_index":619,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:13",{"_index":620,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:14",{"_index":616,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:17",{"_index":613,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:19",{"_index":605,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:24",{"_index":612,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:31",{"_index":610,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:37",{"_index":606,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:40",{"_index":614,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs/app",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"components/AppTabsComponent.html":{}}}],["take",{"_index":909,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tempo",{"_index":889,"title":{},"body":{"injectables/MusicLoaderService.html":{},"dependencies.html":{}}}],["test",{"_index":1148,"title":{},"body":{"index.html":{}}}],["tfg",{"_index":1120,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":222,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.activeloop",{"_index":243,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.activeloopregion",{"_index":244,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.activeloopregion.remov",{"_index":247,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.actualheight",{"_index":1016,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.actualwidth",{"_index":1014,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.availableeffect",{"_index":553,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.availableeffects.find(b",{"_index":556,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.beat",{"_index":220,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.bpm",{"_index":218,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.builder.group(config",{"_index":335,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config",{"_index":334,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config.id",{"_index":963,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.config.max",{"_index":965,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.min",{"_index":964,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.valid",{"_index":341,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config.valu",{"_index":345,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config.vert",{"_index":1078,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.config.zindex",{"_index":1099,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.configslid",{"_index":962,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.max",{"_index":973,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.min",{"_index":972,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.cu",{"_index":242,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.cues.length",{"_index":237,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.cues.push(cu",{"_index":239,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.cues.shift",{"_index":238,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.cues[cue].po",{"_index":241,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.deckloader[0].asobserv",{"_index":880,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.deckloader[1].asobserv",{"_index":881,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.decknumb",{"_index":181,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.defaultstep",{"_index":331,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.drag",{"_index":625,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.effect",{"_index":175,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{}}}],["this.effects.filter(effect",{"_index":826,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects.find",{"_index":347,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effects.map(c",{"_index":554,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects.push(effect",{"_index":823,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects.reduce((valoranterior",{"_index":819,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects[0",{"_index":560,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects[1",{"_index":563,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effectscreatorarray",{"_index":316,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectserv.addeffect",{"_index":342,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectserv.geteffect",{"_index":318,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["this.effectserv.geteffectscr",{"_index":317,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectserv.removeeffect(this.selectedeffectremov",{"_index":355,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectstruct",{"_index":319,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectstruct.config",{"_index":322,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectstruct.nam",{"_index":344,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.fills",{"_index":1093,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.fold",{"_index":976,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.height",{"_index":409,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["this.height.asobserv",{"_index":1008,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.height.next(height",{"_index":1019,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.isdefined(actualconfig.min",{"_index":323,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.isdefined(actualconfig.valu",{"_index":332,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.maxim",{"_index":621,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.music.push(song",{"_index":919,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.music.splice(this.music.indexof(song",{"_index":921,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musiclist",{"_index":489,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicloader.asobserv",{"_index":884,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicloader.next(this.mus",{"_index":920,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicservic",{"_index":488,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.musicservice.decksongs$[this.decknumber].subscribe(a",{"_index":212,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.musicservice.deletesong(song",{"_index":494,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicservice.load(deck",{"_index":493,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicsubscript",{"_index":211,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.musicsubscription.unsubscrib",{"_index":228,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.nam",{"_index":343,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.name.length",{"_index":353,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.namechar",{"_index":354,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.onchangecallback",{"_index":978,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.slid",{"_index":1100,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.valu",{"_index":975,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.ontouchedcallback",{"_index":977,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.pitch",{"_index":225,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerserv.effects$[0].subscribe(effect",{"_index":559,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.effects$[1].subscribe(effect",{"_index":562,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.saveeffect",{"_index":568,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerservic",{"_index":890,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.playerservice.activateeffect(this.decknumb",{"_index":231,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.createloop",{"_index":245,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.effects$[this.decknumber].subscribe(effect",{"_index":172,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.getcurrenttime(this.decknumb",{"_index":234,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.getduration(this.decknumb",{"_index":235,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.isplaying(this.decknumb",{"_index":230,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.load(deck",{"_index":895,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.playerservice.on(this.decknumb",{"_index":208,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.playfromposition(this.decknumb",{"_index":240,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.playpause(this.decknumb",{"_index":229,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.sav",{"_index":184,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.setpitch(deck",{"_index":232,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.queri",{"_index":495,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.recievedfiles(event.datatransfer.fil",{"_index":624,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.recievedfiles(fileinput.target.fil",{"_index":529,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["this.reset",{"_index":346,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.resetcu",{"_index":214,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.resetdisc",{"_index":210,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.reseteq(0",{"_index":665,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["this.resetloop",{"_index":246,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.resetpitch",{"_index":215,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.resetremov",{"_index":356,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.rot",{"_index":170,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["this.selectedeffect",{"_index":336,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["this.selectedeffectremov",{"_index":337,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.shel",{"_index":1079,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shellview.nativeel",{"_index":1097,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shownmus",{"_index":496,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.siz",{"_index":566,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.size.split('x",{"_index":573,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.sizeservice.changesize(nul",{"_index":572,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.sizeservice.changesize(size[0",{"_index":574,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.sizeservice.getheight",{"_index":565,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.sizeservice.getwidth",{"_index":564,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.slid",{"_index":1085,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.song",{"_index":216,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.thumbheight",{"_index":1089,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.thumbwidth",{"_index":1090,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.updatemus",{"_index":491,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.validnam",{"_index":340,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.valu",{"_index":966,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.volumemast",{"_index":664,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["this.width",{"_index":407,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["this.width.asobserv",{"_index":1010,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.width.next(width",{"_index":1018,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.zindex",{"_index":1098,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thought",{"_index":421,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["threshold",{"_index":764,"title":{},"body":{"injectables/EffectsService.html":{}}}],["thumb",{"_index":967,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["thumbheight",{"_index":1032,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbleft",{"_index":1034,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbsiz",{"_index":1088,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbtop",{"_index":1033,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbwidth",{"_index":1031,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["time",{"_index":424,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["tolowercas",{"_index":349,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["track",{"_index":968,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["trackheight",{"_index":1040,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackleft",{"_index":1042,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracksiz",{"_index":1091,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracktop",{"_index":1041,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackwidth",{"_index":1039,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trebble0",{"_index":639,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["trebble1",{"_index":640,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["tremolo",{"_index":786,"title":{},"body":{"injectables/EffectsService.html":{}}}],["true",{"_index":177,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tuna",{"_index":813,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tuna(ac",{"_index":829,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tuna[effect.type](effect.config",{"_index":832,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tunaj",{"_index":814,"title":{},"body":{"injectables/EffectsService.html":{},"dependencies.html":{}}}],["two",{"_index":911,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["type",{"_index":112,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":338,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["u036f]/g",{"_index":352,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["undefin",{"_index":339,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["unfold",{"_index":932,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["unit",{"_index":1147,"title":{},"body":{"index.html":{}}}],["updateeffect",{"_index":280,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["updateeffect(effect",{"_index":296,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["updatemus",{"_index":478,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["us",{"_index":761,"title":{},"body":{"injectables/EffectsService.html":{},"index.html":{}}}],["useexist",{"_index":957,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["val",{"_index":1084,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["valid",{"_index":313,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validatorfn",{"_index":314,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validators.max(actualconfig.max",{"_index":328,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validators.min(actualconfig.min",{"_index":327,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validators.requir",{"_index":326,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validnam",{"_index":274,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["valoractu",{"_index":820,"title":{},"body":{"injectables/EffectsService.html":{}}}],["valoractual.id",{"_index":822,"title":{},"body":{"injectables/EffectsService.html":{}}}],["valu",{"_index":138,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["value.tostring().split('",{"_index":377,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["value[0",{"_index":382,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["value[1",{"_index":380,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["version",{"_index":1125,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":969,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["via",{"_index":1151,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":1050,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["viewchild('slidershel",{"_index":1077,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["void",{"_index":119,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["volum",{"_index":632,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["volume'},{'nam",{"_index":61,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volume.compon",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["volume.component.css",{"_index":633,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.html",{"_index":634,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.t",{"_index":631,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:11",{"_index":647,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:17",{"_index":660,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:18",{"_index":661,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:19",{"_index":662,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:20",{"_index":653,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:21",{"_index":655,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:22",{"_index":658,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:23",{"_index":654,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:24",{"_index":656,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:25",{"_index":659,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:26",{"_index":657,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:27",{"_index":649,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:40",{"_index":652,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:44",{"_index":651,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume/app",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"components/AppVolumeComponent.html":{}}}],["volume0",{"_index":641,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume1",{"_index":642,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volumemast",{"_index":643,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["wah",{"_index":789,"title":{},"body":{"injectables/EffectsService.html":{}}}],["wahwah",{"_index":788,"title":{},"body":{"injectables/EffectsService.html":{}}}],["warn",{"_index":415,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["wavecolor",{"_index":189,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurf",{"_index":158,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurfer.cr",{"_index":185,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurfer.j",{"_index":159,"title":{},"body":{"components/AppDeckComponent.html":{},"dependencies.html":{}}}],["wavesurfer.js/dist/plugin/wavesurfer.cursor.min.j",{"_index":161,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurfer.js/dist/plugin/wavesurfer.regions.min.j",{"_index":163,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["webapp",{"_index":1166,"title":{},"body":{"index.html":{}}}],["wetlevel",{"_index":749,"title":{},"body":{"injectables/EffectsService.html":{}}}],["width",{"_index":399,"title":{},"body":{"components/AppLayoutComponent.html":{},"injectables/SizeService.html":{}}}],["window",{"_index":400,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["window.innerheight);els",{"_index":414,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["window:dragleav",{"_index":603,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragov",{"_index":604,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragover(ev",{"_index":609,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["work",{"_index":417,"title":{},"body":{"components/AppLayoutComponent.html":{},"injectables/EffectsService.html":{}}}],["writevalu",{"_index":933,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["writevalue(valu",{"_index":947,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["www.flaticon.com",{"_index":32,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["x",{"_index":567,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["zindex",{"_index":1028,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["zone.j",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppAboutComponent.html":{"url":"components/AppAboutComponent.html","title":"component - AppAboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppAboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-about/app-about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                app-about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-about.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-about/app-about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './app-about.component.html',\n  styleUrls: ['./app-about.component.css']\n})\nexport class AppAboutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  Content attribution:\n\n\n\n  \n  \n  \n  Icons made by\n    Smashicons\n    from\n    www.flaticon.com\n    is licensed by\n    CC 3.0 BY\n  \n\n\n\n  \n  \n  Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY\n\n\n\n  \n  \n  Icons made by Freepik from www.flaticon.com is licensed by CC 3.0 BY\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Content attribution:        Icons made by    Smashicons    from    www.flaticon.com    is licensed by    CC 3.0 BY        Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY      Icons made by Freepik from www.flaticon.com is licensed by CC 3.0 BY'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppAboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n-->\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppDeckComponent.html":{"url":"components/AppDeckComponent.html","title":"component - AppDeckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppDeckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-deck/app-deck.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deck\n            \n\n            \n                styleUrls\n                app-deck.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-deck.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeLoop\n                            \n                            \n                                activeLoopRegion\n                            \n                            \n                                beats\n                            \n                            \n                                bpm\n                            \n                            \n                                cues\n                            \n                            \n                                effects\n                            \n                            \n                                loops\n                            \n                            \n                                pitch\n                            \n                            \n                                rotation\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCUE\n                            \n                            \n                                applyEffect\n                            \n                            \n                                changePitch\n                            \n                            \n                                createLoop\n                            \n                            \n                                playPause\n                            \n                            \n                                resetCUE\n                            \n                            \n                                resetDisc\n                            \n                            \n                                resetLoop\n                            \n                            \n                                resetPitch\n                            \n                            \n                                rotate\n                            \n                            \n                                startCUE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deckNumber\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-deck/app-deck.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deckNumber\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCUE\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCUE()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffect(i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changePitch\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangePitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createLoop\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateLoop(loop: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loop\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCUE\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCUE()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetDisc\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetDisc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetLoop\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetLoop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startCUE\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartCUE(cue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeLoop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeLoop:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeLoopRegion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeLoopRegion:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beats\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beats:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bpm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bpm:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cues:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [{}, {}, {}, {}, {}, {}] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loops\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loops:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [0.25, 0.5, 1, 2, 4, 8, 16, 32]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitch:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            song\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        song:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { PlayerService } from '../../services/player.service';\nimport { Subscription } from 'rxjs';\nimport * as WaveSurfer from 'wavesurfer.js';\nimport * as Cursor from 'wavesurfer.js/dist/plugin/wavesurfer.cursor.min.js';\nimport * as Regions from 'wavesurfer.js/dist/plugin/wavesurfer.regions.min.js';\n\n@Component({\n  selector: 'app-deck',\n  templateUrl: './app-deck.component.html',\n  styleUrls: ['./app-deck.component.css']\n})\nexport class AppDeckComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  deckNumber: number;\n  private musicSubscription: Subscription;\n  rotation = 0;\n  private active = false;\n  song: any;\n  bpm: any;\n  beats: any;\n  effects = [{}, {}, {}, {}, {}, {}] as any;\n  pitch = 0;\n  cues = [];\n  activeLoop: any;\n  activeLoopRegion: any;\n  loops = [0.25, 0.5, 1, 2, 4, 8, 16, 32];\n  constructor(private musicService: MusicLoaderService, private playerService: PlayerService) {}\n  ngOnInit() {\n    setInterval(() => {\n      this.rotate();\n    }, 50);\n    this.playerService.effects$[this.deckNumber].subscribe(effects => {\n      const eff = effects as any;\n      this.effects = eff.filter(_ => true);\n    });\n  }\n  ngAfterViewInit(): void {\n    const height = document.getElementById('deck_' + this.deckNumber + '_wave').offsetHeight;\n    requestAnimationFrame(() => {\n      this.playerService.save(\n        this.deckNumber,\n        WaveSurfer.create({\n          container: '#deck_' + this.deckNumber + '_wave',\n          waveColor: 'red',\n          progressColor: 'purple',\n          height: height,\n          plugins: [\n            Cursor.create({\n              showTime: true,\n              opacity: 1,\n              customShowTimeStyle: {\n                'background-color': '#000',\n                color: '#fff',\n                padding: '2px',\n                height: height,\n                'font-size': '10px'\n              }\n            }),\n            Regions.create({\n              regions: []\n            })\n          ]\n        })\n      );\n      this.playerService.on(this.deckNumber, 'finish', () => {\n        this.resetDisc();\n      });\n    });\n    this.musicSubscription = this.musicService.decksongs$[this.deckNumber].subscribe(a => {\n      const data = a as any;\n      this.resetDisc();\n      this.resetCUE();\n      this.resetPitch();\n      this.song = data.song as File;\n      this.bpm = data.bpm;\n      this.beats = data.beats;\n    });\n  }\n  rotate() {\n    if (this.active) {\n      this.rotation = (this.rotation + (10 * (100 + this.pitch)) / 100) % 360;\n    }\n  }\n  resetDisc() {\n    this.active = false;\n    this.rotation = 0;\n  }\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n  playPause() {\n    this.playerService.playPause(this.deckNumber);\n    this.active = this.playerService.isPlaying(this.deckNumber);\n  }\n  applyEffect(i) {\n    this.playerService.activateEffect(this.deckNumber, i);\n  }\n  changePitch() {\n    const deck = this.deckNumber;\n    this.playerService.setPitch(deck, (100 + this.pitch) / 100);\n  }\n  resetPitch() {\n    const deck = this.deckNumber;\n    this.pitch = 0;\n    this.playerService.setPitch(deck, 1);\n  }\n  addCUE() {\n    if (this.song) {\n      const cue = {};\n      cue['percent'] =\n        (this.playerService.getCurrentTime(this.deckNumber) / this.playerService.getDuration(this.deckNumber)) * 100;\n      cue['pos'] = this.playerService.getCurrentTime(this.deckNumber) / this.playerService.getDuration(this.deckNumber);\n      if (this.cues.length === 4) {\n        this.cues.shift();\n      }\n      this.cues.push(cue);\n    }\n  }\n  startCUE(cue) {\n    this.playerService.playFromPosition(this.deckNumber, this.cues[cue].pos);\n  }\n  resetCUE() {\n    this.cues = [];\n  }\n  createLoop(loop) {\n    if (this.song) {\n      if (this.activeLoop !== loop) {\n        this.activeLoop = loop;\n        this.activeLoopRegion = this.playerService.createLoop(\n          this.deckNumber,\n          this.playerService.getCurrentTime(this.deckNumber),\n          this.playerService.getCurrentTime(this.deckNumber) + 10\n        );\n      } else {\n        this.resetLoop();\n      }\n    }\n  }\n  resetLoop() {\n    if (this.activeLoopRegion) {\n      this.activeLoopRegion.remove();\n      this.activeLoopRegion = null;\n    }\n    this.activeLoop = null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        \n        \n          \n            {{i+1}}\n          \n        \n      \n    \n\n    \n      \n        {{song.name}}\n        {{bpm*(1+pitch/100)}} bpm\n      \n\n      \n        \n          \n            \n          \n          \n            2x\n            4x\n            8x\n            16x\n            32x\n          \n        \n        \n          \n            \n              CUEs\n              \n                1\n                2\n                3\n                4\n                Reset\n              \n              Effects\n              \n                \n                  1\n                  2\n                  3\n                \n                \n                  4\n                  5\n                  6\n                \n              \n            \n            \n              \n                {{pitch}}%\n              \n              \n                \n              \n              \n                \n              \n\n            \n          \n          \n            CUE\n            \n              \n                \n                \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{i+1}}                                              {{song.name}}        {{bpm*(1+pitch/100)}} bpm                                                                          2x            4x            8x            16x            32x                                                              CUEs                              1                2                3                4                Reset                            Effects                                                1                  2                  3                                                  4                  5                  6                                                                                    {{pitch}}%                                                                                                                                                  CUE                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppDeckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppEffectsCreatorComponent.html":{"url":"components/AppEffectsCreatorComponent.html","title":"component - AppEffectsCreatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppEffectsCreatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-effects-creator/app-effects-creator.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-effects-creator\n            \n\n            \n                styleUrls\n                app-effects-creator.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-effects-creator.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                defaultStep\n                            \n                            \n                                effects\n                            \n                            \n                                effectsCreatorArray\n                            \n                            \n                                effectStruct\n                            \n                            \n                                JSON\n                            \n                            \n                                name\n                            \n                            \n                                nameChars\n                            \n                            \n                                selectedEffect\n                            \n                            \n                                selectedEffectRemove\n                            \n                            \n                                validName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkName\n                            \n                            \n                                createEffect\n                            \n                            \n                                isDefined\n                            \n                            \n                                removeEffect\n                            \n                            \n                                reset\n                            \n                            \n                                resetRemove\n                            \n                            \n                                updateEffect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkName\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEffect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDefined\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDefined(something: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        something\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveEffect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetRemove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateEffect(effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.01\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsCreatorArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsCreatorArray:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectStruct\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectStruct:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JSON:     \n\n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameChars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nameChars:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffect:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffectRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffectRemove:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validName:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EffectsService } from '../../services/effects.service';\nimport { FormBuilder, FormGroup, AbstractControl, Validators, ValidatorFn } from '@angular/forms';\n\n@Component({\n  selector: 'app-effects-creator',\n  templateUrl: './app-effects-creator.component.html',\n  styleUrls: ['./app-effects-creator.component.css']\n})\nexport class AppEffectsCreatorComponent implements OnInit {\n  effectsCreatorArray: any;\n  effects: any;\n  selectedEffect: string;\n  selectedEffectRemove: string;\n  effectStruct: any;\n  JSON = JSON;\n  config: FormGroup;\n  name = '';\n  nameChars = 5;\n  validName = false;\n  defaultStep = 0.01;\n  constructor(private effectServ: EffectsService, private builder: FormBuilder) {\n    this.effectsCreatorArray = this.effectServ.getEffectsCreator();\n    this.effects = this.effectServ.getEffects();\n  }\n  ngOnInit() {}\n  updateEffect(effect) {\n    this.effectStruct = JSON.parse(effect);\n    const config = {};\n    for (const actualConfig of this.effectStruct.configs) {\n      if (this.isDefined(actualConfig.min)) {\n        config[actualConfig.name] = [\n          actualConfig.default,\n          [\n            Validators.required,\n            Validators.min(actualConfig.min),\n            Validators.max(actualConfig.max),\n            stepValidator(actualConfig.step ? actualConfig.step : this.defaultStep)\n          ]\n        ];\n      }\n      if (this.isDefined(actualConfig.values)) {\n        config[actualConfig.name] = actualConfig.default;\n      }\n      if (this.isDefined(actualConfig.value)) {\n        config[actualConfig.name] = actualConfig.value;\n      }\n    }\n    this.config = this.builder.group(config);\n  }\n  reset() {\n    this.selectedEffect = null;\n    this.effectStruct = null;\n  }\n  resetRemove() {\n    this.selectedEffectRemove = null;\n  }\n  isDefined(something) {\n    return typeof something !== 'undefined';\n  }\n  createEffect() {\n    if (this.validName && this.config.valid) {\n      this.effectServ.addEffect({\n        name: this.name,\n        type: this.effectStruct.name,\n        active: false,\n        config: this.config.value\n      });\n      this.effects = this.effectServ.getEffects();\n      this.reset();\n    }\n  }\n  checkName() {\n    if (\n      !this.effects.find(\n        effect =>\n          effect.name\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '') ===\n          this.name\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n      ) &&\n      this.name.length >= this.nameChars\n    ) {\n      this.validName = true;\n    } else {\n      this.validName = false;\n    }\n  }\n  removeEffect() {\n    this.effectServ.removeEffect(this.selectedEffectRemove);\n    this.effects = this.effectServ.getEffects();\n    this.resetRemove();\n  }\n}\nfunction stepValidator(step: number): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    // decimalAdjust is needed because of js clunky floating point maths\n    const forbidden = decimalAdjust('round', control.value / step, -5) % 1 !== 0;\n    return forbidden ? { 'forbidden number step': { value: control.value } } : null;\n  };\n}\nfunction decimalAdjust(type, value, exp) {\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math[type](value);\n  }\n  value = +value;\n  exp = +exp;\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n  // Shift\n  value = value.toString().split('e');\n  value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp)));\n  // Shift back\n  value = value.toString().split('e');\n  return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));\n}\n\n    \n\n    \n        \n  \n    \n      Create effect\n      \n        {{effect.name}}\n      \n    \n  \n  \n    \n      {{effectStruct.name}}\n      {{effectStruct.description}}\n    \n    \n      Name:\n      \n    \n    \n      Configuration:\n    \n    \n      \n        \n          {{config.name}}:\n          \n            \n            \n              {{value}}\n            \n            {{config.value}}\n          \n        \n      \n    \n    Create\n  \n  \n    Remove effect\n    To remove effects you must have at least 6 effects\n    6\" [(ngModel)]=\"selectedEffectRemove\" style=\"width:250px\">\n      {{effect.name}}\n    \n    6\" style=\"width:250px\" (click)=\"removeEffect()\" [disabled]=\"\">Remove\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Create effect              {{effect.name}}                        {{effectStruct.name}}      {{effectStruct.description}}              Name:                    Configuration:                                {{config.name}}:                                                {{value}}                        {{config.value}}                                Create        Remove effect    To remove effects you must have at least 6 effects    6\" [(ngModel)]=\"selectedEffectRemove\" style=\"width:250px\">      {{effect.name}}        6\" style=\"width:250px\" (click)=\"removeEffect()\" [disabled]=\"\">Remove  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppEffectsCreatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppLayoutComponent.html":{"url":"components/AppLayoutComponent.html","title":"component - AppLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-layout/app-layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                app-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-layout.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                width\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sizeService: SizeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-layout/app-layout.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sizeService\n                                                  \n                                                        \n                                                                    SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-layout/app-layout.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-layout/app-layout.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     \n\n                    \n                \n                    \n                        \n                            Default value : window\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-layout/app-layout.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SizeService } from '../../services/size.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './app-layout.component.html',\n  styleUrls: ['./app-layout.component.css']\n})\nexport class AppLayoutComponent {\n  width: number;\n  height: number;\n  window = window;\n  constructor(sizeService: SizeService) {\n    this.width = sizeService.getWidth();\n    this.height = sizeService.getHeight();\n    sizeService.width$.subscribe(value => {\n      if (value) {\n        this.width = Number(value);\n      } else {\n        this.width = null;\n      }\n    });\n    sizeService.height$.subscribe(value => {\n      if (value) {\n        this.height = Number(value) - 1;\n      } else {\n        this.height = null;\n      }\n    });\n  }\n}\n\n    \n\n    \n         window.innerHeight);else warning\">\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n\n  \n    For the application to work properly you must have a higher width than height in your device, thought at least\n    width being 1.2 times the height is recommended.\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' window.innerHeight);else warning\">                                                                                    For the application to work properly you must have a higher width than height in your device, thought at least    width being 1.2 times the height is recommended.  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppEffectsCreatorComponent\n\nAppEffectsCreatorComponent\n\nAppModule -->\n\nAppEffectsCreatorComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppAboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                AppDeckComponent\n                            \n                            \n                                AppEffectsCreatorComponent\n                            \n                            \n                                AppLayoutComponent\n                            \n                            \n                                AppMusicListComponent\n                            \n                            \n                                AppSearchComponent\n                            \n                            \n                                AppSettingsComponent\n                            \n                            \n                                AppTabsComponent\n                            \n                            \n                                AppVolumeComponent\n                            \n                            \n                                RouletteControllerComponent\n                            \n                            \n                                SliderControllerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppDeckComponent } from './components/app-deck/app-deck.component';\nimport { AppLayoutComponent } from './components/app-layout/app-layout.component';\nimport { AppVolumeComponent } from './components/app-volume/app-volume.component';\nimport { SliderControllerComponent } from './components/slider-controller/slider-controller.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouletteControllerComponent } from './components/roulette-controller/roulette-controller.component';\nimport { AppSearchComponent } from './components/app-search/app-search.component';\nimport { AppTabsComponent } from './components/app-tabs/app-tabs.component';\nimport { AppMusicListComponent } from './components/app-music-list/app-music-list.component';\nimport { AppSettingsComponent } from './components/app-settings/app-settings.component';\nimport { AppAboutComponent } from './components/app-about/app-about.component';\nimport { AppEffectsCreatorComponent } from './components/app-effects-creator/app-effects-creator.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppDeckComponent,\n    AppLayoutComponent,\n    AppVolumeComponent,\n    SliderControllerComponent,\n    RouletteControllerComponent,\n    AppSearchComponent,\n    AppTabsComponent,\n    AppMusicListComponent,\n    AppSettingsComponent,\n    AppAboutComponent,\n    AppEffectsCreatorComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppMusicListComponent.html":{"url":"components/AppMusicListComponent.html","title":"component - AppMusicListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppMusicListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-music-list/app-music-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music-list\n            \n\n            \n                styleUrls\n                app-music-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-music-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicList\n                            \n                            \n                                musicService\n                            \n                            \n                                query\n                            \n                            \n                                shownMusic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadOnDeck\n                            \n                            \n                                removeSong\n                            \n                            \n                                updateMusic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOnDeck\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadOnDeck(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeSong\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateMusic()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicList:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shownMusic:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-music-list',\n  templateUrl: './app-music-list.component.html',\n  styleUrls: ['./app-music-list.component.css']\n})\nexport class AppMusicListComponent implements OnDestroy {\n  musicService: MusicLoaderService;\n  private musicSubscription: Subscription;\n  musicList: File[];\n  shownMusic: File[];\n  query: string;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n    this.musicList = musicService.music;\n    this.updateMusic();\n    this.musicSubscription = musicService.music$.subscribe(a => {\n      this.musicList = a as File[];\n      this.updateMusic();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n\n  loadOnDeck(deck, song) {\n    this.musicService.load(deck, song);\n  }\n  removeSong(song) {\n    this.musicService.deleteSong(song);\n  }\n  updateMusic() {\n    if (!this.query) {\n      this.shownMusic = this.musicList;\n    } else {\n      const searchMusic = (searchQuery, music: any[]) => {\n        const lowSearch = searchQuery\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n        return music.filter(mus => {\n          return String(mus.name)\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .includes(lowSearch);\n        });\n      };\n      this.shownMusic = searchMusic(this.query, this.musicList);\n    }\n  }\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      \n        \n          Song\n          \n            \n            \n          \n        \n      \n      Artist -->\n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      {{song.name}}\n       -->\n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n    \n    \n      No songs match {{query}}\n    \n\n  \n  \n    \n    To start load music from the search or drag music here from your computer.\n  \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                                  Song                                                                Artist -->                                                                        {{song.name}}       -->                                                                                                                                          No songs match {{query}}                To start load music from the search or drag music here from your computer.    '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppMusicListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), FormsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSearchComponent.html":{"url":"components/AppSearchComponent.html","title":"component - AppSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-search/app-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                app-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChangeEvent\n                            \n                            \n                                recievedFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChangeEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChangeEvent(fileInput: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileInput\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n@Component({\n  selector: 'app-search',\n  templateUrl: './app-search.component.html',\n  styleUrls: ['./app-search.component.css']\n})\nexport class AppSearchComponent implements OnInit {\n  musicService: MusicLoaderService;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  ngOnInit() {}\n  fileChangeEvent(fileInput: any) {\n    this.recievedFiles(fileInput.target.files);\n  }\n\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n\n    \n    \n      \n      Choose a\n        file\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                          Choose a        file      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSettingsComponent.html":{"url":"components/AppSettingsComponent.html","title":"component - AppSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-settings/app-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                app-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableEffects\n                            \n                            \n                                effects\n                            \n                            \n                                effectsNum\n                            \n                            \n                                JSON\n                            \n                            \n                                selectedEffects\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                changeSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, playerServ: PlayerService, sizeService: SizeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-settings/app-settings.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerServ\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sizeService\n                                                  \n                                                        \n                                                                    SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(i: , j: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        j\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [null, null] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JSON:     \n\n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        size:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'auto'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EffectsService } from '../../services/effects.service';\nimport { PlayerService } from '../../services/player.service';\nimport { SizeService } from '../../services/size.service';\n@Component({\n  selector: 'app-settings',\n  templateUrl: './app-settings.component.html',\n  styleUrls: ['./app-settings.component.css']\n})\nexport class AppSettingsComponent implements OnInit {\n  constructor(private effectServ: EffectsService, private playerServ: PlayerService, private sizeService: SizeService) {\n    this.effects = JSON.parse(JSON.stringify(this.playerServ.effects));\n    this.availableEffects = this.effectServ.getEffects();\n    this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n  }\n  JSON = JSON;\n  effectsNum = 6;\n  effects = [null, null] as any;\n  availableEffects: any;\n  selectedEffects: any;\n  size = 'auto';\n  ngOnInit() {\n    this.playerServ.effects$[0].subscribe(effects => {\n      this.effects[0] = JSON.parse(JSON.stringify(effects));\n      this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n    });\n    this.playerServ.effects$[1].subscribe(effects => {\n      this.effects[1] = JSON.parse(JSON.stringify(effects));\n      this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n    });\n    if (this.sizeService.getWidth() && this.sizeService.getHeight()) {\n      this.size = this.sizeService.getWidth() + 'x' + this.sizeService.getHeight();\n    }\n  }\n  change(i, j) {\n    this.playerServ.saveEffects(\n      i,\n      j,\n      JSON.parse(JSON.stringify(this.availableEffects.find(a => Number(a.id) === Number(this.selectedEffects[i][j]))))\n    );\n  }\n  changeSize() {\n    if (this.size === 'auto') {\n      this.sizeService.changeSize(null, null);\n    } else {\n      const size = this.size.split('x');\n      this.sizeService.changeSize(size[0], size[1]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Language\n\n      \n        Spanish\n        English\n      \n    \n    \n      Template\n      \n        Light\n        Dark\n      \n    \n    \n      Resolution\n\n      \n        Automatic\n        1920x1200\n        1920x1080\n        1600x900\n        1680x1050\n        1366x768\n        1360x768\n        1280x1024\n        1280x800\n        1280x720\n        1024x768\n      \n    \n  \n  \n    \n      Effects deck {{i+1}}\n      \n        \n          Effect {{j+1}}\n          \n            \n              {{availableEffect.name}}\n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Language              Spanish        English                    Template              Light        Dark                    Resolution              Automatic        1920x1200        1920x1080        1600x900        1680x1050        1366x768        1360x768        1280x1024        1280x800        1280x720        1024x768                        Effects deck {{i+1}}                        Effect {{j+1}}                                    {{availableEffect.name}}                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppTabsComponent.html":{"url":"components/AppTabsComponent.html","title":"component - AppTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-tabs/app-tabs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                app-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                dragging\n                            \n                            \n                                maximized\n                            \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                droped\n                            \n                            \n                                maximize\n                            \n                            \n                                recievedFiles\n                            \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:dragleave\n                            \n                            \n                                window:dragover\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-tabs/app-tabs.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragleave\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:dragleave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:dragover(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            droped\n                            \n                            \n                        \n                    \n                \n                \n                    \ndroped(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maximize\n                            \n                            \n                        \n                    \n                \n                \n                    \nmaximize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActive(active: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'music'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragging\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dragging:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maximized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maximized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './app-tabs.component.html',\n  styleUrls: ['./app-tabs.component.css']\n})\nexport class AppTabsComponent {\n  active = 'music';\n  dragging = false;\n  maximized = false;\n  musicService: MusicLoaderService;\n  setActive(active) {\n    this.active = active;\n  }\n  maximize() {\n    this.maximized = !this.maximized;\n  }\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  droped(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.recievedFiles(event.dataTransfer.files);\n    this.dragging = false;\n  }\n  @HostListener('window:dragover', ['$event'])\n  onDragOver(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.dragging = true;\n  }\n  @HostListener('window:dragleave')\n  stopdrag() {\n    this.dragging = false;\n  }\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n        Music\n      \n      \n        Settings\n      \n      \n        Effects creator\n      \n      \n        About\n      \n      \n        \n        \n      \n    \n    \n      \n      \n      \n      \n    \n  \n  \n    Drop your song here\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Music                    Settings                    Effects creator                    About                                                                              Drop your song here  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppVolumeComponent.html":{"url":"components/AppVolumeComponent.html","title":"component - AppVolumeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppVolumeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-volume/app-volume.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volume\n            \n\n            \n                styleUrls\n                app-volume.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-volume.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bass0\n                            \n                            \n                                bass1\n                            \n                            \n                                mid0\n                            \n                            \n                                mid1\n                            \n                            \n                                musicSubscription\n                            \n                            \n                                trebble0\n                            \n                            \n                                trebble1\n                            \n                            \n                                volume0\n                            \n                            \n                                volume1\n                            \n                            \n                                volumeMaster\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeVolume\n                            \n                            \n                                resetEQ\n                            \n                            \n                                setEQ\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService, effectServ: EffectsService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-volume/app-volume.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeVolume(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetEQ(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEQ()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicSubscription:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volumeMaster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volumeMaster:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { PlayerService } from '../../services/player.service';\nimport { EffectsService } from '../../services/effects.service';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './app-volume.component.html',\n  styleUrls: ['./app-volume.component.css']\n})\nexport class AppVolumeComponent implements OnInit, AfterViewInit {\n  constructor(\n    private musicService: MusicLoaderService,\n    private effectServ: EffectsService,\n    private playerService: PlayerService\n  ) {}\n  volume0 = 100;\n  volume1 = 100;\n  volumeMaster = 0;\n  bass0 = 0;\n  mid0 = 0;\n  trebble0 = 0;\n  bass1 = 0;\n  mid1 = 0;\n  trebble1 = 0;\n  musicSubscription = [null, null];\n  changeVolume(deck) {\n    let masterMultiplier = 1;\n    if (deck === 0 && this.volumeMaster > 0) {\n      masterMultiplier = (100 - this.volumeMaster) / 100;\n    }\n    if (deck === 1 && this.volumeMaster  {\n      this.resetEQ(0);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n            High\n            \n          \n          \n            Mid\n            \n          \n          \n            Low\n            \n          \n          \n        \n        \n          \n            High\n            \n          \n          \n            Mid\n            \n          \n          \n            Low\n            \n          \n          \n        \n      \n      \n        \n      \n    \n    \n      \n\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              High                                            Mid                                            Low                                                                      High                                            Mid                                            Low                                                                                      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppVolumeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EffectsService.html":{"url":"injectables/EffectsService.html","title":"injectable - EffectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EffectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/effects.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effects\n                            \n                            \n                                effectsCreator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEffect\n                            \n                            \n                                createEffects\n                            \n                            \n                                createEQ\n                            \n                            \n                                createEQEffect\n                            \n                            \n                                getEffects\n                            \n                            \n                                getEffectsCreator\n                            \n                            \n                                removeEffect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/effects.service.ts:384\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \naddEffect(effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEffects(ac: , effects: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:242\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ac\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        effects\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEQ(bass0: , mid0: , trebble0: , bass1: , mid1: , trebble1: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:251\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bass0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mid0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trebble0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bass1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mid1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trebble1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEQEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEQEffect(deck: , eq: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:366\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        eq\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEffectsCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEffectsCreator()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveEffect(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:238\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      id: 1,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      id: 2,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      id: 3,\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      id: 4,\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      id: 0,\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      id: 5,\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsCreator:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Chorus',\n      effect: 'Chorus',\n      description: 'A basic chorus effect.',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'delay', min: 0, max: 1, default: 0.0045, step: 0.0001 },\n        { name: 'bypass', values: [0, 1], default: 0 }\n      ]\n    },\n    {\n      description: 'A delay effect with feedback and a lowpass filter applied to the delayed signal.',\n      name: 'Delay',\n      effect: 'Delay',\n\n      configs: [\n        { name: 'feedback', min: 0, max: 1, default: 0.45 },\n        { name: 'delayTime', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'wetLevel', min: 0, max: 1, default: 0.25 },\n        { name: 'dryLevel', min: 0, max: 1, default: 1 },\n        { name: 'cutoff', min: 20, max: 22050, default: 2000 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic phaser effect.',\n      name: 'Phaser',\n      effect: 'Phaser',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.2 },\n        { name: 'depth', min: 0, max: 1, default: 0.3 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 30, step: 1 },\n        { name: 'baseModulationFrequency', min: 500, max: 1500, default: 700, step: 1 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic overdrive effect.',\n      name: 'Overdrive',\n      effect: 'Overdrive',\n      configs: [\n        { name: 'outputGain', min: 0, max: 1, default: 0.5 },\n        { name: 'drive', min: 0, max: 1, default: 0.7 },\n        { name: 'curveAmount', min: 0, max: 1, default: 1 },\n        { name: 'algorithmIndex', values: [0, 1, 2, 3, 4, 5], default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A compressor with the option to use automatic makeup gain.',\n      name: 'Compressor',\n      effect: 'Compressor',\n      configs: [\n        { name: 'threshold', min: -100, max: 0, default: -1 },\n        { name: 'makeupGain', min: 0, max: 50, default: 1 },\n        { name: 'attack', min: 0, max: 1000, default: 1 },\n        { name: 'release', min: 0, max: 3000, default: 0 },\n        { name: 'ratio', min: 1, max: 20, default: 4 },\n        { name: 'knee', min: 0, max: 40, default: 5 },\n        { name: 'automakeup', values: [true, false], default: true },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic filter.',\n      name: 'Filter',\n      effect: 'Filter',\n      configs: [\n        { name: 'frequency', min: 20, max: 22050, default: 440, step: 1 },\n        { name: 'Q', min: 0.001, max: 100, default: 1, step: 0.001 },\n        { name: 'gain', min: -40, max: 40, default: 0 },\n        {\n          name: 'filterType',\n          values: ['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch', 'allpass'],\n          default: 'lowpass'\n        },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic tremolo.',\n      name: 'Tremolo',\n      effect: 'Tremolo',\n      configs: [\n        { name: 'intensity', min: 0, max: 1, default: 0.3 },\n        { name: 'rate', min: 0.001, max: 8, default: 4 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A wahwah with an auto wah option.',\n      name: 'WahWah',\n      effect: 'WahWah',\n      configs: [\n        { name: 'automode', values: [true, false], default: true },\n        { name: 'baseFrequency', min: 0, max: 1, default: 0.5 },\n        { name: 'excursionOctaves', min: 1, max: 6, default: 2, step: 1 },\n        { name: 'sweep', min: 0, max: 1, default: 0.2 },\n        { name: 'resonance', min: 1, max: 100, default: 10 },\n        { name: 'sensitivity', min: -1, max: 1, default: 0.5 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A lo- fi bitcrusher effect.',\n      name: 'Bitcrusher',\n      effect: 'Bitcrusher',\n      configs: [\n        { name: 'bits', min: 1, max: 16, default: 4 },\n        { name: 'normfreq', min: 0, max: 1, default: 0.1 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A resonant, analog- sounding filter.',\n      name: 'MoogFilter',\n      effect: 'MoogFilter',\n      configs: [\n        { name: 'cutoff', min: 0, max: 1, default: 0.065, step: 0.001 },\n        { name: 'resonance', min: 0, max: 4, default: 3.5 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A delay that bounces between the left and right channel.',\n      name: 'Ping Pong Delay',\n      effect: 'PingPongDelay',\n      configs: [\n        { name: 'wetLevel', min: 0, max: 1, default: 0.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.3 },\n        { name: 'delayTimeLeft', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'delayTimeRight', min: 1, max: 10000, default: 200, step: 1 }\n      ]\n    },\n    {\n      description: 'A basic gain.',\n      name: 'Gain',\n      effect: 'Gain',\n      configs: [{ name: 'gain', min: 0, max: 40 }]\n    },\n    {\n      description: 'A stereo panner (-1 is left, 1 is right). May not work in Safari and IE.',\n      name: 'Panner',\n      effect: 'Panner',\n      configs: [{ name: 'pan', min: -1, max: 1, default: 0 }]\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:75\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Tuna from 'tunajs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EffectsService {\n  effects = [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      id: 1,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      id: 2,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      id: 3,\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      id: 4,\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      id: 0,\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      id: 5,\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ];\n  effectsCreator = [\n    {\n      name: 'Chorus',\n      effect: 'Chorus',\n      description: 'A basic chorus effect.',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'delay', min: 0, max: 1, default: 0.0045, step: 0.0001 },\n        { name: 'bypass', values: [0, 1], default: 0 }\n      ]\n    },\n    {\n      description: 'A delay effect with feedback and a lowpass filter applied to the delayed signal.',\n      name: 'Delay',\n      effect: 'Delay',\n\n      configs: [\n        { name: 'feedback', min: 0, max: 1, default: 0.45 },\n        { name: 'delayTime', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'wetLevel', min: 0, max: 1, default: 0.25 },\n        { name: 'dryLevel', min: 0, max: 1, default: 1 },\n        { name: 'cutoff', min: 20, max: 22050, default: 2000 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic phaser effect.',\n      name: 'Phaser',\n      effect: 'Phaser',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.2 },\n        { name: 'depth', min: 0, max: 1, default: 0.3 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 30, step: 1 },\n        { name: 'baseModulationFrequency', min: 500, max: 1500, default: 700, step: 1 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic overdrive effect.',\n      name: 'Overdrive',\n      effect: 'Overdrive',\n      configs: [\n        { name: 'outputGain', min: 0, max: 1, default: 0.5 },\n        { name: 'drive', min: 0, max: 1, default: 0.7 },\n        { name: 'curveAmount', min: 0, max: 1, default: 1 },\n        { name: 'algorithmIndex', values: [0, 1, 2, 3, 4, 5], default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A compressor with the option to use automatic makeup gain.',\n      name: 'Compressor',\n      effect: 'Compressor',\n      configs: [\n        { name: 'threshold', min: -100, max: 0, default: -1 },\n        { name: 'makeupGain', min: 0, max: 50, default: 1 },\n        { name: 'attack', min: 0, max: 1000, default: 1 },\n        { name: 'release', min: 0, max: 3000, default: 0 },\n        { name: 'ratio', min: 1, max: 20, default: 4 },\n        { name: 'knee', min: 0, max: 40, default: 5 },\n        { name: 'automakeup', values: [true, false], default: true },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic filter.',\n      name: 'Filter',\n      effect: 'Filter',\n      configs: [\n        { name: 'frequency', min: 20, max: 22050, default: 440, step: 1 },\n        { name: 'Q', min: 0.001, max: 100, default: 1, step: 0.001 },\n        { name: 'gain', min: -40, max: 40, default: 0 },\n        {\n          name: 'filterType',\n          values: ['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch', 'allpass'],\n          default: 'lowpass'\n        },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic tremolo.',\n      name: 'Tremolo',\n      effect: 'Tremolo',\n      configs: [\n        { name: 'intensity', min: 0, max: 1, default: 0.3 },\n        { name: 'rate', min: 0.001, max: 8, default: 4 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A wahwah with an auto wah option.',\n      name: 'WahWah',\n      effect: 'WahWah',\n      configs: [\n        { name: 'automode', values: [true, false], default: true },\n        { name: 'baseFrequency', min: 0, max: 1, default: 0.5 },\n        { name: 'excursionOctaves', min: 1, max: 6, default: 2, step: 1 },\n        { name: 'sweep', min: 0, max: 1, default: 0.2 },\n        { name: 'resonance', min: 1, max: 100, default: 10 },\n        { name: 'sensitivity', min: -1, max: 1, default: 0.5 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A lo- fi bitcrusher effect.',\n      name: 'Bitcrusher',\n      effect: 'Bitcrusher',\n      configs: [\n        { name: 'bits', min: 1, max: 16, default: 4 },\n        { name: 'normfreq', min: 0, max: 1, default: 0.1 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A resonant, analog- sounding filter.',\n      name: 'MoogFilter',\n      effect: 'MoogFilter',\n      configs: [\n        { name: 'cutoff', min: 0, max: 1, default: 0.065, step: 0.001 },\n        { name: 'resonance', min: 0, max: 4, default: 3.5 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A delay that bounces between the left and right channel.',\n      name: 'Ping Pong Delay',\n      effect: 'PingPongDelay',\n      configs: [\n        { name: 'wetLevel', min: 0, max: 1, default: 0.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.3 },\n        { name: 'delayTimeLeft', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'delayTimeRight', min: 1, max: 10000, default: 200, step: 1 }\n      ]\n    },\n    {\n      description: 'A basic gain.',\n      name: 'Gain',\n      effect: 'Gain',\n      configs: [{ name: 'gain', min: 0, max: 40 }]\n    },\n    {\n      description: 'A stereo panner (-1 is left, 1 is right). May not work in Safari and IE.',\n      name: 'Panner',\n      effect: 'Panner',\n      configs: [{ name: 'pan', min: -1, max: 1, default: 0 }]\n    }\n  ];\n  getEffects() {\n    return JSON.parse(JSON.stringify(this.effects));\n  }\n  getEffectsCreator() {\n    return JSON.parse(JSON.stringify(this.effectsCreator));\n  }\n  addEffect(effect) {\n    effect.id = this.effects.reduce((valorAnterior, valorActual) => Math.max(valorAnterior, valorActual.id), 0) + 1;\n    this.effects.push(effect);\n    localStorage.setItem('effects', JSON.stringify(this.effects));\n  }\n\n  removeEffect(id) {\n    this.effects = this.effects.filter(effect => effect.id !== Number(id));\n    localStorage.setItem('effects', JSON.stringify(this.effects));\n  }\n  createEffects(ac, effects) {\n    const tuna = new Tuna(ac);\n    const preparedEffects = [];\n    for (const effect of effects) {\n      preparedEffects.push(new tuna[effect.type](effect.config));\n    }\n    return preparedEffects;\n  }\n  // Advanced volume\n  createEQ(bass0, mid0, trebble0, bass1, mid1, trebble1) {\n    const adjustEQValue = value => {\n      if (value > 0) {\n        return value / 5;\n      }\n      return value;\n    };\n    const EQ = [\n      [\n        {\n          f: 32,\n          type: 'lowshelf',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 64,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 125,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 250,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 500,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * bass0 + 0.25 * mid0)\n        },\n        {\n          f: 1000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid0 + 0.25 * bass0)\n        },\n        {\n          f: 2000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid0 + 0.25 * trebble0)\n        },\n        {\n          f: 4000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * trebble0 + 0.25 * mid0)\n        },\n        {\n          f: 8000,\n          type: 'peaking',\n          value: adjustEQValue(trebble0)\n        },\n        {\n          f: 16000,\n          type: 'highshelf',\n          value: adjustEQValue(trebble0)\n        }\n      ],\n      [\n        {\n          f: 32,\n          type: 'lowshelf',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 64,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 125,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 250,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 500,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * bass1 + 0.25 * mid1)\n        },\n        {\n          f: 1000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid1 + 0.25 * bass1)\n        },\n        {\n          f: 2000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid1 + 0.25 * trebble1)\n        },\n        {\n          f: 4000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * trebble1 + 0.25 * mid1)\n        },\n        {\n          f: 8000,\n          type: 'peaking',\n          value: adjustEQValue(trebble1)\n        },\n        {\n          f: 16000,\n          type: 'highshelf',\n          value: adjustEQValue(trebble1)\n        }\n      ]\n    ];\n    return EQ;\n  }\n  createEQEffect(deck, eq) {\n    const filter0 = eq[0].map(band => {\n      const filter = deck[0].backend.ac.createBiquadFilter();\n      filter.type = band.type;\n      filter.gain.value = band.value;\n      filter.Q.value = 1;\n      filter.frequency.value = band.f;\n      return filter;\n    });\n    const filter1 = eq[1].map(band => {\n      const filter = deck[1].backend.ac.createBiquadFilter();\n      filter.type = band.type;\n      filter.gain.value = band.value;\n      filter.Q.value = 1;\n      filter.frequency.value = band.f;\n      return filter;\n    });\n    return [filter0, filter1];\n  }\n  constructor() {\n    if (localStorage.getItem('effects')) {\n      this.effects = JSON.parse(localStorage.getItem('effects'));\n    } else {\n      localStorage.setItem('effects', JSON.stringify(this.effects));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicLoaderService.html":{"url":"injectables/MusicLoaderService.html","title":"injectable - MusicLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MusicLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/music-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deckLoader\n                            \n                            \n                                decksongs\n                            \n                            \n                                decksongs$\n                            \n                            \n                                music\n                            \n                            \n                                music$\n                            \n                            \n                                musicLoader\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSong\n                            \n                            \n                                deleteSong\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/music-loader.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSong\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSong(song: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSong\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{}, {}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.musicLoader.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicLoader:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PlayerService } from './player.service';\nimport MusicTempo from 'music-tempo';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicLoaderService {\n  musicLoader = new Subject();\n  music$ = this.musicLoader.asObservable();\n  music: File[] = [];\n  deckLoader = [new Subject(), new Subject()];\n  decksongs$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  decksongs: any[] = [{}, {}];\n  playerService: PlayerService;\n  constructor(playerService: PlayerService) {\n    this.playerService = playerService;\n  }\n  load(deck, song) {\n    requestAnimationFrame(() => {\n      const reader = new FileReader();\n      reader.readAsDataURL(song);\n      reader.onload = () => {\n        this.playerService.load(deck, reader.result);\n      };\n      reader.onerror = error => {\n        console.log('Error: ', error);\n      };\n      const reader1 = new FileReader();\n      reader1.readAsArrayBuffer(song);\n      reader1.onload = () => {\n        const context = new AudioContext();\n        context.decodeAudioData(reader1.result as ArrayBuffer, buffer => {\n          let audioData = [];\n          // Take the average of the two channels\n          if (buffer.numberOfChannels === 2) {\n            const channel1Data = buffer.getChannelData(0);\n            const channel2Data = buffer.getChannelData(1);\n            const length = channel1Data.length;\n            for (let i = 0; i  {\n        console.log('Error: ', error);\n      };\n    });\n  }\n  addSong(song: File) {\n    this.music.push(song);\n    this.musicLoader.next(this.music);\n  }\n  deleteSong(song) {\n    this.music.splice(this.music.indexOf(song), 1);\n    this.musicLoader.next(this.music);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouletteControllerComponent.html":{"url":"components/RouletteControllerComponent.html","title":"component - RouletteControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouletteControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/roulette-controller/roulette-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                roulette-controller\n            \n\n            \n                styleUrls\n                roulette-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./roulette-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSlider\n                            \n                            \n                                folded\n                            \n                            \n                                rotation\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                rotate\n                            \n                            \n                                unfold\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/roulette-controller/roulette-controller.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:67\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unfold\n                            \n                            \n                        \n                    \n                \n                \n                    \nunfold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSlider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSlider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folded:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RouletteControllerComponent),\n  multi: true\n};\n@Component({\n  selector: 'roulette-controller',\n  templateUrl: './roulette-controller.component.html',\n  styleUrls: ['./roulette-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class RouletteControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  folded = true;\n  value = 0;\n  configSlider: any;\n  rotation: number;\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.configSlider = {\n      id: this.config.id + 'slider',\n      min: this.config.min || 0,\n      max: this.config.max || 100,\n      default: this.value,\n      thumb: 'roulette-slider-thumb',\n      track: 'roulette-slider-track',\n      vertical: true,\n      fill: true\n    };\n    this.rotate();\n  }\n\n  rotate() {\n    const percent = (this.value - this.configSlider.min) / (this.configSlider.max - this.configSlider.min);\n    this.rotation = 135 * 2 * (percent - 0.5);\n    this.onChangeCallback(this.value);\n  }\n  unfold() {\n    this.folded = !this.folded;\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.value = value;\n      this.rotate();\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  @HostListener('document:click', ['$event'])\n  private onDocumentClick(event: MouseEvent) {\n    const closest = (el, selector) => {\n      const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\n      while (el) {\n        if (matchesSelector.call(el, selector)) {\n          break;\n        }\n        el = el.parentElement;\n      }\n      return el;\n    };\n    const ele = event.target as Element;\n    if (!closest(ele, '#' + this.config.id + '_container')) {\n      this.folded = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouletteControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SizeService.html":{"url":"injectables/SizeService.html","title":"injectable - SizeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/size.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualHeight\n                            \n                            \n                                actualWidth\n                            \n                            \n                                height\n                            \n                            \n                                height$\n                            \n                            \n                                width\n                            \n                            \n                                width$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSize\n                            \n                            \n                                getHeight\n                            \n                            \n                                getWidth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/size.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSize(width: , height: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/size.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        height\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHeight()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/size.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/size.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actualHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actualHeight:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actualWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actualWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.height.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.width.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SizeService {\n  width = new Subject();\n  height = new Subject();\n  actualWidth: number;\n  actualHeight: number;\n  width$ = this.width.asObservable();\n  height$ = this.height.asObservable();\n  constructor() {\n    if (localStorage.getItem('width') && localStorage.getItem('height')) {\n      this.actualWidth = Number(localStorage.getItem('width'));\n      this.actualHeight = Number(localStorage.getItem('height'));\n    } else {\n      this.actualWidth = null;\n      this.actualHeight = null;\n    }\n  }\n  changeSize(width, height) {\n    this.width.next(width);\n    this.height.next(height);\n    this.actualWidth = width;\n    this.actualHeight = height;\n    if (width && height) {\n      localStorage.setItem('width', width);\n      localStorage.setItem('height', height);\n    } else {\n      localStorage.removeItem('width');\n      localStorage.removeItem('height');\n    }\n  }\n  getWidth() {\n    return this.actualWidth;\n  }\n\n  getHeight() {\n    return this.actualHeight;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderControllerComponent.html":{"url":"components/SliderControllerComponent.html","title":"component - SliderControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/slider-controller/slider-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                slider-controller\n            \n\n            \n                styleUrls\n                slider-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./slider-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fillsize\n                            \n                            \n                                shell\n                            \n                            \n                                shellView\n                            \n                            \n                                slider\n                            \n                            \n                                zindex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbWidth\n                                \n                                \n                                    thumbHeight\n                                \n                                \n                                    thumbTop\n                                \n                                \n                                    thumbLeft\n                                \n                                \n                                    fillWidth\n                                \n                                \n                                    fillHeight\n                                \n                                \n                                    fillTop\n                                \n                                \n                                    fillLeft\n                                \n                                \n                                    trackWidth\n                                \n                                \n                                    trackHeight\n                                \n                                \n                                    trackTop\n                                \n                                \n                                    trackLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:216\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:221\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillsize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillsize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shell\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shell:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shellView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shellView:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zindex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zindex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thumbWidth\n                    \n                \n\n                \n                    \n                        getthumbWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbHeight\n                    \n                \n\n                \n                    \n                        getthumbHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbTop\n                    \n                \n\n                \n                    \n                        getthumbTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbLeft\n                    \n                \n\n                \n                    \n                        getthumbLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillWidth\n                    \n                \n\n                \n                    \n                        getfillWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:89\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillHeight\n                    \n                \n\n                \n                    \n                        getfillHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillTop\n                    \n                \n\n                \n                    \n                        getfillTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:123\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillLeft\n                    \n                \n\n                \n                    \n                        getfillLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:146\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackWidth\n                    \n                \n\n                \n                    \n                        gettrackWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackHeight\n                    \n                \n\n                \n                    \n                        gettrackHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackTop\n                    \n                \n\n                \n                    \n                        gettrackTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:185\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackLeft\n                    \n                \n\n                \n                    \n                        gettrackLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:196\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, ViewChild, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SliderControllerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'slider-controller',\n  templateUrl: './slider-controller.component.html',\n  styleUrls: ['./slider-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class SliderControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  @ViewChild('sliderShell')\n  shellView: ElementRef;\n  shell: HTMLElement;\n  slider: any;\n  fillsize = 16;\n  zindex = 0;\n\n  get thumbWidth(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    if (vertical) {\n      return smallval;\n    } else {\n      return smallval / 2.5;\n    }\n  }\n  get thumbHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      if (!vertical) {\n        return smallval;\n      } else {\n        return smallval / 2.5;\n      }\n    } else {\n      return null;\n    }\n  }\n  get thumbTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? loc : 0;\n    } else {\n      return null;\n    }\n  }\n  get thumbLeft(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? 0 : loc;\n    } else {\n      return null;\n    }\n  }\n\n  get fillWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get fillHeight(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return Math.max(0, vertical ? bigval - filloffset - fillsize - loc : fillsize);\n    } else {\n      return null;\n    }\n  }\n  get fillTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n\n      /* Fill */\n\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return vertical ? loc + thumbsize : filloffset;\n    } else {\n      return null;\n    }\n  }\n  get fillLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  get trackWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return bigval - thumbsize * 1.25;\n    } else {\n      return null;\n    }\n  }\n  get trackTop(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  ngOnInit() {\n    this.shell = this.shellView.nativeElement;\n    this.zindex = this.config.zindex || 0;\n  }\n\n  setValue() {\n    this.onChangeCallback(this.slider);\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.slider = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n\n    \n\n    \n        \n\t\n\t\n\t\n\t\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            music-tempo : ^1.0.3\n        \n            rxjs : ^6.0.0\n        \n            tunajs : ^1.0.2\n        \n            wavesurfer.js : ^2.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            decimalAdjust   (src/.../app-effects-creator.component.ts)\n                        \n                        \n                            stepValidator   (src/.../app-effects-creator.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/app-effects-creator/app-effects-creator.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            decimalAdjust\n                            \n                            \n                        \n                    \n                \n                \n                    \ndecimalAdjust(type: , value: , exp: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        exp\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepValidator(step: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        step\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTFG\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun npm test to execute the unit tests via jest.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nDocumentation\nTo access the compodoc generated documentation go to https://clm2609.gitlab.io/tfg\nWebApp\nTo see the latest stage state of the app go to http://virtualdj-stage.surge.sh/\nTo see the latest production state of the app go to http://virtualdj.surge.sh/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppEffectsCreatorComponent\n\nAppEffectsCreatorComponent\n\nAppModule -->\n\nAppEffectsCreatorComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
