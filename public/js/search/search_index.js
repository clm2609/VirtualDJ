var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppAboutComponent.html",[0,0.137,1,0.381]],["body/components/AppAboutComponent.html",[0,0.24,1,0.665,2,0.352,3,0.279,4,0.698,5,0.279,6,1.373,7,3.231,8,3.058,9,1.204,10,1.343,11,0.698,12,1.068,13,0.917,14,0.914,15,4.006,16,0.914,17,4.006,18,1.343,19,0.601,20,3.058,21,0.352,22,0.05,23,0.279,24,0.279,25,0.352,26,1.048,27,4.006,28,4.006,29,4.741,30,4.741,31,4.006,32,4.741,33,4.741,34,4.741,35,4.741,36,4.006,37,1.082,38,0.698,39,0.461,40,0.698,41,0.429,42,0.698,43,0.429,44,0.698,45,0.429,46,0.698,47,0.429,48,0.512,49,0.698,50,0.429,51,0.698,52,0.429,53,0.698,54,0.429,55,0.698,56,0.429,57,0.698,58,0.429,59,0.698,60,0.698,61,0.429,62,0.698,63,0.698,64,0.698,65,0.698,66,0.037,67,0.037]],["title/components/AppComponent.html",[0,0.137,41,0.381]],["body/components/AppComponent.html",[0,0.25,1,0.479,2,0.392,3,0.312,4,0.778,5,0.312,11,0.778,12,1.083,13,0.914,14,0.98,16,0.98,21,0.392,22,0.05,23,0.312,24,0.312,25,0.392,37,1.127,38,0.778,39,0.494,40,0.778,41,0.693,42,0.778,43,0.479,44,0.778,45,0.479,46,0.778,47,0.479,48,0.571,49,0.778,50,0.479,51,0.778,52,0.479,53,0.778,54,0.479,55,0.778,56,0.479,57,0.778,58,0.479,59,0.778,60,0.778,61,0.479,62,0.778,63,0.778,64,0.778,65,0.778,66,0.039,67,0.039,68,3.41,69,2.917,70,4.296,71,4.296]],["title/components/AppDeckComponent.html",[0,0.137,43,0.381]],["body/components/AppDeckComponent.html",[0,0.197,1,0.274,2,0.225,3,0.179,4,0.446,5,0.267,6,1.662,9,0.879,10,1.053,11,0.446,12,0.991,13,0.859,14,0.667,16,0.667,18,0.588,19,0.936,21,0.448,22,0.052,23,0.179,24,0.179,25,0.225,26,0.67,37,0.888,38,0.446,39,0.403,40,0.446,41,0.274,42,0.446,43,0.546,44,0.446,45,0.274,46,0.446,47,0.274,48,0.327,49,0.446,50,0.274,51,0.446,52,0.274,53,0.446,54,0.274,55,0.446,56,0.274,57,0.446,58,0.274,59,0.446,60,0.446,61,0.274,62,0.446,63,0.446,64,0.446,65,0.446,66,0.027,67,0.027,72,3.912,73,1.955,74,3.505,75,2.826,76,1.485,77,2.925,78,2.925,79,0.513,80,1.002,81,2.551,82,3.757,83,2.271,84,3.359,85,1.002,86,3.89,87,3.89,88,2.641,89,3.505,90,1.707,91,2.013,92,2.925,93,0.588,94,1.498,95,0.588,96,2.641,97,1.955,98,1.955,99,1.201,100,1.427,101,1.955,102,1.955,103,1.955,104,0.869,105,0.869,106,1.557,107,1.955,108,1.955,109,1.141,110,1.141,111,2.359,112,0.992,113,1.577,114,1.707,115,1.577,116,1.577,117,2.359,118,1.141,119,1.955,120,3.137,121,1.955,122,1.955,123,1.485,124,3.505,125,1.955,126,2.925,127,1.955,128,2.925,129,1.955,130,1.955,131,1.955,132,1.955,133,1.955,134,1.955,135,1.955,136,1.955,137,1.955,138,1.955,139,2.925,140,1.577,141,1.955,142,1.955,143,1.955,144,1.141,145,1.955,146,1.955,147,1.955,148,1.955,149,1.955,150,2.925,151,1.955,152,2.826,153,1.955,154,1.955,155,1.577,156,1.577,157,1.955,158,1.955,159,2.359,160,4.371,161,4.371,162,4.371,163,2.925,164,2.925,165,4.987,166,1.485,167,1.3,168,2.359,169,2.359,170,2.359]],["title/components/AppLayoutComponent.html",[0,0.137,45,0.381]],["body/components/AppLayoutComponent.html",[0,0.246,1,0.457,2,0.374,3,0.297,4,0.742,5,0.297,6,1.429,9,1.253,10,1.383,11,0.742,12,1.076,13,0.924,14,0.951,16,0.951,18,1.383,19,0.639,21,0.374,22,0.051,23,0.297,24,0.297,25,0.374,26,1.115,37,1.107,38,0.742,39,0.48,40,0.742,41,0.457,42,0.742,43,0.457,44,0.742,45,0.681,46,0.742,47,0.457,48,0.545,49,0.742,50,0.457,51,0.742,52,0.457,53,0.742,54,0.457,55,0.742,56,0.457,57,0.742,58,0.457,59,0.742,60,0.742,61,0.457,62,0.742,63,0.742,64,0.742,65,0.742,66,0.038,67,0.038,171,3.362,172,3.253,173,4.17,174,4.17,175,4.17,176,3.253]],["title/modules/AppModule.html",[177,1.06,178,1.586]],["body/modules/AppModule.html",[1,0.672,2,0.293,3,0.233,5,0.233,7,2.056,13,0.427,21,0.621,22,0.052,23,0.233,24,0.324,25,0.293,41,0.736,43,0.672,45,0.672,47,0.672,48,0.593,50,0.672,52,0.672,54,0.672,56,0.672,58,0.672,61,0.672,66,0.032,67,0.032,72,2.056,171,2.056,177,1.382,178,3.246,179,1.488,180,2.056,181,3.284,182,3.284,183,2.068,184,2.056,185,2.056,186,2.056,187,2.056,188,2.43,189,2.857,190,2.056,191,1.731,192,2.549,193,3.543,194,2.056,195,1.731,196,2.857,197,2.549,198,2.549,199,5.006,200,2.549,201,2.549,202,2.056,203,2.549,204,2.549,205,2.056,206,3.543,207,2.857,208,1.294,209,2.549,210,2.056,211,2.056,212,2.549,213,2.056,214,2.549,215,2.056,216,2.549,217,2.056,218,2.549,219,2.549]],["title/components/AppMusicListComponent.html",[0,0.137,47,0.381]],["body/components/AppMusicListComponent.html",[0,0.203,1,0.291,2,0.238,3,0.189,4,0.473,5,0.433,6,1.658,9,0.918,10,0.623,11,0.473,12,1.002,13,0.868,14,0.697,16,0.697,18,0.623,19,0.932,21,0.417,22,0.052,23,0.189,24,0.189,25,0.238,37,0.913,38,0.473,39,0.491,40,0.473,41,0.291,42,0.473,43,0.291,44,0.473,45,0.291,46,0.473,47,0.562,48,0.917,49,0.473,50,0.291,51,0.473,52,0.291,53,0.473,54,0.291,55,0.473,56,0.291,57,0.473,58,0.291,59,0.473,60,0.473,61,0.291,62,0.473,63,0.473,64,0.473,65,0.473,66,0.028,67,0.037,75,2.925,76,1.052,79,0.544,80,1.047,81,2.606,83,2.824,85,1.047,90,1.783,91,2.052,93,1.09,94,1.463,95,1.09,99,1.463,100,1.372,106,1.357,109,1.21,110,1.21,111,2.463,112,1.052,114,1.21,115,1.671,118,1.21,123,1.551,140,1.671,155,1.671,156,1.671,159,2.463,215,3.901,220,2.072,221,3.054,222,3.054,223,3.054,224,4.003,225,4.465,226,4.003,227,3.054,228,3.054,229,4.003,230,3.054,231,3.054,232,2.072,233,3.054,234,2.072,235,2.072,236,2.072,237,2.072,238,2.925,239,2.072,240,4.003,241,2.072,242,3.054,243,2.072,244,2.072,245,2.072,246,2.072,247,3.054,248,2.072,249,3.054,250,2.072,251,3.054,252,3.054,253,3.054,254,3.054,255,2.072,256,2.072,257,2.072,258,2.072,259,3.054,260,2.463,261,2.074,262,2.463,263,2.463,264,2.463,265,3.054]],["title/modules/AppRoutingModule.html",[177,1.06,188,1.379]],["body/modules/AppRoutingModule.html",[2,0.453,3,0.359,5,0.359,21,0.597,22,0.051,23,0.359,24,0.429,25,0.453,66,0.043,67,0.043,123,1.997,177,1.535,188,2.381,196,3.782,207,3.782,208,1.997,266,3.934,267,3.934,268,5.011,269,4.69,270,3.172,271,3.934]],["title/components/AppSearchComponent.html",[0,0.137,50,0.381]],["body/components/AppSearchComponent.html",[0,0.216,1,0.335,2,0.275,3,0.218,4,0.545,5,0.413,6,1.547,9,1.018,10,1.182,11,0.545,12,1.028,13,0.887,14,0.772,16,0.772,18,0.718,19,0.841,21,0.39,22,0.051,23,0.218,24,0.218,25,0.275,26,0.819,37,0.976,38,0.545,39,0.52,40,0.545,41,0.335,42,0.545,43,0.335,44,0.545,45,0.335,46,0.545,47,0.335,48,0.4,49,0.545,50,0.6,51,0.545,52,0.335,53,0.545,54,0.335,55,0.545,56,0.335,57,0.545,58,0.335,59,0.545,60,0.545,61,0.335,62,0.545,63,0.545,64,0.545,65,0.545,66,0.051,67,0.031,79,0.628,80,1.16,81,2.737,85,1.16,90,1.976,91,2.142,93,1.182,94,1.466,95,1.182,99,1.16,100,1.16,106,1.062,109,1.395,110,1.395,118,1.395,166,2.674,167,2.445,211,3.641,262,2.73,272,2.389,273,3.385,274,3.385,275,3.385,276,2.73,277,3.385,278,3.385,279,2.389,280,2.389,281,2.73,282,3.171,283,2.389,284,2.389,285,3.385]],["title/components/AppSettingsComponent.html",[0,0.137,52,0.381]],["body/components/AppSettingsComponent.html",[0,0.224,1,0.361,2,0.296,3,0.235,4,0.934,5,0.235,6,1.223,9,1.073,10,1.231,11,0.588,12,1.041,13,0.897,14,0.814,16,0.814,18,1.231,19,0.506,21,0.296,22,0.049,23,0.235,24,0.235,25,0.296,26,0.883,37,1.009,38,0.588,39,0.411,40,0.588,41,0.361,42,0.588,43,0.361,44,0.588,45,0.361,46,0.588,47,0.361,48,0.431,49,0.588,50,0.361,51,0.588,52,0.62,53,0.588,54,0.361,55,0.588,56,0.361,57,0.588,58,0.361,59,0.588,60,0.588,61,0.361,62,0.588,63,0.588,64,0.588,65,0.588,66,0.033,67,0.033,76,2.244,166,2.438,167,2.134,168,3.564,169,3.564,170,4.481,217,2.878,286,2.576,287,2.878,288,3.568,289,3.568,290,2.576,291,3.568,292,3.568,293,3.568,294,5.539,295,5.539,296,4.42,297,4.42]],["title/components/AppTabsComponent.html",[0,0.137,54,0.381]],["body/components/AppTabsComponent.html",[0,0.214,1,0.327,2,0.268,3,0.213,4,0.531,5,0.354,6,1.731,11,0.531,12,1.024,13,0.884,14,0.759,16,0.759,18,0.7,19,0.979,21,0.383,22,0.051,23,0.213,24,0.213,25,0.268,37,0.965,38,0.531,39,0.535,40,0.531,41,0.327,42,0.531,43,0.327,44,0.531,45,0.327,46,0.531,47,0.327,48,0.749,49,0.531,50,0.327,51,0.531,52,0.327,53,0.531,54,0.593,55,0.531,56,0.327,57,0.531,58,0.327,59,0.531,60,0.531,61,0.327,62,0.531,63,0.531,64,0.531,65,0.531,66,0.03,67,0.03,79,0.612,80,1.139,81,2.714,83,1.941,85,1.139,90,1.941,91,2.127,93,1.271,94,1.449,95,1.271,99,1.329,100,1.329,104,1.477,105,1.477,106,1.035,109,1.36,110,1.36,116,3.749,117,3.41,118,1.36,152,1.878,213,4.074,238,2.681,263,3.41,264,2.681,276,2.681,281,2.681,282,3.126,287,2.681,298,2.329,299,3.325,300,3.325,301,3.325,302,3.325,303,3.325,304,3.126,305,3.877,306,3.325,307,2.329,308,2.329,309,1.878,310,3.126,311,2.329,312,2.329,313,3.325,314,2.329,315,2.329,316,3.325,317,2.329,318,2.329,319,2.329,320,2.329,321,3.325,322,3.325,323,2.329,324,3.877,325,2.329,326,2.329,327,1.581,328,2.329,329,2.329,330,3.325]],["title/components/AppVolumeComponent.html",[0,0.137,56,0.381]],["body/components/AppVolumeComponent.html",[0,0.246,1,0.457,2,0.374,3,0.297,4,0.742,5,0.297,6,1.429,9,1.253,10,1.383,11,0.742,12,1.076,13,0.924,14,0.951,16,0.951,18,1.383,19,0.639,21,0.374,22,0.051,23,0.297,24,0.297,25,0.374,26,1.115,37,1.107,38,0.742,39,0.48,40,0.742,41,0.457,42,0.742,43,0.457,44,0.742,45,0.457,46,0.742,47,0.457,48,0.545,49,0.742,50,0.457,51,0.742,52,0.457,53,0.742,54,0.457,55,0.742,56,0.681,57,0.742,58,0.457,59,0.742,60,0.742,61,0.457,62,0.742,63,0.742,64,0.742,65,0.742,66,0.038,67,0.038,202,3.362,331,3.253,332,4.17,333,4.17,334,4.17,335,3.253]],["title/injectables/MusicLoaderService.html",[91,1.207,336,1.379]],["body/injectables/MusicLoaderService.html",[2,0.31,3,0.246,5,0.476,19,1.012,21,0.424,22,0.052,23,0.246,24,0.246,25,0.31,39,0.483,48,0.85,66,0.034,67,0.034,69,1.831,76,1.369,79,0.708,80,1.262,83,2.843,85,1.262,91,1.637,93,1.261,94,1.617,95,1.261,99,1.438,100,1.438,104,2.164,105,2.164,112,1.369,144,2.843,166,1.369,261,2.501,336,2.129,337,5.206,338,2.697,339,3.635,340,5.075,341,4.507,342,3.683,343,3.683,344,3.683,345,2.697,346,3.683,347,2.697,348,2.97,349,2.697,350,4.02,351,2.697,352,3.635,353,2.697,354,2.97,355,2.97,356,2.697,357,2.697,358,3.683,359,2.697,360,2.697,361,2.697,362,2.697,363,2.697,364,2.175,365,2.697,366,2.697,367,2.697,368,3.683,369,2.697]],["title/injectables/PlayerServiceService.html",[336,1.379,370,2.191]],["body/injectables/PlayerServiceService.html",[2,0.373,3,0.297,5,0.443,19,0.953,21,0.479,22,0.052,23,0.297,24,0.297,25,0.373,39,0.373,66,0.038,67,0.038,69,2.204,76,2.71,79,0.852,80,1.427,84,3.911,85,1.427,93,0.976,94,1.576,95,0.976,99,1.112,100,1.112,104,2.043,105,2.043,112,1.648,144,2.831,261,2.827,336,2.334,339,3.911,348,3.358,350,4.044,352,3.911,354,3.358,355,3.358,364,2.617,370,3.358,371,5.015,372,3.246,373,3.246,374,3.246,375,3.246,376,3.246,377,3.246,378,3.246]],["title/components/RouletteControllerComponent.html",[0,0.137,58,0.381]],["body/components/RouletteControllerComponent.html",[0,0.193,1,0.263,2,0.216,3,0.171,4,0.428,5,0.171,9,0.852,10,1.027,11,0.428,12,1.001,13,0.788,14,0.646,16,0.646,18,1.027,19,0.971,21,0.326,22,0.052,23,0.171,24,0.259,25,0.216,26,0.642,37,0.869,38,0.428,39,0.471,40,0.428,41,0.263,42,0.428,43,0.263,44,0.428,45,0.263,46,0.428,47,0.263,48,0.314,49,0.428,50,0.263,51,0.428,52,0.263,53,0.428,54,0.263,55,0.428,56,0.263,57,0.428,58,0.574,59,1.074,60,0.428,61,0.263,62,0.869,63,0.779,64,0.428,65,0.428,66,0.026,67,0.026,79,0.492,80,0.971,82,3.709,85,0.971,88,2.585,93,1.027,94,1.531,95,1.027,96,2.776,99,1.474,100,1.531,104,1.518,105,2.092,106,0.833,114,1.994,120,2.285,123,2.184,167,0.833,183,1.994,208,0.951,210,4.031,304,2.755,309,1.511,310,2.285,327,2.92,379,4.999,380,1.511,381,2.755,382,2.755,383,2.285,384,2.285,385,3.808,386,3.808,387,2.285,388,2.285,389,3.808,390,2.285,391,2.755,392,2.833,393,1.511,394,1.874,395,1.874,396,2.833,397,1.874,398,2.285,399,1.874,400,3.071,401,2.285,402,1.874,403,1.874,404,1.511,405,2.285,406,1.874,407,1.874,408,1.874,409,1.511,410,3.808,411,1.511,412,2.285,413,2.285,414,2.285,415,2.755,416,1.511,417,1.511,418,1.511,419,1.511,420,1.511,421,1.874,422,1.874,423,2.833,424,1.874,425,1.874,426,2.833,427,2.833,428,1.511,429,1.511,430,2.833,431,2.833,432,2.833,433,1.874,434,1.874,435,1.874,436,3.416,437,1.511,438,1.511,439,1.874,440,1.874,441,1.874,442,4.089,443,1.874,444,1.874,445,1.874,446,1.874,447,1.874,448,1.874,449,1.874,450,1.874,451,1.874,452,1.511,453,1.874,454,1.874]],["title/components/SliderControllerComponent.html",[0,0.137,61,0.381]],["body/components/SliderControllerComponent.html",[0,0.142,1,0.154,2,0.126,3,0.1,4,0.25,5,0.1,9,0.554,10,0.717,11,0.25,12,0.857,13,0.658,14,0.42,16,0.42,19,0.939,21,0.274,22,0.052,23,0.1,24,0.168,25,0.126,26,0.375,37,0.638,38,0.25,39,0.359,40,0.25,41,0.154,42,0.25,43,0.154,44,0.25,45,0.154,46,0.25,47,0.154,48,0.183,49,0.25,50,0.154,51,0.25,52,0.154,53,0.25,54,0.154,55,0.25,56,0.154,57,0.25,58,0.154,59,0.25,60,0.25,61,0.438,62,0.952,63,0.544,64,0.25,65,0.25,66,0.017,67,0.017,79,0.287,80,0.631,85,0.631,88,1.899,93,0.717,94,1.232,95,0.717,96,1.251,99,1.606,100,1.159,104,0.486,105,1.243,106,1.243,114,1.075,123,2.79,166,1.716,167,1.854,183,1.392,205,3.886,208,0.556,327,0.743,380,0.883,381,1.923,382,1.923,383,1.485,384,1.485,387,1.485,388,1.485,390,1.485,391,1.923,393,0.883,398,1.485,400,2.255,401,1.485,404,0.883,405,1.485,409,0.883,411,0.883,412,1.485,413,1.485,414,1.485,415,1.923,416,0.883,417,0.883,418,0.883,419,0.883,420,0.883,428,4.304,429,0.883,437,0.883,438,1.485,455,4.818,456,4.059,457,4.511,458,2.797,459,1.842,460,2.385,461,2.385,462,2.385,463,2.385,464,2.385,465,2.385,466,2.385,467,2.385,468,2.385,469,2.385,470,2.385,471,2.385,472,1.095,473,1.095,474,1.095,475,1.095,476,2.797,477,2.385,478,1.095,479,1.485,480,1.095,481,1.095,482,1.095,483,1.095,484,1.095,485,1.095,486,1.095,487,1.095,488,1.095,489,1.095,490,1.095,491,1.095,492,1.095,493,1.095,494,1.095,495,1.095,496,1.095,497,1.095,498,1.095,499,1.095,500,1.095,501,1.095,502,1.095,503,1.095,504,1.095,505,1.095,506,1.095,507,4.273,508,4.173,509,4.441,510,4.362,511,4.362,512,1.842,513,4.273,514,3.595,515,4.685,516,4.273,517,3.381,518,4.511,519,4.734,520,3.775,521,3.775,522,4.685,523,4.273,524,2.797,525,3.775,526,1.095,527,1.095,528,1.095]],["title/dependencies.html",[179,1.906,529,2.272]],["body/dependencies.html",[22,0.051,23,0.355,66,0.042,67,0.042,112,1.971,113,3.131,179,2.266,194,3.752,195,3.159,208,1.971,270,3.131,530,3.882,531,5.503,532,3.882,533,3.882,534,3.882,535,3.882,536,3.882,537,3.882,538,3.882,539,3.882,540,3.882,541,3.882,542,3.882]],["title/miscellaneous/functions.html",[543,1.832,544,2.633]],["body/miscellaneous/functions.html",[12,0.94,22,0.046,39,0.468,66,0.044,67,0.044,79,1.067,93,1.221,95,1.221,452,3.276,479,3.855,543,3.276,544,3.276,545,4.063,546,4.78,547,4.063,548,4.063,549,4.063,550,4.063,551,4.063,552,4.063,553,4.063,554,4.063,555,4.063,556,4.063,557,4.063,558,4.063]],["title/index.html",[79,0.597,260,1.832,559,2.272]],["body/index.html",[0,0.234,3,0.299,5,0.299,13,0.773,22,0.038,39,0.377,66,0.038,67,0.038,144,1.911,191,2.223,560,3.274,561,4.187,562,5.028,563,4.616,564,4.616,565,3.274,566,3.274,567,3.274,568,4.187,569,5.228,570,5.143,571,3.274,572,3.274,573,3.274,574,3.274,575,3.274,576,3.274,577,3.274,578,3.274,579,3.274,580,4.616,581,3.274,582,5.028,583,3.274,584,3.274,585,3.274,586,3.274,587,3.274,588,3.274,589,4.187,590,4.187,591,5.028,592,3.274,593,4.187,594,4.187,595,3.274,596,4.865,597,3.274,598,3.274,599,3.274,600,4.616,601,3.274,602,4.865,603,3.274,604,3.274,605,4.187,606,3.274,607,3.274,608,3.274,609,3.274,610,4.187,611,4.187,612,3.274,613,4.187,614,3.274,615,3.274,616,3.274]],["title/modules.html",[177,1.444]],["body/modules.html",[22,0.045,66,0.045,67,0.045,177,1.662,178,2.487,188,2.163,195,2.893,617,4.261,618,4.261,619,4.915,620,4.261,621,4.261]],["title/overview.html",[622,2.985]],["body/overview.html",[0,0.171,1,0.657,22,0.051,24,0.308,41,0.739,43,0.657,45,0.657,47,0.657,50,0.657,52,0.657,54,0.657,56,0.657,58,0.657,61,0.657,66,0.039,67,0.039,167,1.895,177,1.664,178,3.301,179,1.968,180,2.718,181,2.718,182,2.718,183,1.968,184,2.718,185,2.718,186,2.718,187,2.718,188,2.376,189,3.44,190,2.718,191,2.289,336,1.711,622,2.718,623,3.371]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":106,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["0.5",{"_index":435,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["0.8.26",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":166,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/MusicLoaderService.html":{},"components/SliderControllerComponent.html":{}}}],["1.25",{"_index":527,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["10",{"_index":153,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["100",{"_index":410,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["11",{"_index":623,"title":{},"body":{"overview.html":{}}}],["135",{"_index":434,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["16",{"_index":476,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["16x",{"_index":163,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["2",{"_index":167,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["2.1.1",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":512,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["2.5.4",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["2x",{"_index":160,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["3",{"_index":168,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["3.0",{"_index":35,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["32x",{"_index":164,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["360",{"_index":154,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["4",{"_index":169,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["4x",{"_index":161,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["5",{"_index":296,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["50",{"_index":121,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["6",{"_index":297,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["6.0.0",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":566,"title":{},"body":{"index.html":{}}}],["8x",{"_index":162,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_",{"_index":420,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["_contain",{"_index":454,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["_wave",{"_index":133,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_wave').offsetheight",{"_index":127,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["about'},{'nam",{"_index":40,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["about.compon",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["about.component.css",{"_index":15,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.t",{"_index":8,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.ts:8",{"_index":20,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about/app",{"_index":7,"title":{},"body":{"components/AppAboutComponent.html":{},"modules/AppModule.html":{}}}],["access",{"_index":606,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":459,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["activ",{"_index":116,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["actual_compon",{"_index":65,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["addsong",{"_index":342,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["addsong(song",{"_index":344,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["afterviewinit",{"_index":74,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["angular",{"_index":563,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["aot",{"_index":556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["appaboutcompon",{"_index":1,"title":{"components/AppAboutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appcompon",{"_index":41,"title":{"components/AppComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appdeckcompon",{"_index":43,"title":{"components/AppDeckComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["applayoutcompon",{"_index":45,"title":{"components/AppLayoutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appmodul",{"_index":178,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmusiclistcompon",{"_index":47,"title":{"components/AppMusicListComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["approutingmodul",{"_index":188,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsearchcompon",{"_index":50,"title":{"components/AppSearchComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appsettingscompon",{"_index":52,"title":{"components/AppSettingsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["apptabscompon",{"_index":54,"title":{"components/AppTabsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appvolumecompon",{"_index":56,"title":{"components/AppVolumeComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["argument",{"_index":309,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["artifact",{"_index":583,"title":{},"body":{"index.html":{}}}],["artist",{"_index":259,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["attribut",{"_index":28,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["automat",{"_index":575,"title":{},"body":{"index.html":{}}}],["avail",{"_index":621,"title":{},"body":{"modules.html":{}}}],["bigval",{"_index":518,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["bootstrap",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["break",{"_index":449,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["brows",{"_index":619,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":582,"title":{},"body":{"index.html":{}}}],["caveat",{"_index":553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cc",{"_index":34,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["chang",{"_index":577,"title":{},"body":{"index.html":{}}}],["check",{"_index":603,"title":{},"body":{"index.html":{}}}],["choos",{"_index":285,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["class",{"_index":25,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["cli",{"_index":564,"title":{},"body":{"index.html":{}}}],["closest",{"_index":441,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["closest(el",{"_index":453,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["cluster_appmodul",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":578,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":607,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":38,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["components/app",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["components/roulett",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["components/slid",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["comput",{"_index":265,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["config",{"_index":391,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["configslid",{"_index":385,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["console.log('error",{"_index":151,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["const",{"_index":123,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["constructor(musicservic",{"_index":90,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["contain",{"_index":131,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["content",{"_index":27,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["control",{"_index":63,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller'},{'nam",{"_index":60,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.compon",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["controller.component.css",{"_index":383,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.html",{"_index":384,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.t",{"_index":380,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:102",{"_index":493,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:121",{"_index":495,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:129",{"_index":497,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:140",{"_index":499,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:148",{"_index":501,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:155",{"_index":503,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:168",{"_index":474,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:173",{"_index":475,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:178",{"_index":472,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:181",{"_index":473,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:20",{"_index":394,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:21",{"_index":408,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:22",{"_index":411,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":407,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:24",{"_index":409,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:25",{"_index":480,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":393,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:28",{"_index":482,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:38",{"_index":484,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:44",{"_index":403,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:48",{"_index":404,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:52",{"_index":406,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:57",{"_index":399,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:60",{"_index":402,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:61",{"_index":487,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:64",{"_index":397,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:76",{"_index":489,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:87",{"_index":491,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller/roulett",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{}}}],["controller/slid",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/SliderControllerComponent.html":{}}}],["controlvalueaccessor",{"_index":381,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["core",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["cue",{"_index":165,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["custom_text_input_control_value_accessor",{"_index":382,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["dark",{"_index":295,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["deck",{"_index":76,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}}}],["deck'},{'nam",{"_index":44,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deck.compon",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["deck.component.css",{"_index":77,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.html",{"_index":78,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.t",{"_index":73,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:13",{"_index":97,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:15",{"_index":103,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:16",{"_index":107,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:18",{"_index":108,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:19",{"_index":92,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:56",{"_index":102,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:61",{"_index":101,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:68",{"_index":98,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck/app",{"_index":72,"title":{},"body":{"components/AppDeckComponent.html":{},"modules/AppModule.html":{}}}],["deck_",{"_index":132,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deckload",{"_index":339,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}}}],["decknumb",{"_index":89,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["decksong",{"_index":340,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["declar",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":478,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["decorators/n",{"_index":504,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["default",{"_index":104,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["defin",{"_index":19,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deletesong",{"_index":343,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["deletesong(song",{"_index":346,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["depend",{"_index":179,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dev",{"_index":572,"title":{},"body":{"index.html":{}}}],["develop",{"_index":567,"title":{},"body":{"index.html":{}}}],["direct",{"_index":64,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":581,"title":{},"body":{"index.html":{}}}],["directori",{"_index":586,"title":{},"body":{"index.html":{}}}],["dist",{"_index":585,"title":{},"body":{"index.html":{}}}],["document",{"_index":605,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('deck_",{"_index":125,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["document:click",{"_index":392,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["document:click(ev",{"_index":395,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["drag",{"_index":263,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["drop",{"_index":330,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drope",{"_index":302,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["droped(ev",{"_index":313,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["dynam",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":597,"title":{},"body":{"index.html":{}}}],["effect",{"_index":170,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["el",{"_index":442,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.match",{"_index":444,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.mozmatchesselector",{"_index":446,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.msmatchesselector",{"_index":447,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.parentel",{"_index":450,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.webkitmatchesselector",{"_index":445,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["element",{"_index":452,"title":{},"body":{"components/RouletteControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["element.decor",{"_index":505,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["element.decorator.t",{"_index":546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elementref.nativeel",{"_index":552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["end",{"_index":596,"title":{},"body":{"index.html":{}}}],["english",{"_index":293,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["error",{"_index":150,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["event",{"_index":310,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["event.preventdefault",{"_index":321,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.stoppropag",{"_index":322,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.target",{"_index":451,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["exampl",{"_index":558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["execut",{"_index":593,"title":{},"body":{"index.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["fals",{"_index":117,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["filechangeev",{"_index":275,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filechangeevent(fileinput",{"_index":278,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["fileinput",{"_index":280,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filelist",{"_index":282,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["fileread",{"_index":145,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["fill",{"_index":429,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fillheight",{"_index":465,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillleft",{"_index":467,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filloffset",{"_index":525,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillsiz",{"_index":456,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filltop",{"_index":466,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillwidth",{"_index":464,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["flag",{"_index":588,"title":{},"body":{"index.html":{}}}],["fn",{"_index":400,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fold",{"_index":386,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["forkjoin",{"_index":363,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["formsmodul",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["forwardref",{"_index":412,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["function",{"_index":544,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":599,"title":{},"body":{"index.html":{}}}],["gener",{"_index":562,"title":{},"body":{"index.html":{}}}],["get",{"_index":559,"title":{"index.html":{}},"body":{}}],["getfillheight",{"_index":490,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillleft",{"_index":494,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfilltop",{"_index":492,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillwidth",{"_index":488,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbheight",{"_index":483,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbleft",{"_index":486,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbtop",{"_index":485,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbwidth",{"_index":481,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackheight",{"_index":498,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackleft",{"_index":502,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettracktop",{"_index":500,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackwidth",{"_index":496,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["go",{"_index":602,"title":{},"body":{"index.html":{}}}],["graph",{"_index":620,"title":{},"body":{"modules.html":{}}}],["height",{"_index":124,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["help",{"_index":600,"title":{},"body":{"index.html":{}}}],["here",{"_index":264,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["hostlisten",{"_index":304,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["hostlistener('document:click",{"_index":439,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["hostlistener('window:dragleav",{"_index":328,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["hostlistener('window:dragov",{"_index":325,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["htmlelement",{"_index":477,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["http://localhost:4200",{"_index":574,"title":{},"body":{"index.html":{}}}],["http://virtualdj",{"_index":614,"title":{},"body":{"index.html":{}}}],["http://virtualdj.surge.sh",{"_index":616,"title":{},"body":{"index.html":{}}}],["https://clm2609.gitlab.io/tfg",{"_index":608,"title":{},"body":{"index.html":{}}}],["icon",{"_index":29,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["id",{"_index":422,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ignor",{"_index":414,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["includes(lowsearch",{"_index":257,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["inject",{"_index":336,"title":{"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"overview.html":{}}}],["input",{"_index":88,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["instead",{"_index":551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jest",{"_index":595,"title":{},"body":{"index.html":{}}}],["js",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["languag",{"_index":291,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["latest",{"_index":611,"title":{},"body":{"index.html":{}}}],["layout",{"_index":173,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":46,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["layout.compon",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["layout.component.css",{"_index":174,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.html",{"_index":175,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.t",{"_index":172,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:8",{"_index":176,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout/app",{"_index":171,"title":{},"body":{"components/AppLayoutComponent.html":{},"modules/AppModule.html":{}}}],["legend",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["licens",{"_index":33,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["light",{"_index":294,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["list",{"_index":221,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list'},{'nam",{"_index":49,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["list.compon",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":222,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.html",{"_index":223,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.t",{"_index":220,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:11",{"_index":237,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:13",{"_index":236,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:14",{"_index":239,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:15",{"_index":230,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:30",{"_index":232,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:33",{"_index":234,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:36",{"_index":235,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list/app",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/AppMusicListComponent.html":{}}}],["load",{"_index":261,"title":{},"body":{"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}}}],["load(deck",{"_index":348,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}}}],["loader.servic",{"_index":110,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["loader.service.t",{"_index":338,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:10",{"_index":357,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:11",{"_index":351,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:12",{"_index":356,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:13",{"_index":353,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:15",{"_index":349,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:19",{"_index":345,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:23",{"_index":347,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:8",{"_index":360,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:9",{"_index":359,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loadondeck",{"_index":227,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loadondeck(deck",{"_index":231,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loc",{"_index":523,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["lowsearch",{"_index":250,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["made",{"_index":30,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["match",{"_index":67,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchesselector",{"_index":443,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["matchesselector.call(el",{"_index":448,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["math.max(0",{"_index":526,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["max",{"_index":425,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["method",{"_index":85,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["min",{"_index":424,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["miscellan",{"_index":543,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modul",{"_index":177,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":601,"title":{},"body":{"index.html":{}}}],["mouseev",{"_index":396,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["multi",{"_index":417,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music",{"_index":48,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music.filter(mu",{"_index":255,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musiclist",{"_index":224,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicload",{"_index":341,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["musicloaderservic",{"_index":91,"title":{"injectables/MusicLoaderService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["musicservic",{"_index":81,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["musicservice.mus",{"_index":241,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicservice.music$.subscribe(a",{"_index":243,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicsubscript",{"_index":115,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nativ",{"_index":550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nativeel",{"_index":479,"title":{},"body":{"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["nativeelement('slidershel",{"_index":506,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["nativeelement(selector",{"_index":548,"title":{},"body":{"miscellaneous/functions.html":{}}}],["navig",{"_index":573,"title":{},"body":{"index.html":{}}}],["new",{"_index":144,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"index.html":{}}}],["ng",{"_index":570,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":413,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ngafterviewinit",{"_index":122,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["ngmodul",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":155,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["noop",{"_index":415,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["normalize('nfd",{"_index":252,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["npm",{"_index":592,"title":{},"body":{"index.html":{}}}],["null",{"_index":352,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}}}],["number",{"_index":96,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["observ",{"_index":361,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["onchangecallback",{"_index":419,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ondestroy",{"_index":75,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ondocumentclick(ev",{"_index":440,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ondragover(ev",{"_index":326,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ontouchedcallback",{"_index":418,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["option",{"_index":95,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":622,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":529,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":93,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["pc",{"_index":515,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["percent",{"_index":430,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["playerserviceservic",{"_index":370,"title":{"injectables/PlayerServiceService.html":{}},"body":{"injectables/PlayerServiceService.html":{}}}],["playpaus",{"_index":86,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["privat",{"_index":114,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["prod",{"_index":587,"title":{},"body":{"index.html":{}}}],["product",{"_index":589,"title":{},"body":{"index.html":{}}}],["progresscolor",{"_index":136,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["project",{"_index":561,"title":{},"body":{"index.html":{}}}],["properti",{"_index":80,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["protractor",{"_index":598,"title":{},"body":{"index.html":{}}}],["provid",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["providedin",{"_index":364,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}}}],["purpl",{"_index":137,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["queri",{"_index":225,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["reader",{"_index":143,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["reader.onerror",{"_index":149,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["reader.onload",{"_index":147,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["reader.readasdataurl(this.song",{"_index":146,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["readm",{"_index":604,"title":{},"body":{"index.html":{}}}],["recievedfil",{"_index":276,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["recievedfiles(fil",{"_index":281,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["red",{"_index":135,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["registeronchang",{"_index":387,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registeronchange(fn",{"_index":398,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouch",{"_index":388,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouched(fn",{"_index":401,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["reload",{"_index":576,"title":{},"body":{"index.html":{}}}],["removesong",{"_index":228,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["removesong(song",{"_index":233,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["replace(/[\\u0300",{"_index":253,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["requestanimationfram",{"_index":128,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["reset",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetdisc",{"_index":87,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["result",{"_index":66,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":99,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["root",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}}}],["root'},{'nam",{"_index":42,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["rotat",{"_index":82,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["roulett",{"_index":59,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["roulettecontrollercompon",{"_index":58,"title":{"components/RouletteControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["roundicon",{"_index":36,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["rout",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":569,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":112,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"dependencies.html":{}}}],["scaffold",{"_index":579,"title":{},"body":{"index.html":{}}}],["search",{"_index":262,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{}}}],["search'},{'nam",{"_index":51,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["search.compon",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.css",{"_index":273,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.html",{"_index":274,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.t",{"_index":272,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:15",{"_index":279,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:19",{"_index":283,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:9",{"_index":277,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search/app",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"components/AppSearchComponent.html":{}}}],["searchmus",{"_index":248,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchmusic(this.queri",{"_index":258,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchqueri",{"_index":249,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["see",{"_index":610,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["serv",{"_index":571,"title":{},"body":{"index.html":{}}}],["server",{"_index":568,"title":{},"body":{"index.html":{}}}],["service.service.t",{"_index":372,"title":{},"body":{"injectables/PlayerServiceService.html":{}}}],["service.service.ts:10",{"_index":375,"title":{},"body":{"injectables/PlayerServiceService.html":{}}}],["service.service.ts:11",{"_index":374,"title":{},"body":{"injectables/PlayerServiceService.html":{}}}],["service.service.ts:13",{"_index":373,"title":{},"body":{"injectables/PlayerServiceService.html":{}}}],["service.service.ts:9",{"_index":376,"title":{},"body":{"injectables/PlayerServiceService.html":{}}}],["services/mus",{"_index":109,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["set",{"_index":287,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{}}}],["setact",{"_index":303,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["setactive(act",{"_index":316,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["setinterv",{"_index":119,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["settings'},{'nam",{"_index":53,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["settings.compon",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["settings.component.css",{"_index":288,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.html",{"_index":289,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.t",{"_index":286,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:8",{"_index":290,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings/app",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/AppSettingsComponent.html":{}}}],["setvalu",{"_index":458,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell",{"_index":457,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetheight",{"_index":511,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetwidth",{"_index":510,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shownmus",{"_index":226,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["slider",{"_index":62,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["slidercontrollercompon",{"_index":61,"title":{"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["smallval",{"_index":509,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["smashicon",{"_index":31,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["song",{"_index":83,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["song.nam",{"_index":159,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["spanish",{"_index":292,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["src/.../nativ",{"_index":545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/app",{"_index":6,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["src/app/components/decorators/n",{"_index":547,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/components/roulett",{"_index":379,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["src/app/components/slid",{"_index":455,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["src/app/services/mus",{"_index":337,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["src/app/services/play",{"_index":371,"title":{},"body":{"injectables/PlayerServiceService.html":{}}}],["stage",{"_index":612,"title":{},"body":{"index.html":{}}}],["stage.surge.sh",{"_index":615,"title":{},"body":{"index.html":{}}}],["start",{"_index":260,"title":{"index.html":{}},"body":{"components/AppMusicListComponent.html":{}}}],["state",{"_index":613,"title":{},"body":{"index.html":{}}}],["stopdrag",{"_index":329,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["store",{"_index":584,"title":{},"body":{"index.html":{}}}],["string",{"_index":238,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["string(mus.nam",{"_index":256,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["subject",{"_index":350,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}}}],["subscript",{"_index":111,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["support",{"_index":617,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":618,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":299,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs'},{'nam",{"_index":55,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tabs.compon",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.component.css",{"_index":300,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.html",{"_index":301,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.t",{"_index":298,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:10",{"_index":318,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:11",{"_index":319,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:12",{"_index":320,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:13",{"_index":317,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:15",{"_index":307,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:20",{"_index":314,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:27",{"_index":312,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:33",{"_index":308,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:36",{"_index":315,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs/app",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/AppTabsComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["test",{"_index":591,"title":{},"body":{"index.html":{}}}],["tfg",{"_index":560,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":152,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.config.id",{"_index":423,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.config.max",{"_index":517,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.config.min",{"_index":516,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.config.vert",{"_index":507,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.configslid",{"_index":421,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.max",{"_index":433,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.min",{"_index":432,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.deck[deck",{"_index":377,"title":{},"body":{"injectables/PlayerServiceService.html":{}}}],["this.deckloader[0].asobserv",{"_index":354,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}}}],["this.deckloader[1].asobserv",{"_index":355,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{}}}],["this.deckloader[deck].next(this.deck[deck",{"_index":378,"title":{},"body":{"injectables/PlayerServiceService.html":{}}}],["this.deckloader[deck].next(this.decksongs[deck",{"_index":366,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.decknumb",{"_index":126,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.decksongs[deck",{"_index":365,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.drag",{"_index":324,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.fills",{"_index":524,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.fold",{"_index":436,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.music.push(song",{"_index":367,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.music.splice(this.music.indexof(song",{"_index":369,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musiclist",{"_index":240,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicloader.asobserv",{"_index":358,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicloader.next(this.mus",{"_index":368,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicservic",{"_index":118,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.musicservice.decksongs$[this.decknumber].subscribe(a",{"_index":141,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.musicservice.deletesong(song",{"_index":245,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicservice.load(deck",{"_index":244,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicsubscript",{"_index":140,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.musicsubscription.unsubscrib",{"_index":156,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.onchangecallback",{"_index":437,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.slid",{"_index":528,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.ontouchedcallback",{"_index":438,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.queri",{"_index":246,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.recievedfiles(event.datatransfer.fil",{"_index":323,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.recievedfiles(fileinput.target.fil",{"_index":284,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["this.resetdisc",{"_index":139,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.rot",{"_index":120,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["this.shel",{"_index":508,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shownmus",{"_index":247,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.slid",{"_index":514,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.song",{"_index":142,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.thumbheight",{"_index":520,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.thumbwidth",{"_index":521,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.updatemus",{"_index":242,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.valu",{"_index":431,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.wavesurf",{"_index":129,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.wavesurfer.isplay",{"_index":158,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.wavesurfer.load(reader.result",{"_index":148,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.wavesurfer.on('finish",{"_index":138,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.wavesurfer.playpaus",{"_index":157,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["throwerror",{"_index":362,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["thumb",{"_index":426,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["thumbheight",{"_index":461,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbleft",{"_index":463,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbsiz",{"_index":519,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbtop",{"_index":462,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbwidth",{"_index":460,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tolowercas",{"_index":251,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["track",{"_index":427,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["trackheight",{"_index":469,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackleft",{"_index":471,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracksiz",{"_index":522,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracktop",{"_index":470,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackwidth",{"_index":468,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["true",{"_index":327,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["type",{"_index":94,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["u036f]/g",{"_index":254,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["undefin",{"_index":549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unfold",{"_index":389,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["unit",{"_index":590,"title":{},"body":{"index.html":{}}}],["updatemus",{"_index":229,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["us",{"_index":580,"title":{},"body":{"index.html":{}}}],["useexist",{"_index":416,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["val",{"_index":513,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["valu",{"_index":105,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["var",{"_index":37,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["version",{"_index":565,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":428,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["via",{"_index":594,"title":{},"body":{"index.html":{}}}],["void",{"_index":100,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerServiceService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volum",{"_index":332,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume'},{'nam",{"_index":57,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volume.compon",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["volume.component.css",{"_index":333,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.html",{"_index":334,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.t",{"_index":331,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:8",{"_index":335,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume/app",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"components/AppVolumeComponent.html":{}}}],["wavecolor",{"_index":134,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurf",{"_index":84,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerServiceService.html":{}}}],["wavesurfer.cr",{"_index":130,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurfer.j",{"_index":113,"title":{},"body":{"components/AppDeckComponent.html":{},"dependencies.html":{}}}],["webapp",{"_index":609,"title":{},"body":{"index.html":{}}}],["window:dragleav",{"_index":305,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragov",{"_index":306,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragover(ev",{"_index":311,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["won’t",{"_index":554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["work",{"_index":555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writevalu",{"_index":390,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["writevalue(valu",{"_index":405,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["www.flaticon.com",{"_index":32,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["zone.j",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppAboutComponent.html":{"url":"components/AppAboutComponent.html","title":"component - AppAboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppAboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-about/app-about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                app-about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-about.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-about/app-about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './app-about.component.html',\n  styleUrls: ['./app-about.component.css']\n})\nexport class AppAboutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  Content attribution:\n\n\n\n  \n  \n  Icons made by\n    Smashicons\n    from\n    www.flaticon.com\n    is licensed by\n    CC 3.0 BY\n  \n\n\n\n  \n  \n  Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Content attribution:      Icons made by    Smashicons    from    www.flaticon.com    is licensed by    CC 3.0 BY        Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppAboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n-->\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppDeckComponent.html":{"url":"components/AppDeckComponent.html","title":"component - AppDeckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppDeckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-deck/app-deck.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deck\n            \n\n            \n                styleUrls\n                app-deck.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-deck.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicService\n                            \n                            \n                                rotation\n                            \n                            \n                                song\n                            \n                            \n                                wavesurfer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                playPause\n                            \n                            \n                                resetDisc\n                            \n                            \n                                rotate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deckNumber\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-deck/app-deck.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deckNumber\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetDisc\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetDisc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            song\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        song:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wavesurfer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wavesurfer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { Subscription } from 'rxjs';\nimport * as WaveSurfer from 'wavesurfer.js';\n\n@Component({\n  selector: 'app-deck',\n  templateUrl: './app-deck.component.html',\n  styleUrls: ['./app-deck.component.css']\n})\nexport class AppDeckComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  deckNumber: number;\n  private musicSubscription: Subscription;\n  musicService: MusicLoaderService;\n  rotation = 0;\n  private active = false;\n  song: any;\n  wavesurfer: any;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n  ngOnInit() {\n    setInterval(() => {\n      this.rotate();\n    }, 50);\n  }\n  ngAfterViewInit(): void {\n    const height = document.getElementById('deck_' + this.deckNumber + '_wave').offsetHeight;\n    requestAnimationFrame(() => {\n      this.wavesurfer = WaveSurfer.create({\n        container: '#deck_' + this.deckNumber + '_wave',\n        waveColor: 'red',\n        progressColor: 'purple',\n        height: height\n      });\n      this.wavesurfer.on('finish', () => {\n        this.resetDisc();\n      });\n    });\n    this.musicSubscription = this.musicService.decksongs$[this.deckNumber].subscribe(a => {\n      this.resetDisc();\n      this.song = a as File;\n      requestAnimationFrame(() => {\n        const reader = new FileReader();\n        reader.readAsDataURL(this.song);\n        reader.onload = () => {\n          this.wavesurfer.load(reader.result);\n        };\n        reader.onerror = error => {\n          console.log('Error: ', error);\n        };\n      });\n    });\n  }\n  rotate() {\n    if (this.active) {\n      this.rotation = (this.rotation + 10) % 360;\n    }\n  }\n  resetDisc() {\n    this.active = false;\n    this.rotation = 0;\n  }\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n  playPause() {\n    this.wavesurfer.playPause();\n    this.active = this.wavesurfer.isPlaying();\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n    \n\n    \n      \n        {{song.name}}\n      \n\n      \n        \n          \n            \n          \n          \n            2x\n            4x\n            8x\n            16x\n            32x\n          \n        \n        \n          \n            \n              CUEs\n              \n                CUE 1\n                CUE 2\n                CUE 3\n                CUE 4\n              \n              Effects\n              \n                \n                  2x\n                  4x\n                  8x\n                \n                \n                  2x\n                  4x\n                  8x\n                \n              \n            \n            \n              \n            \n          \n          \n            CUE\n            \n              \n                \n                \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{song.name}}                                                                          2x            4x            8x            16x            32x                                                              CUEs                              CUE 1                CUE 2                CUE 3                CUE 4                            Effects                                                2x                  4x                  8x                                                  2x                  4x                  8x                                                                                                                CUE                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppDeckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppLayoutComponent.html":{"url":"components/AppLayoutComponent.html","title":"component - AppLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-layout/app-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                app-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-layout.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-layout/app-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './app-layout.component.html',\n  styleUrls: ['./app-layout.component.css']\n})\nexport class AppLayoutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppAboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                AppDeckComponent\n                            \n                            \n                                AppLayoutComponent\n                            \n                            \n                                AppMusicListComponent\n                            \n                            \n                                AppSearchComponent\n                            \n                            \n                                AppSettingsComponent\n                            \n                            \n                                AppTabsComponent\n                            \n                            \n                                AppVolumeComponent\n                            \n                            \n                                RouletteControllerComponent\n                            \n                            \n                                SliderControllerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppDeckComponent } from './components/app-deck/app-deck.component';\nimport { AppLayoutComponent } from './components/app-layout/app-layout.component';\nimport { AppVolumeComponent } from './components/app-volume/app-volume.component';\nimport { SliderControllerComponent } from './components/slider-controller/slider-controller.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouletteControllerComponent } from './components/roulette-controller/roulette-controller.component';\nimport { AppSearchComponent } from './components/app-search/app-search.component';\nimport { AppTabsComponent } from './components/app-tabs/app-tabs.component';\nimport { AppMusicListComponent } from './components/app-music-list/app-music-list.component';\nimport { AppSettingsComponent } from './components/app-settings/app-settings.component';\nimport { AppAboutComponent } from './components/app-about/app-about.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppDeckComponent,\n    AppLayoutComponent,\n    AppVolumeComponent,\n    SliderControllerComponent,\n    RouletteControllerComponent,\n    AppSearchComponent,\n    AppTabsComponent,\n    AppMusicListComponent,\n    AppSettingsComponent,\n    AppAboutComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppMusicListComponent.html":{"url":"components/AppMusicListComponent.html","title":"component - AppMusicListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppMusicListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-music-list/app-music-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music-list\n            \n\n            \n                styleUrls\n                app-music-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-music-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicList\n                            \n                            \n                                musicService\n                            \n                            \n                                query\n                            \n                            \n                                shownMusic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadOnDeck\n                            \n                            \n                                removeSong\n                            \n                            \n                                updateMusic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOnDeck\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadOnDeck(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeSong\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateMusic()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicList:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shownMusic:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-music-list',\n  templateUrl: './app-music-list.component.html',\n  styleUrls: ['./app-music-list.component.css']\n})\nexport class AppMusicListComponent implements OnDestroy {\n  musicService: MusicLoaderService;\n  private musicSubscription: Subscription;\n  musicList: File[];\n  shownMusic: File[];\n  query: string;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n    this.musicList = musicService.music;\n    this.updateMusic();\n    this.musicSubscription = musicService.music$.subscribe(a => {\n      this.musicList = a as File[];\n      this.updateMusic();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n\n  loadOnDeck(deck, song) {\n    this.musicService.load(deck, song);\n  }\n  removeSong(song) {\n    this.musicService.deleteSong(song);\n  }\n  updateMusic() {\n    if (!this.query) {\n      this.shownMusic = this.musicList;\n    } else {\n      const searchMusic = (searchQuery, music: any[]) => {\n        const lowSearch = searchQuery\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n        return music.filter(mus => {\n          return String(mus.name)\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .includes(lowSearch);\n        });\n      };\n      this.shownMusic = searchMusic(this.query, this.musicList);\n    }\n  }\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      \n        \n          Song\n          \n            \n            \n          \n        \n      \n      Artist -->\n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      {{song.name}}\n       -->\n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n    \n    \n      No songs match {{query}}\n    \n\n  \n  \n    \n    To start load music from the search or drag music here from your computer.\n  \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                                  Song                                                                Artist -->                                                                        {{song.name}}       -->                                                                                                                                          No songs match {{query}}                To start load music from the search or drag music here from your computer.    '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppMusicListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), FormsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSearchComponent.html":{"url":"components/AppSearchComponent.html","title":"component - AppSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-search/app-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                app-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChangeEvent\n                            \n                            \n                                recievedFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChangeEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChangeEvent(fileInput: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileInput\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n@Component({\n  selector: 'app-search',\n  templateUrl: './app-search.component.html',\n  styleUrls: ['./app-search.component.css']\n})\nexport class AppSearchComponent implements OnInit {\n  musicService: MusicLoaderService;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  ngOnInit() {}\n  fileChangeEvent(fileInput: any) {\n    this.recievedFiles(fileInput.target.files);\n  }\n\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n\n    \n    \n      \n      Choose a\n        file\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                          Choose a        file      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSettingsComponent.html":{"url":"components/AppSettingsComponent.html","title":"component - AppSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-settings/app-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                app-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-settings.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-settings/app-settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './app-settings.component.html',\n  styleUrls: ['./app-settings.component.css']\n})\nexport class AppSettingsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      Language\n\n      \n        Spanish\n        English\n      \n    \n    \n      Template\n      \n        Light\n        Dark\n      \n    \n  \n  \n\n    \n      Effects deck 1\n      \n        \n          Effect 1\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 2\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 3\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 4\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 5\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 6\n          \n            \n              Light\n              Dark\n            \n          \n\n        \n      \n    \n    \n      Effects deck 2\n      \n        \n          Effect 1\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 2\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 3\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 4\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 5\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 6\n          \n            \n              Light\n              Dark\n            \n          \n\n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Language              Spanish        English                    Template              Light        Dark                        Effects deck 1                        Effect 1                                    Light              Dark                                                Effect 2                                    Light              Dark                                                Effect 3                                    Light              Dark                                                Effect 4                                    Light              Dark                                                Effect 5                                    Light              Dark                                                Effect 6                                    Light              Dark                                                  Effects deck 2                        Effect 1                                    Light              Dark                                                Effect 2                                    Light              Dark                                                Effect 3                                    Light              Dark                                                Effect 4                                    Light              Dark                                                Effect 5                                    Light              Dark                                                Effect 6                                    Light              Dark                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppTabsComponent.html":{"url":"components/AppTabsComponent.html","title":"component - AppTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-tabs/app-tabs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                app-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                dragging\n                            \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                droped\n                            \n                            \n                                recievedFiles\n                            \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:dragleave\n                            \n                            \n                                window:dragover\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-tabs/app-tabs.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragleave\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:dragleave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:dragover(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            droped\n                            \n                            \n                        \n                    \n                \n                \n                    \ndroped(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActive(active: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'music'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragging\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dragging:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './app-tabs.component.html',\n  styleUrls: ['./app-tabs.component.css']\n})\nexport class AppTabsComponent {\n  active = 'music';\n  dragging = false;\n  musicService: MusicLoaderService;\n  setActive(active) {\n    this.active = active;\n  }\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  droped(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.recievedFiles(event.dataTransfer.files);\n    this.dragging = false;\n  }\n  @HostListener('window:dragover', ['$event'])\n  onDragOver(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.dragging = true;\n  }\n  @HostListener('window:dragleave')\n  stopdrag() {\n    this.dragging = false;\n  }\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n        Music\n      \n      \n        Settings\n      \n      \n        About\n      \n    \n    \n      \n      \n      \n    \n  \n  \n    Drop your song here\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Music                    Settings                    About                                            Drop your song here  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppVolumeComponent.html":{"url":"components/AppVolumeComponent.html","title":"component - AppVolumeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppVolumeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-volume/app-volume.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volume\n            \n\n            \n                styleUrls\n                app-volume.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-volume.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-volume/app-volume.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './app-volume.component.html',\n  styleUrls: ['./app-volume.component.css']\n})\nexport class AppVolumeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n      \n    \n    \n      \n\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppVolumeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicLoaderService.html":{"url":"injectables/MusicLoaderService.html","title":"injectable - MusicLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MusicLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/music-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deckLoader\n                            \n                            \n                                decksongs\n                            \n                            \n                                decksongs$\n                            \n                            \n                                music\n                            \n                            \n                                music$\n                            \n                            \n                                musicLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSong\n                            \n                            \n                                deleteSong\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSong\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSong(song: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSong\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.musicLoader.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicLoader:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable, of, throwError, forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicLoaderService {\n  musicLoader = new Subject();\n  music$ = this.musicLoader.asObservable();\n  music: File[] = [];\n  deckLoader = [new Subject(), new Subject()];\n  decksongs$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  decksongs: File[] = [null, null];\n\n  load(deck, song) {\n    this.decksongs[deck] = song;\n    this.deckLoader[deck].next(this.decksongs[deck]);\n  }\n  addSong(song: File) {\n    this.music.push(song);\n    this.musicLoader.next(this.music);\n  }\n  deleteSong(song) {\n    this.music.splice(this.music.indexOf(song), 1);\n    this.musicLoader.next(this.music);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerServiceService.html":{"url":"injectables/PlayerServiceService.html","title":"injectable - PlayerServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlayerServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/player-service.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deck\n                            \n                            \n                                deck$\n                            \n                            \n                                deckLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , wavesurfer: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player-service.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        wavesurfer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player-service.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player-service.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player-service.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerServiceService {\n\n  deckLoader = [new Subject(), new Subject()];\n  deck$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  deck: File[] = [null, null];\n\n  load(deck, wavesurfer) {\n    this.deck[deck] = wavesurfer;\n    this.deckLoader[deck].next(this.deck[deck]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouletteControllerComponent.html":{"url":"components/RouletteControllerComponent.html","title":"component - RouletteControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouletteControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/roulette-controller/roulette-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                roulette-controller\n            \n\n            \n                styleUrls\n                roulette-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./roulette-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSlider\n                            \n                            \n                                folded\n                            \n                            \n                                rotation\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                rotate\n                            \n                            \n                                unfold\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/roulette-controller/roulette-controller.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unfold\n                            \n                            \n                        \n                    \n                \n                \n                    \nunfold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSlider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSlider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folded:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RouletteControllerComponent),\n  multi: true\n};\n@Component({\n  selector: 'roulette-controller',\n  templateUrl: './roulette-controller.component.html',\n  styleUrls: ['./roulette-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class RouletteControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  folded = true;\n  value = 100;\n  configSlider: any;\n  rotation: number;\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.configSlider = {\n      id: this.config.id + 'slider',\n      min: 0,\n      max: 100,\n      default: 100,\n      thumb: 'roulette-slider-thumb',\n      track: 'roulette-slider-track',\n      vertical: true,\n      fill: true\n    };\n    this.rotate();\n  }\n\n  rotate() {\n    const percent = (this.value - this.configSlider.min) / (this.configSlider.max - this.configSlider.min);\n    this.rotation = 135 * 2 * (percent - 0.5);\n  }\n  unfold() {\n    this.folded = !this.folded;\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.value = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  @HostListener('document:click', ['$event'])\n  private onDocumentClick(event: MouseEvent) {\n    const closest = (el, selector) => {\n      const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\n      while (el) {\n        if (matchesSelector.call(el, selector)) {\n          break;\n        }\n        el = el.parentElement;\n      }\n      return el;\n    };\n    const ele = event.target as Element;\n    if (!closest(ele, '#' + this.config.id + '_container')) {\n      this.folded = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouletteControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderControllerComponent.html":{"url":"components/SliderControllerComponent.html","title":"component - SliderControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/slider-controller/slider-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                slider-controller\n            \n\n            \n                styleUrls\n                slider-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./slider-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fillsize\n                            \n                            \n                                shell\n                            \n                            \n                                slider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbWidth\n                                \n                                \n                                    thumbHeight\n                                \n                                \n                                    thumbTop\n                                \n                                \n                                    thumbLeft\n                                \n                                \n                                    fillWidth\n                                \n                                \n                                    fillHeight\n                                \n                                \n                                    fillTop\n                                \n                                \n                                    fillLeft\n                                \n                                \n                                    trackWidth\n                                \n                                \n                                    trackHeight\n                                \n                                \n                                    trackTop\n                                \n                                \n                                    trackLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:178\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:168\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:173\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillsize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillsize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shell\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shell:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Decorators : NativeElement\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thumbWidth\n                    \n                \n\n                \n                    \n                        getthumbWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbHeight\n                    \n                \n\n                \n                    \n                        getthumbHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:38\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbTop\n                    \n                \n\n                \n                    \n                        getthumbTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbLeft\n                    \n                \n\n                \n                    \n                        getthumbLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:61\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillWidth\n                    \n                \n\n                \n                    \n                        getfillWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillHeight\n                    \n                \n\n                \n                    \n                        getfillHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:87\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillTop\n                    \n                \n\n                \n                    \n                        getfillTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillLeft\n                    \n                \n\n                \n                    \n                        getfillLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:121\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackWidth\n                    \n                \n\n                \n                    \n                        gettrackWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackHeight\n                    \n                \n\n                \n                    \n                        gettrackHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:140\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackTop\n                    \n                \n\n                \n                    \n                        gettrackTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:148\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackLeft\n                    \n                \n\n                \n                    \n                        gettrackLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:155\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { NativeElement } from '../decorators/native-element.decorator';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SliderControllerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'slider-controller',\n  templateUrl: './slider-controller.component.html',\n  styleUrls: ['./slider-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class SliderControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  @NativeElement('sliderShell')\n  shell: HTMLElement;\n  slider: any;\n  fillsize = 16;\n\n  get thumbWidth(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    if (vertical) {\n      return smallval;\n    } else {\n      return smallval / 2.5;\n    }\n  }\n  get thumbHeight(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    if (!vertical) {\n      return smallval;\n    } else {\n      return smallval / 2.5;\n    }\n  }\n  get thumbTop(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n    return vertical ? loc : 0;\n  }\n  get thumbLeft(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n    return vertical ? 0 : loc;\n  }\n\n  get fillWidth(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n    return vertical ? this.fillsize : loc + thumbsize / 2;\n  }\n  get fillHeight(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n    const fillsize = 16;\n    const filloffset = smallval / 2 - fillsize / 2;\n    return Math.max(0, vertical ? bigval - filloffset - fillsize - loc : fillsize);\n  }\n  get fillTop(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n\n    /* Fill */\n\n    const fillsize = 16;\n    const filloffset = smallval / 2 - fillsize / 2;\n    return vertical ? loc + thumbsize : filloffset;\n  }\n  get fillLeft(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    const filloffset = smallval / 2 - this.fillsize / 2;\n    return vertical ? filloffset : 0;\n  }\n\n  get trackWidth(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n    return vertical ? this.fillsize : loc + thumbsize / 2;\n  }\n  get trackHeight(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    return bigval - thumbsize * 1.25;\n  }\n  get trackTop(): any {\n    const vertical = !!this.config.vertical;\n\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    return thumbsize / 2;\n  }\n  get trackLeft(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    const filloffset = smallval / 2 - this.fillsize / 2;\n    return vertical ? filloffset : 0;\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  ngOnInit() {}\n\n  setValue() {\n    this.onChangeCallback(this.slider);\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.slider = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\n\t\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            wavesurfer.js : ^2.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NativeElement   (src/.../native-element.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/decorators/native-element.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NativeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \nNativeElement(selector: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            To get the native element instead of ElementRef.nativeElement\nCaveats: it won’t work with AOT\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Selector. Example: \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTFG\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun npm test to execute the unit tests via jest.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nDocumentation\nTo access the compodoc generated documentation go to https://clm2609.gitlab.io/tfg\nWebApp\nTo see the latest stage state of the app go to http://virtualdj-stage.surge.sh/\nTo see the latest production state of the app go to http://virtualdj.surge.sh/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
