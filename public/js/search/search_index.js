var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppAboutComponent.html",[0,0.127,1,0.405]],["body/components/AppAboutComponent.html",[0,0.233,1,0.741,2,0.357,3,0.284,4,0.796,5,0.284,6,1.284,7,3.635,8,3.562,9,1.448,10,1.404,11,0.796,12,1.279,13,0.973,14,0.999,15,4.472,16,0.999,17,4.472,18,0.954,19,0.602,20,3.562,21,0.357,22,0.046,23,0.284,24,0.284,25,0.357,26,1.462,27,4.472,28,4.472,29,5.39,30,5.39,31,4.472,32,5.39,33,5.39,34,5.39,35,5.39,36,4.472,37,4.472,38,1.145,39,0.796,40,0.448,41,0.796,42,0.515,43,0.796,44,0.515,45,0.796,46,0.515,47,0.433,48,0.796,49,0.515,50,0.796,51,0.515,52,0.602,53,0.796,54,0.515,55,0.796,56,0.515,57,0.796,58,0.515,59,0.796,60,0.515,61,0.796,62,0.515,63,0.796,64,0.796,65,0.515,66,0.796,67,0.796,68,0.796,69,0.796,70,0.036,71,0.036]],["title/components/AppComponent.html",[0,0.127,42,0.405]],["body/components/AppComponent.html",[0,0.24,1,0.563,2,0.39,3,0.311,4,0.87,5,0.311,11,0.87,12,1.291,13,0.971,14,1.055,16,1.055,21,0.39,22,0.047,23,0.311,24,0.311,25,0.39,38,1.181,39,0.87,40,0.473,41,0.87,42,0.765,43,0.87,44,0.563,45,0.87,46,0.563,47,0.474,48,0.87,49,0.563,50,0.87,51,0.563,52,0.658,53,0.87,54,0.563,55,0.87,56,0.563,57,0.87,58,0.563,59,0.87,60,0.563,61,0.87,62,0.563,63,0.87,64,0.87,65,0.563,66,0.87,67,0.87,68,0.87,69,0.87,70,0.038,71,0.038,72,3.894,73,2.823,74,4.725,75,4.725]],["title/components/AppDeckComponent.html",[0,0.127,44,0.405]],["body/components/AppDeckComponent.html",[0,0.203,1,0.365,2,0.253,3,0.201,4,0.564,5,0.283,6,1.547,9,1.151,10,1.182,11,0.564,12,1.221,13,0.934,14,0.794,16,0.794,18,0.493,19,0.902,21,0.471,22,0.048,23,0.201,24,0.201,25,0.253,26,1.036,38,0.997,39,0.564,40,0.447,41,0.564,42,0.365,43,0.564,44,0.646,45,0.564,46,0.365,47,0.623,48,0.564,49,0.365,50,0.564,51,0.365,52,0.427,53,0.564,54,0.365,55,0.564,56,0.365,57,0.564,58,0.365,59,0.564,60,0.365,61,0.564,62,0.365,63,0.564,64,0.564,65,0.365,66,0.564,67,0.564,68,0.564,69,0.564,70,0.029,71,0.029,76,4.379,77,2.524,78,4.114,79,3.344,80,1.459,81,3.554,82,3.554,83,0.427,84,0.794,85,2.918,86,2.546,87,4.164,88,2.341,89,0.794,90,2.889,91,3.63,92,4.466,93,3.08,94,4.114,95,2.124,96,2.322,97,3.554,98,0.694,99,0.953,100,0.694,101,1.833,102,2.524,103,3.554,104,2.524,105,0.997,106,1.091,107,2.524,108,2.524,109,2.524,110,1.021,111,0.902,112,2.524,113,2.524,114,1.182,115,2.524,116,2.524,117,1.508,118,1.508,119,1.741,120,2.889,121,1.323,122,2.052,123,2.052,124,1.459,125,2.052,126,1.508,127,2.124,128,1.508,129,2.052,130,2.524,131,3.63,132,2.052,133,2.524,134,1.296,135,2.524,136,1.508,137,2.524,138,1.168,139,2.524,140,4.114,141,2.524,142,4.114,143,2.524,144,2.052,145,2.524,146,2.524,147,2.524,148,2.524,149,2.524,150,2.524,151,2.524,152,2.524,153,2.524,154,2.524,155,2.524,156,3.554,157,2.052,158,2.524,159,2.524,160,3.344,161,2.052,162,2.524,163,2.052,164,2.052,165,2.524,166,2.524,167,2.524,168,2.889,169,3.554,170,3.554,171,3.554,172,3.554,173,3.554,174,5.387,175,1.833,176,1.833,177,3.08,178,3.63,179,2.451,180,1.863]],["title/components/AppEffectsCreatorComponent.html",[0,0.127,46,0.405]],["body/components/AppEffectsCreatorComponent.html",[0,0.181,1,0.288,2,0.199,3,0.159,4,0.444,5,0.159,6,1.567,9,0.968,10,1.031,11,0.444,12,1.172,13,0.901,14,0.668,16,0.668,18,0.388,19,0.917,21,0.359,22,0.048,23,0.159,24,0.159,25,0.199,26,0.817,38,0.891,39,0.444,40,0.515,41,0.444,42,0.288,43,0.444,44,0.288,45,0.444,46,0.577,47,0.707,48,0.444,49,0.288,50,0.444,51,0.288,52,0.336,53,0.444,54,0.288,55,0.444,56,0.288,57,0.444,58,0.288,59,0.444,60,0.288,61,0.444,62,0.288,63,0.444,64,0.444,65,0.288,66,0.444,67,0.668,68,0.444,69,0.444,70,0.024,71,0.024,83,0.336,84,0.668,89,0.668,98,0.701,99,0.99,100,0.701,101,1.913,105,1.161,106,1.004,110,1.229,111,1.333,114,1.031,124,0.817,126,1.189,127,2.385,134,1.309,136,2.145,138,0.921,175,1.227,179,2.476,180,2.355,181,3.762,182,1.617,183,2.43,184,2.989,185,2.989,186,2.685,187,3.991,188,3.991,189,3.991,190,3.653,191,3.991,192,3.245,193,3.991,194,3.991,195,3.991,196,3.245,197,2.989,198,3.245,199,2.753,200,3.991,201,2.989,202,1.189,203,1.848,204,3.59,205,3.991,206,2.989,207,1.786,208,1.989,209,1.989,210,2.989,211,1.989,212,2.989,213,1.989,214,1.989,215,1.989,216,1.989,217,2.989,218,1.989,219,3.991,220,1.989,221,2.43,222,1.989,223,1.989,224,1.989,225,1.989,226,3.383,227,1.989,228,1.989,229,1.989,230,1.989,231,1.989,232,1.372,233,2.989,234,1.989,235,2.989,236,0.921,237,1.189,238,1.989,239,1.989,240,2.918,241,2.989,242,1.989,243,1.989,244,1.989,245,1.989,246,3.59,247,2.989,248,1.989,249,1.989,250,1.989,251,1.989,252,1.989,253,1.989,254,2.989,255,1.989,256,1.989,257,1.989,258,1.617,259,1.98,260,1.989,261,2.476,262,1.786,263,3.59,264,1.989,265,1.989,266,2.989,267,1.989,268,1.989,269,1.989,270,1.989,271,4.278,272,2.43,273,2.43,274,2.43,275,2.43,276,1.989,277,1.989,278,1.989,279,1.989,280,2.061,281,1.617,282,1.989,283,1.617,284,1.989,285,1.617,286,1.989,287,1.989,288,1.989,289,1.989,290,3.59,291,1.989,292,2.989,293,2.061,294,1.617,295,4.125,296,1.989,297,1.989,298,1.989,299,2.989,300,2.989,301,1.989,302,2.989,303,3.991,304,1.989,305,1.989,306,3.991,307,2.989,308,2.989,309,2.989,310,2.989,311,2.989,312,3.991,313,2.989,314,3.991,315,2.989,316,2.989]],["title/components/AppLayoutComponent.html",[0,0.127,49,0.405]],["body/components/AppLayoutComponent.html",[0,0.239,1,0.551,2,0.381,3,0.304,4,0.851,5,0.304,6,1.339,10,1.095,11,0.851,12,1.288,13,0.98,14,1.042,16,1.042,18,0.983,19,0.644,21,0.381,22,0.047,23,0.304,24,0.304,25,0.381,38,1.173,39,0.851,40,0.467,41,0.851,42,0.551,43,0.851,44,0.551,45,0.851,46,0.551,47,0.464,48,0.851,49,0.759,50,0.851,51,0.551,52,0.644,53,0.851,54,0.551,55,0.851,56,0.551,57,0.851,58,0.551,59,0.851,60,0.551,61,0.851,62,0.551,63,0.851,64,0.851,65,0.551,66,0.851,67,0.851,68,0.851,69,0.851,70,0.038,71,0.038,317,3.791,318,3.811,319,4.663,320,4.663,321,4.663,322,3.811]],["title/modules/AppModule.html",[323,1.151,324,1.675]],["body/modules/AppModule.html",[1,0.754,2,0.314,3,0.25,5,0.25,7,2.553,13,0.531,21,0.574,22,0.048,23,0.25,24,0.329,25,0.314,42,0.807,44,0.754,46,0.754,47,0.502,49,0.754,51,0.754,52,0.697,54,0.754,56,0.754,58,0.754,60,0.754,62,0.754,65,0.754,70,0.033,71,0.033,76,2.553,181,2.166,199,2.166,236,1.909,317,2.553,323,1.693,324,3.486,325,1.877,326,2.553,327,3.743,328,3.743,329,2.465,330,2.553,331,2.553,332,2.553,333,2.553,334,2.732,335,3.352,336,2.166,337,3.14,338,4.124,339,2.553,340,2.166,341,3.352,342,3.14,343,3.14,344,5.453,345,3.14,346,3.14,347,2.553,348,3.14,349,3.14,350,2.553,351,4.124,352,3.352,353,3.14,354,2.553,355,2.553,356,3.14,357,2.553,358,3.14,359,2.553,360,3.14,361,2.553,362,3.14,363,3.14,364,3.14,365,4.124]],["title/components/AppMusicListComponent.html",[0,0.127,51,0.405]],["body/components/AppMusicListComponent.html",[0,0.211,1,0.4,2,0.277,3,0.22,4,0.617,5,0.418,6,1.526,9,1.226,10,0.794,11,0.617,12,1.238,13,0.946,14,0.846,16,0.846,18,0.539,19,0.885,21,0.432,22,0.048,23,0.22,24,0.22,25,0.277,38,1.037,39,0.617,40,0.487,41,0.617,42,0.4,43,0.617,44,0.4,45,0.617,46,0.4,47,0.336,48,0.617,49,0.4,50,0.617,51,0.671,52,0.977,53,0.617,54,0.4,55,0.617,56,0.4,57,0.617,58,0.4,59,0.617,60,0.4,61,0.617,62,0.4,63,0.617,64,0.617,65,0.4,66,0.617,67,0.617,68,0.617,69,0.617,70,0.03,71,0.037,79,3.51,80,1.135,83,0.467,84,0.846,85,3.002,88,2.785,89,0.846,95,2.262,96,2.381,98,0.843,99,0.949,100,0.843,105,1.087,106,1.037,114,1.087,117,1.652,118,1.652,120,3.077,121,1.449,124,1.135,125,2.247,128,1.652,134,1.38,157,2.247,163,2.247,164,2.247,168,3.077,226,2.978,272,3.077,273,3.077,274,3.077,275,3.077,359,4.319,366,2.764,367,3.786,368,3.786,369,3.786,370,4.644,371,5.024,372,4.644,373,3.786,374,3.786,375,4.644,376,3.786,377,3.786,378,2.764,379,3.786,380,2.764,381,2.764,382,2.764,383,2.764,384,2.764,385,4.644,386,2.764,387,3.786,388,2.764,389,2.764,390,2.764,391,2.764,392,3.786,393,2.764,394,3.786,395,2.764,396,2.764,397,2.764,398,2.764,399,2.764,400,3.786,401,3.077,402,2.611,403,3.077,404,3.077,405,3.077,406,3.786]],["title/modules/AppRoutingModule.html",[323,1.151,334,1.469]],["body/modules/AppRoutingModule.html",[2,0.429,3,0.342,5,0.342,21,0.546,22,0.047,23,0.342,24,0.399,25,0.429,70,0.04,71,0.04,134,1.563,236,1.984,323,1.76,334,2.622,341,4.067,352,4.067,407,4.287,408,4.287,409,5.298,410,5.003,411,3.485,412,4.287]],["title/components/AppSearchComponent.html",[0,0.127,54,0.405]],["body/components/AppSearchComponent.html",[0,0.22,1,0.443,2,0.307,3,0.244,4,0.685,5,0.402,6,1.447,9,1.314,10,1.307,11,0.685,12,1.255,13,0.958,14,0.906,16,0.906,18,0.598,19,0.819,21,0.406,22,0.047,23,0.244,24,0.244,25,0.307,26,1.258,38,1.082,39,0.685,40,0.504,41,0.685,42,0.443,43,0.685,44,0.443,45,0.685,46,0.443,47,0.373,48,0.685,49,0.443,50,0.685,51,0.443,52,0.518,53,0.685,54,0.7,55,0.685,56,0.443,57,0.685,58,0.443,59,0.685,60,0.443,61,0.685,62,0.443,63,0.685,64,0.685,65,0.443,66,0.685,67,0.685,68,0.685,69,0.685,70,0.047,71,0.033,83,0.518,84,0.906,85,3.094,89,0.906,95,2.425,96,2.445,98,0.888,99,0.945,100,0.888,105,0.906,106,0.906,114,0.88,117,1.831,118,1.831,128,1.831,175,2.307,176,2.378,355,4.096,403,3.299,413,3.065,414,4.058,415,4.058,416,4.058,417,3.299,418,4.058,419,4.058,420,3.065,421,3.065,422,3.299,423,3.699,424,3.065,425,3.065,426,4.058]],["title/components/AppSettingsComponent.html",[0,0.127,56,0.405]],["body/components/AppSettingsComponent.html",[0,0.216,1,0.422,2,0.292,3,0.233,4,0.992,5,0.233,6,1.523,9,1.272,10,1.275,11,0.652,12,1.247,13,0.952,14,0.877,16,0.877,18,0.569,19,0.882,21,0.444,22,0.048,23,0.233,24,0.233,25,0.292,26,1.198,38,1.061,39,0.652,40,0.475,41,0.652,42,0.422,43,0.652,44,0.422,45,0.652,46,0.422,47,0.654,48,0.652,49,0.422,50,0.652,51,0.422,52,0.493,53,0.652,54,0.422,55,0.652,56,0.687,57,0.652,58,0.422,59,0.652,60,0.422,61,0.652,62,0.422,63,0.652,64,0.652,65,0.422,66,0.652,67,0.652,68,0.652,69,0.652,70,0.032,71,0.032,80,1.612,83,0.493,84,0.877,86,2.198,89,0.877,98,0.766,99,0.927,100,0.766,101,1.612,105,0.652,106,0.652,110,1.275,111,1.127,119,2.012,124,1.198,136,1.744,180,2.058,190,4.15,192,3.861,202,1.744,203,2.198,207,2.347,232,2.012,237,1.744,240,2.372,258,3.609,259,2.198,361,4.312,427,2.918,428,3.193,429,3.927,430,3.927,431,4.749,432,3.861,433,3.193,434,4.44,435,2.918,436,3.927,437,5.105,438,2.918,439,2.918,440,2.918,441,2.918,442,2.918,443,2.918,444,2.918,445,2.918,446,4.44,447,4.44,448,4.44,449,4.44,450,4.44,451,2.918,452,2.918,453,3.927,454,2.918,455,2.918,456,2.918,457,2.918,458,2.918,459,2.918,460,3.927,461,3.927,462,3.927,463,3.927,464,3.927,465,3.927,466,3.927]],["title/components/AppTabsComponent.html",[0,0.127,58,0.405]],["body/components/AppTabsComponent.html",[0,0.215,1,0.419,2,0.29,3,0.231,4,0.647,5,0.353,6,1.584,11,0.647,12,1.246,13,0.951,14,0.873,16,0.873,18,0.566,19,0.925,21,0.391,22,0.047,23,0.231,24,0.231,25,0.29,38,1.058,39,0.647,40,0.51,41,0.647,42,0.419,43,0.647,44,0.419,45,0.647,46,0.419,47,0.538,48,0.647,49,0.419,50,0.647,51,0.419,52,0.836,53,0.647,54,0.419,55,0.647,56,0.419,57,0.647,58,0.685,59,0.647,60,0.419,61,0.647,62,0.419,63,0.647,64,0.647,65,0.419,66,0.647,67,0.647,68,0.647,69,0.647,70,0.031,71,0.031,83,0.49,84,0.873,85,3.045,88,2.049,89,0.873,95,2.337,96,2.411,98,0.924,99,0.924,100,0.924,105,1.058,106,1.058,110,1.271,111,1.123,114,0.833,117,1.732,118,1.732,126,3.045,127,3.045,128,1.732,138,1.342,160,2.356,183,3.179,226,2.697,357,4.482,404,3.85,405,3.179,417,3.179,422,3.179,423,3.597,428,3.179,467,2.899,468,3.91,469,3.91,470,3.91,471,5.296,472,3.91,473,3.91,474,3.597,475,4.425,476,3.91,477,2.899,478,2.899,479,2.356,480,3.052,481,2.899,482,2.899,483,3.91,484,2.899,485,2.899,486,2.899,487,3.91,488,2.899,489,2.899,490,2.899,491,2.899,492,2.899,493,3.91,494,3.91,495,3.91,496,2.899,497,4.425,498,2.899,499,2.899,500,2.899,501,2.899,502,3.91]],["title/components/AppVolumeComponent.html",[0,0.127,60,0.405]],["body/components/AppVolumeComponent.html",[0,0.213,1,0.407,2,0.282,3,0.225,4,0.629,5,0.225,6,1.587,9,1.242,10,1.252,11,0.629,12,1.241,13,0.948,14,0.856,16,0.856,18,0.55,19,0.927,21,0.436,22,0.047,23,0.225,24,0.225,25,0.282,38,1.045,39,0.629,40,0.469,41,0.629,42,0.407,43,0.629,44,0.407,45,0.629,46,0.407,47,0.343,48,0.629,49,0.407,50,0.629,51,0.407,52,0.476,53,0.629,54,0.407,55,0.629,56,0.407,57,0.629,58,0.407,59,0.629,60,0.677,61,0.629,62,0.407,63,0.629,64,0.629,65,0.407,66,0.629,67,0.629,68,0.629,69,0.629,70,0.031,71,0.031,80,1.79,83,0.476,84,0.856,86,2.393,89,0.856,98,0.748,99,1.053,100,0.748,101,2.319,105,0.856,106,0.856,110,1.532,111,1.354,114,1.611,119,1.942,124,1.156,175,1.574,202,1.683,203,2.167,207,2.291,232,1.942,237,1.683,347,4.491,503,2.816,504,2.644,505,3.835,506,3.835,507,3.805,508,3.805,509,3.805,510,3.805,511,3.805,512,3.805,513,4.681,514,4.681,515,4.681,516,3.835,517,4.36,518,2.816,519,3.835,520,2.816,521,2.816,522,2.816,523,2.816,524,2.816,525,2.816,526,2.816,527,2.816,528,3.484,529,2.816,530,2.816,531,2.816,532,3.835,533,4.36]],["title/injectables/EffectsService.html",[203,1.298,534,1.151]],["body/injectables/EffectsService.html",[2,0.089,3,0.071,5,0.071,18,0.402,19,0.645,21,0.155,22,0.048,23,0.071,24,0.071,25,0.089,40,0.58,47,0.65,70,0.012,71,0.012,73,0.532,80,0.365,83,0.15,84,0.346,89,0.346,98,0.545,99,1.003,100,0.715,105,0.987,106,0.346,110,1.631,111,1.383,114,1.635,126,2.427,127,2.641,132,1.261,134,1.337,136,0.927,138,1.618,161,1.261,175,2.352,176,1.259,177,1.7,178,3.701,179,2.275,180,0.813,186,3.118,196,1.261,198,1.261,203,0.718,221,2.494,293,3.14,504,0.614,507,1.675,508,2.272,509,2.681,510,2.681,511,2.272,512,2.272,528,2.116,534,0.846,535,0.89,536,2.465,537,1.551,538,1.551,539,1.551,540,2.465,541,2.465,542,0.89,543,1.551,544,0.89,545,1.551,546,0.89,547,0.89,548,1.551,549,0.89,550,1.551,551,2.272,552,0.89,553,0.89,554,0.89,555,1.551,556,0.89,557,3.386,558,4.846,559,1.551,560,4.419,561,3.068,562,3.495,563,3.068,564,3.814,565,3.068,566,3.814,567,4.258,568,3.814,569,3.814,570,2.465,571,2.465,572,2.465,573,3.814,574,4.258,575,3.068,576,3.814,577,3.814,578,2.465,579,2.004,580,2.465,581,2.465,582,3.814,583,3.495,584,2.465,585,3.495,586,1.551,587,1.551,588,1.551,589,1.551,590,2.465,591,3.495,592,4.061,593,3.495,594,3.068,595,2.465,596,3.068,597,2.465,598,2.465,599,3.068,600,2.465,601,4.553,602,0.89,603,3.068,604,4.919,605,4.576,606,4.576,607,1.551,608,4.258,609,1.551,610,1.551,611,3.068,612,1.551,613,1.551,614,1.551,615,1.551,616,3.068,617,2.465,618,2.465,619,3.814,620,1.551,621,3.068,622,2.465,623,2.465,624,3.068,625,1.551,626,2.841,627,1.551,628,1.551,629,1.551,630,1.551,631,3.068,632,1.261,633,1.261,634,1.551,635,4.061,636,1.551,637,1.551,638,1.551,639,2.465,640,1.551,641,1.551,642,1.551,643,1.551,644,3.495,645,1.551,646,1.551,647,1.551,648,1.551,649,3.068,650,1.551,651,1.551,652,1.551,653,2.465,654,2.465,655,4.553,656,1.551,657,1.551,658,3.068,659,1.551,660,3.068,661,1.551,662,1.551,663,1.551,664,1.551,665,1.551,666,1.551,667,1.551,668,1.551,669,1.551,670,2.465,671,2.465,672,2.465,673,2.465,674,1.551,675,1.551,676,1.551,677,1.551,678,1.551,679,1.551,680,1.551,681,1.551,682,1.551,683,1.551,684,1.551,685,1.551,686,0.89,687,1.261,688,0.614,689,0.614,690,0.89,691,0.89,692,1.551,693,0.89,694,0.89,695,0.89,696,0.89,697,0.89,698,2.06,699,2.06,700,0.89,701,0.89,702,0.532,703,0.89,704,1.551,705,0.89,706,0.89,707,0.89,708,0.89,709,4.666,710,1.551,711,2.465,712,1.551,713,1.551,714,1.551,715,3.495,716,1.551,717,1.551,718,1.551,719,1.551,720,2.465,721,1.551,722,1.551,723,0.89,724,0.89,725,1.551,726,1.551,727,1.551,728,1.551,729,1.551,730,1.551,731,1.551,732,1.551,733,0.89,734,0.89,735,0.89,736,0.89]],["title/injectables/MusicLoaderService.html",[96,1.298,534,1.151]],["body/injectables/MusicLoaderService.html",[2,0.312,3,0.249,5,0.438,18,0.609,19,0.936,21,0.459,22,0.048,23,0.249,24,0.249,25,0.312,40,0.488,52,0.91,70,0.033,71,0.033,73,1.863,80,1.28,83,0.527,84,0.917,86,2.595,88,2.727,89,0.917,96,1.9,98,0.952,99,1.035,100,0.952,105,1.025,106,1.025,110,1.494,111,1.321,121,1.634,129,2.535,134,1.137,144,2.535,175,1.28,259,2.257,402,2.831,534,1.884,689,2.15,702,3.17,737,5.576,738,3.118,739,3.964,740,5.383,741,4.877,742,4.105,743,4.105,744,4.105,745,4.105,746,4.105,747,3.118,748,4.105,749,3.118,750,3.337,751,3.118,752,4.312,753,3.118,754,3.118,755,3.337,756,3.337,757,3.118,758,3.118,759,4.105,760,3.118,761,3.118,762,3.118,763,3.118,764,3.118,765,3.118,766,3.118,767,3.118,768,3.118,769,3.118,770,3.118,771,3.118,772,4.105,773,3.118,774,3.118,775,4.105,776,3.118]],["title/injectables/PlayerService.html",[86,1.298,534,1.151]],["body/injectables/PlayerService.html",[2,0.263,3,0.21,5,0.21,18,0.513,19,0.961,21,0.455,22,0.048,23,0.21,24,0.21,25,0.263,40,0.533,47,0.654,70,0.029,71,0.029,73,1.572,80,2.282,83,0.445,84,0.817,86,1.694,88,1.918,89,0.817,90,3.42,91,2.974,98,1.039,99,1.059,100,1.039,101,1.867,105,1.201,106,1.174,110,1.529,111,1.352,114,0.756,121,1.379,122,2.974,176,1.502,180,1.918,202,1.572,203,2.105,207,2.187,237,1.572,259,2.673,402,2.523,432,3.697,480,2.523,504,2.523,534,1.727,551,3.885,687,2.139,688,1.814,689,1.814,702,3.093,739,3.697,750,2.139,752,4.273,755,2.974,756,2.974,777,2.631,778,4.548,779,4.548,780,4.548,781,4.548,782,3.659,783,4.207,784,3.659,785,3.659,786,3.659,787,3.659,788,3.659,789,3.659,790,2.631,791,2.631,792,2.631,793,2.631,794,2.631,795,2.631,796,2.631,797,2.631,798,3.659,799,2.631,800,2.631,801,2.631,802,2.631,803,2.631,804,2.631,805,2.631,806,2.631,807,2.631,808,2.631,809,2.631,810,2.631,811,2.631,812,2.631,813,2.631,814,2.631,815,2.631,816,3.659,817,3.659,818,2.631,819,2.631,820,2.631,821,2.631,822,2.631,823,2.631,824,2.631,825,2.631,826,2.631,827,2.631]],["title/components/RouletteControllerComponent.html",[0,0.127,62,0.405]],["body/components/RouletteControllerComponent.html",[0,0.203,1,0.366,2,0.253,3,0.202,4,0.565,5,0.202,9,1.154,10,1.184,11,0.565,12,1.235,13,0.892,14,0.795,16,0.795,18,0.804,19,0.911,21,0.357,22,0.048,23,0.202,24,0.284,25,0.253,26,1.039,38,0.999,39,0.565,40,0.472,41,0.565,42,0.366,43,0.565,44,0.366,45,0.565,46,0.366,47,0.308,48,0.565,49,0.366,50,0.565,51,0.366,52,0.428,53,0.565,54,0.366,55,0.565,56,0.366,57,0.565,58,0.366,59,0.565,60,0.366,61,0.565,62,0.681,63,1.164,64,0.565,65,0.366,66,0.999,67,0.92,68,0.565,69,0.565,70,0.029,71,0.029,83,0.428,84,0.795,87,4.167,89,0.795,93,3.084,98,0.804,99,0.98,100,0.804,101,1.934,105,1.092,106,1.122,110,1.184,111,1.341,114,1.184,124,1.691,131,2.895,134,1.782,138,2.263,176,1.039,186,2.462,236,1.172,259,1.172,261,1.746,262,1.513,329,2.462,354,4.416,474,3.35,479,2.058,480,2.456,528,1.746,557,2.058,605,2.058,606,2.058,626,2.058,828,5.432,829,2.058,830,3.35,831,3.35,832,2.895,833,2.895,834,4.472,835,4.472,836,2.895,837,2.895,838,4.472,839,2.895,840,3.562,841,2.058,842,2.531,843,2.531,844,3.562,845,2.531,846,2.895,847,2.531,848,3.635,849,2.895,850,2.531,851,2.531,852,2.531,853,2.895,854,2.531,855,2.058,856,2.058,857,2.058,858,2.531,859,2.895,860,2.895,861,2.895,862,3.35,863,2.058,864,2.058,865,2.058,866,2.058,867,2.058,868,2.531,869,3.562,870,2.058,871,2.058,872,4.121,873,3.562,874,3.562,875,2.058,876,2.058,877,3.562,878,3.562,879,2.531,880,2.531,881,2.531,882,4.121,883,2.895,884,2.058,885,2.531,886,2.531,887,2.531,888,4.712,889,2.531,890,2.531,891,2.531,892,2.531,893,2.531,894,2.531,895,2.531,896,2.531,897,2.531,898,2.531,899,2.531,900,2.531]],["title/components/SliderControllerComponent.html",[0,0.127,65,0.405]],["body/components/SliderControllerComponent.html",[0,0.159,1,0.224,2,0.155,3,0.123,4,0.346,5,0.123,9,0.797,10,0.88,11,0.346,12,1.113,13,0.788,14,0.55,16,0.55,19,0.898,21,0.246,22,0.048,23,0.123,24,0.196,25,0.155,26,0.636,38,0.78,39,0.346,40,0.382,41,0.346,42,0.224,43,0.346,44,0.224,45,0.346,46,0.224,47,0.188,48,0.346,49,0.224,50,0.346,51,0.224,52,0.262,53,0.346,54,0.224,55,0.346,56,0.224,57,0.346,58,0.224,59,0.346,60,0.224,61,0.346,62,0.224,63,0.346,64,0.346,65,0.551,66,1.063,67,0.685,68,0.346,69,0.346,70,0.02,71,0.02,83,0.262,84,0.55,89,0.55,93,2.409,98,0.598,99,0.888,100,0.598,101,1.434,105,1.22,106,0.907,110,0.707,111,1.031,114,1.222,124,1.011,134,2.11,138,0.717,175,1.666,176,1.954,186,1.832,236,0.717,259,2.242,261,1.068,262,0.925,329,1.832,350,4.339,579,2.839,829,1.259,830,2.492,831,2.492,832,2.002,833,2.002,836,2.002,837,2.002,839,2.002,841,1.259,846,2.002,848,2.839,849,2.002,853,2.002,855,1.259,856,1.259,857,1.259,859,2.002,860,2.002,861,2.002,862,2.492,863,1.259,864,1.259,865,1.259,866,1.259,867,1.259,870,3.938,871,3.299,875,4.611,876,1.259,883,2.002,884,1.259,901,5.338,902,4.664,903,5.039,904,3.493,905,3.493,906,3.493,907,2.462,908,3.065,909,3.065,910,3.065,911,3.065,912,3.065,913,3.065,914,3.065,915,3.065,916,3.065,917,3.065,918,3.065,919,3.065,920,1.549,921,1.549,922,1.549,923,1.549,924,3.065,925,3.493,926,1.549,927,2.462,928,1.549,929,1.549,930,1.549,931,1.549,932,1.549,933,1.549,934,1.549,935,1.549,936,1.549,937,1.549,938,1.549,939,1.549,940,1.549,941,1.549,942,1.549,943,1.549,944,1.549,945,1.549,946,1.549,947,1.549,948,1.549,949,1.549,950,1.549,951,1.549,952,1.549,953,1.549,954,1.549,955,4.844,956,5.338,957,4.982,958,4.917,959,4.917,960,2.462,961,4.844,962,4.256,963,5.178,964,5.039,965,5.216,966,4.417,967,4.417,968,5.178,969,4.844,970,3.493,971,4.417,972,1.549,973,1.549,974,1.549,975,1.549,976,1.549,977,1.549]],["title/dependencies.html",[325,2.014,978,2.343]],["body/dependencies.html",[22,0.047,23,0.338,70,0.04,71,0.04,121,2.218,123,3.441,236,1.959,285,3.441,325,2.529,339,4.037,340,3.425,411,3.441,688,2.919,979,4.233,980,5.739,981,4.233,982,4.233,983,4.233,984,4.233,985,4.233,986,4.233,987,4.233,988,4.233,989,4.233,990,4.233,991,4.233]],["title/miscellaneous/functions.html",[280,2.324,992,1.904]],["body/miscellaneous/functions.html",[6,1.233,22,0.046,40,0.501,47,0.664,70,0.04,71,0.04,83,0.726,98,0.977,99,0.838,100,0.977,111,1.271,181,2.961,182,4.309,262,2.566,280,2.961,281,3.49,283,4.071,293,2.961,294,3.49,295,4.071,992,3.49,993,5.008,994,5.008]],["title/index.html",[83,0.396,401,1.904,995,2.343]],["body/index.html",[0,0.229,3,0.305,5,0.305,13,0.853,22,0.038,40,0.383,70,0.038,71,0.038,336,2.636,433,3.107,632,4.101,633,3.107,702,2.284,996,3.822,997,4.671,998,5.39,999,5.045,1000,5.045,1001,3.822,1002,3.822,1003,3.822,1004,4.671,1005,5.553,1006,5.484,1007,3.822,1008,3.822,1009,3.822,1010,3.822,1011,3.822,1012,3.822,1013,3.822,1014,3.822,1015,5.39,1016,3.822,1017,3.822,1018,3.822,1019,3.822,1020,3.822,1021,3.822,1022,4.671,1023,4.671,1024,5.39,1025,3.822,1026,4.671,1027,4.671,1028,3.822,1029,5.255,1030,3.822,1031,3.822,1032,3.822,1033,5.045,1034,3.822,1035,5.255,1036,3.822,1037,3.822,1038,4.671,1039,3.822,1040,3.822,1041,3.822,1042,3.822,1043,4.671,1044,4.671,1045,3.822,1046,4.671,1047,3.822,1048,3.822,1049,3.822]],["title/modules.html",[323,1.569]],["body/modules.html",[22,0.041,70,0.041,71,0.041,323,1.845,324,2.687,334,2.356,340,3.101,1050,4.496,1051,4.496,1052,5.142,1053,4.496,1054,4.496]],["title/overview.html",[1055,3.107]],["body/overview.html",[0,0.175,1,0.733,22,0.047,24,0.308,42,0.804,44,0.733,46,0.733,49,0.733,51,0.733,54,0.733,56,0.733,58,0.733,60,0.733,62,0.733,65,0.733,70,0.038,71,0.038,176,1.585,177,2.662,199,2.662,323,1.929,324,3.522,325,2.307,326,3.138,327,3.138,328,3.138,329,2.307,330,3.138,331,3.138,332,3.138,333,3.138,334,2.656,335,3.82,336,2.662,534,1.585,1055,3.138,1056,3.86]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":114,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["0.0001",{"_index":610,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.001",{"_index":649,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.0045",{"_index":609,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.01",{"_index":221,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["0.065",{"_index":563,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.1",{"_index":581,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.2",{"_index":593,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.25",{"_index":619,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.3",{"_index":591,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.45",{"_index":614,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.5",{"_index":626,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["0.7",{"_index":628,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.8.26",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":175,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSearchComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/SliderControllerComponent.html":{}}}],["1.0.2",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":584,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1.25",{"_index":973,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["1.5",{"_index":607,"title":{},"body":{"injectables/EffectsService.html":{}}}],["10",{"_index":161,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["100",{"_index":528,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["1000",{"_index":639,"title":{},"body":{"injectables/EffectsService.html":{}}}],["10000",{"_index":616,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1024",{"_index":671,"title":{},"body":{"injectables/EffectsService.html":{}}}],["12",{"_index":1056,"title":{},"body":{"overview.html":{}}}],["125",{"_index":713,"title":{},"body":{"injectables/EffectsService.html":{}}}],["135",{"_index":880,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["150",{"_index":617,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1500",{"_index":600,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16",{"_index":579,"title":{},"body":{"injectables/EffectsService.html":{},"components/SliderControllerComponent.html":{}}}],["16000",{"_index":719,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16384",{"_index":569,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16x",{"_index":172,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["180",{"_index":596,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2",{"_index":176,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["2.1.1",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":960,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["2.5.4",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":621,"title":{},"body":{"injectables/EffectsService.html":{}}}],["200",{"_index":681,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2000",{"_index":623,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2048",{"_index":672,"title":{},"body":{"injectables/EffectsService.html":{}}}],["22050",{"_index":622,"title":{},"body":{"injectables/EffectsService.html":{}}}],["250",{"_index":714,"title":{},"body":{"injectables/EffectsService.html":{}}}],["256",{"_index":568,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2x",{"_index":169,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["3",{"_index":177,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{},"overview.html":{}}}],["3.0",{"_index":35,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["3.5",{"_index":565,"title":{},"body":{"injectables/EffectsService.html":{}}}],["30",{"_index":595,"title":{},"body":{"injectables/EffectsService.html":{}}}],["3000",{"_index":641,"title":{},"body":{"injectables/EffectsService.html":{}}}],["32",{"_index":710,"title":{},"body":{"injectables/EffectsService.html":{}}}],["32x",{"_index":173,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["360",{"_index":162,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["4",{"_index":178,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["40",{"_index":644,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4000",{"_index":716,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4096",{"_index":567,"title":{},"body":{"injectables/EffectsService.html":{}}}],["440",{"_index":647,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4x",{"_index":170,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["5",{"_index":179,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["50",{"_index":132,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["500",{"_index":599,"title":{},"body":{"injectables/EffectsService.html":{}}}],["512",{"_index":670,"title":{},"body":{"injectables/EffectsService.html":{}}}],["6",{"_index":180,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["6.0.0",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":1002,"title":{},"body":{"index.html":{}}}],["64",{"_index":712,"title":{},"body":{"injectables/EffectsService.html":{}}}],["700",{"_index":598,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8",{"_index":585,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8000",{"_index":717,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8192",{"_index":673,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8x",{"_index":171,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_",{"_index":867,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["_contain",{"_index":900,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["_wave",{"_index":149,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_wave').offsetheight",{"_index":143,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["a.act",{"_index":823,"title":{},"body":{"injectables/PlayerService.html":{}}}],["a.id",{"_index":449,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["about'},{'nam",{"_index":41,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["about.compon",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["about.component.css",{"_index":15,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.t",{"_index":8,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.ts:8",{"_index":20,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about/app",{"_index":7,"title":{},"body":{"components/AppAboutComponent.html":{},"modules/AppModule.html":{}}}],["abstractcontrol",{"_index":233,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["ac",{"_index":547,"title":{},"body":{"injectables/EffectsService.html":{}}}],["access",{"_index":1039,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":907,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["activ",{"_index":126,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["activateeffect",{"_index":782,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activateeffect(deck",{"_index":790,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeeffect",{"_index":778,"title":{},"body":{"injectables/PlayerService.html":{}}}],["actual_compon",{"_index":69,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["actualconfig",{"_index":243,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualconfig.default",{"_index":247,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualconfig.step",{"_index":252,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualconfig.valu",{"_index":255,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["addeffect",{"_index":537,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addeffect(effect",{"_index":543,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addsong",{"_index":742,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["addsong(song",{"_index":746,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["adjusteqvalu",{"_index":708,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(0.75",{"_index":715,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(bass0",{"_index":711,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(bass1",{"_index":720,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(trebble0",{"_index":718,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(trebble1",{"_index":721,"title":{},"body":{"injectables/EffectsService.html":{}}}],["advanc",{"_index":707,"title":{},"body":{"injectables/EffectsService.html":{}}}],["afterviewinit",{"_index":78,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["algorithmindex",{"_index":630,"title":{},"body":{"injectables/EffectsService.html":{}}}],["allpass",{"_index":657,"title":{},"body":{"injectables/EffectsService.html":{}}}],["analog",{"_index":674,"title":{},"body":{"injectables/EffectsService.html":{}}}],["angular",{"_index":999,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":236,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["appaboutcompon",{"_index":1,"title":{"components/AppAboutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appcompon",{"_index":42,"title":{"components/AppComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appdeckcompon",{"_index":44,"title":{"components/AppDeckComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appeffectscreatorcompon",{"_index":46,"title":{"components/AppEffectsCreatorComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["applayoutcompon",{"_index":49,"title":{"components/AppLayoutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appli",{"_index":612,"title":{},"body":{"injectables/EffectsService.html":{}}}],["applyeffect",{"_index":90,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["applyeffect(i",{"_index":103,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["appmodul",{"_index":324,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmusiclistcompon",{"_index":51,"title":{"components/AppMusicListComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["approutingmodul",{"_index":334,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsearchcompon",{"_index":54,"title":{"components/AppSearchComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appsettingscompon",{"_index":56,"title":{"components/AppSettingsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["apptabscompon",{"_index":58,"title":{"components/AppTabsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appvolumecompon",{"_index":60,"title":{"components/AppVolumeComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["argument",{"_index":479,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["artifact",{"_index":1016,"title":{},"body":{"index.html":{}}}],["artist",{"_index":400,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["attack",{"_index":638,"title":{},"body":{"injectables/EffectsService.html":{}}}],["attribut",{"_index":28,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["auto",{"_index":661,"title":{},"body":{"injectables/EffectsService.html":{}}}],["automakeup",{"_index":645,"title":{},"body":{"injectables/EffectsService.html":{}}}],["automat",{"_index":633,"title":{},"body":{"injectables/EffectsService.html":{},"index.html":{}}}],["automod",{"_index":663,"title":{},"body":{"injectables/EffectsService.html":{}}}],["avail",{"_index":1054,"title":{},"body":{"modules.html":{}}}],["availableeffect",{"_index":431,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["availableeffect.nam",{"_index":466,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["b.id).id",{"_index":450,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["back",{"_index":304,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["band.f",{"_index":731,"title":{},"body":{"injectables/EffectsService.html":{}}}],["band.typ",{"_index":726,"title":{},"body":{"injectables/EffectsService.html":{}}}],["band.valu",{"_index":728,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bandpass",{"_index":652,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basefrequ",{"_index":664,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basemodulationfrequ",{"_index":597,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basic",{"_index":558,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bass0",{"_index":507,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["bass1",{"_index":508,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["between",{"_index":677,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bigval",{"_index":964,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["bit",{"_index":578,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bitcrush",{"_index":577,"title":{},"body":{"injectables/EffectsService.html":{}}}],["boolean",{"_index":213,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["bootstrap",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bounc",{"_index":676,"title":{},"body":{"injectables/EffectsService.html":{}}}],["break",{"_index":895,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["brows",{"_index":1052,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["buffers",{"_index":566,"title":{},"body":{"injectables/EffectsService.html":{}}}],["build",{"_index":1015,"title":{},"body":{"index.html":{}}}],["builder",{"_index":204,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["bypass",{"_index":601,"title":{},"body":{"injectables/EffectsService.html":{}}}],["c.map(a",{"_index":447,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["callback",{"_index":798,"title":{},"body":{"injectables/PlayerService.html":{}}}],["cc",{"_index":34,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["chang",{"_index":433,"title":{},"body":{"components/AppSettingsComponent.html":{},"index.html":{}}}],["change(i",{"_index":436,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["changevolum",{"_index":516,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["changevolume(deck",{"_index":519,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["channel",{"_index":678,"title":{},"body":{"injectables/EffectsService.html":{}}}],["check",{"_index":1036,"title":{},"body":{"index.html":{}}}],["checknam",{"_index":195,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["choos",{"_index":426,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["choru",{"_index":603,"title":{},"body":{"injectables/EffectsService.html":{}}}],["class",{"_index":25,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["cli",{"_index":1000,"title":{},"body":{"index.html":{}}}],["click)=\"removeeffect",{"_index":315,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["closest",{"_index":887,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["closest(el",{"_index":899,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["clunki",{"_index":286,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["cluster_appmodul",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1012,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":1040,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":39,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["components/app",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["components/roulett",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["components/slid",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["compressor",{"_index":631,"title":{},"body":{"injectables/EffectsService.html":{}}}],["comput",{"_index":406,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["config",{"_index":186,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["config.nam",{"_index":310,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["config.valu",{"_index":311,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["config[actualconfig.nam",{"_index":246,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["configslid",{"_index":834,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["configur",{"_index":309,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["console.log('error",{"_index":773,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["const",{"_index":134,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{}}}],["constructor(effectserv",{"_index":202,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(musicservic",{"_index":95,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["constructor(playerservic",{"_index":744,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["constructor(priv",{"_index":237,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["contain",{"_index":147,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["content",{"_index":27,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["control",{"_index":67,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["control.valu",{"_index":292,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["controller'},{'nam",{"_index":64,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.compon",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["controller.component.css",{"_index":832,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.html",{"_index":833,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.t",{"_index":829,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:104",{"_index":941,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:123",{"_index":943,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:146",{"_index":945,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:158",{"_index":947,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:173",{"_index":949,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:185",{"_index":951,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:196",{"_index":953,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:20",{"_index":842,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:21",{"_index":856,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:216",{"_index":922,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:22",{"_index":858,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:221",{"_index":923,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:226",{"_index":920,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:229",{"_index":921,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":855,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:24",{"_index":857,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:25",{"_index":928,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":841,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:27",{"_index":929,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:29",{"_index":931,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:39",{"_index":933,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:44",{"_index":851,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:49",{"_index":852,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:53",{"_index":935,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:54",{"_index":854,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:59",{"_index":847,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:62",{"_index":850,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:66",{"_index":845,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:70",{"_index":937,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:89",{"_index":939,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller/roulett",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{}}}],["controller/slid",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"components/SliderControllerComponent.html":{}}}],["controlvalueaccessor",{"_index":830,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["core",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["creat",{"_index":306,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["createeffect",{"_index":196,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["createeffects(ac",{"_index":545,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeq",{"_index":538,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeq(bass0",{"_index":548,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeqeffect",{"_index":539,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeqeffect(deck",{"_index":550,"title":{},"body":{"injectables/EffectsService.html":{}}}],["creator",{"_index":183,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{}}}],["creator'},{'nam",{"_index":48,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["creator.compon",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["creator.component.css",{"_index":184,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.html",{"_index":185,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.t",{"_index":182,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["creator.component.ts:11",{"_index":223,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:12",{"_index":222,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:13",{"_index":229,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:14",{"_index":230,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:15",{"_index":224,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:16",{"_index":225,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:17",{"_index":220,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:18",{"_index":227,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:19",{"_index":228,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:20",{"_index":231,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:21",{"_index":206,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:27",{"_index":218,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:51",{"_index":215,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:55",{"_index":216,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:58",{"_index":211,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:61",{"_index":209,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:73",{"_index":208,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:93",{"_index":214,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator/app",{"_index":181,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["cue",{"_index":174,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["curveamount",{"_index":629,"title":{},"body":{"injectables/EffectsService.html":{}}}],["custom_text_input_control_value_accessor",{"_index":831,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["cutoff",{"_index":562,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dark",{"_index":464,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["decent",{"_index":586,"title":{},"body":{"injectables/EffectsService.html":{}}}],["decimaladjust",{"_index":283,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["decimaladjust('round",{"_index":291,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["decimaladjust(typ",{"_index":294,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["deck",{"_index":80,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["deck'},{'nam",{"_index":45,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deck.compon",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["deck.component.css",{"_index":81,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.html",{"_index":82,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.t",{"_index":77,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:14",{"_index":102,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:16",{"_index":112,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:17",{"_index":113,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:18",{"_index":115,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:20",{"_index":116,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:21",{"_index":97,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:56",{"_index":109,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:61",{"_index":108,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:68",{"_index":107,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:72",{"_index":104,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck/app",{"_index":76,"title":{},"body":{"components/AppDeckComponent.html":{},"modules/AppModule.html":{}}}],["deck[0].backend.ac.createbiquadfilt",{"_index":724,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck[1].backend.ac.createbiquadfilt",{"_index":734,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck_",{"_index":148,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deckload",{"_index":739,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["decknum",{"_index":779,"title":{},"body":{"injectables/PlayerService.html":{}}}],["decknumb",{"_index":94,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["decksong",{"_index":740,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["declar",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":926,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["default",{"_index":110,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["defaultstep",{"_index":187,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["defin",{"_index":19,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["delay",{"_index":608,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytim",{"_index":615,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytimeleft",{"_index":679,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytimeright",{"_index":680,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deletesong",{"_index":743,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["deletesong(song",{"_index":748,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["depend",{"_index":325,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":590,"title":{},"body":{"injectables/EffectsService.html":{}}}],["descript",{"_index":604,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dev",{"_index":1008,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1003,"title":{},"body":{"index.html":{}}}],["direct",{"_index":68,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1014,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1019,"title":{},"body":{"index.html":{}}}],["disabled]=\"\">remov",{"_index":316,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["dist",{"_index":1018,"title":{},"body":{"index.html":{}}}],["document",{"_index":1038,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('deck_",{"_index":141,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["document:click",{"_index":840,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["document:click(ev",{"_index":843,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["drag",{"_index":404,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["drive",{"_index":627,"title":{},"body":{"injectables/EffectsService.html":{}}}],["drop",{"_index":502,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drope",{"_index":472,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["droped(ev",{"_index":483,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drylevel",{"_index":620,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dynam",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":302,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["e2",{"_index":1030,"title":{},"body":{"index.html":{}}}],["eff",{"_index":135,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["eff.filter(_",{"_index":137,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["effect",{"_index":47,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["effect.id",{"_index":692,"title":{},"body":{"injectables/EffectsService.html":{}}}],["effect.nam",{"_index":271,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectload",{"_index":780,"title":{},"body":{"injectables/PlayerService.html":{}}}],["effects.servic",{"_index":822,"title":{},"body":{"injectables/PlayerService.html":{}}}],["effectscr",{"_index":536,"title":{},"body":{"injectables/EffectsService.html":{}}}],["effectscreatorarray",{"_index":188,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectserv",{"_index":207,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["effectsnum",{"_index":432,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["effectsservic",{"_index":203,"title":{"injectables/EffectsService.html":{}},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["effectstruct",{"_index":189,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectstruct.descript",{"_index":308,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectstruct.nam",{"_index":307,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["el",{"_index":888,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.match",{"_index":890,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.mozmatchesselector",{"_index":892,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.msmatchesselector",{"_index":893,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.parentel",{"_index":896,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.webkitmatchesselector",{"_index":891,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["element",{"_index":898,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["elementref",{"_index":925,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["end",{"_index":1029,"title":{},"body":{"index.html":{}}}],["english",{"_index":462,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["eq",{"_index":551,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["eq[0].map(band",{"_index":723,"title":{},"body":{"injectables/EffectsService.html":{}}}],["eq[1].map(band",{"_index":733,"title":{},"body":{"injectables/EffectsService.html":{}}}],["eqeffect",{"_index":781,"title":{},"body":{"injectables/PlayerService.html":{}}}],["equal",{"_index":783,"title":{},"body":{"injectables/PlayerService.html":{}}}],["error",{"_index":772,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["event",{"_index":480,"title":{},"body":{"components/AppTabsComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{}}}],["event.preventdefault",{"_index":494,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.stoppropag",{"_index":495,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.target",{"_index":897,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["excursionoctav",{"_index":665,"title":{},"body":{"injectables/EffectsService.html":{}}}],["execut",{"_index":1026,"title":{},"body":{"index.html":{}}}],["exp",{"_index":295,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["f",{"_index":709,"title":{},"body":{"injectables/EffectsService.html":{}}}],["fals",{"_index":127,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["feedback",{"_index":592,"title":{},"body":{"injectables/EffectsService.html":{}}}],["fi",{"_index":669,"title":{},"body":{"injectables/EffectsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["filechangeev",{"_index":416,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filechangeevent(fileinput",{"_index":419,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["fileinput",{"_index":421,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filelist",{"_index":423,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["fileread",{"_index":766,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["fill",{"_index":876,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fillheight",{"_index":913,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillleft",{"_index":915,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filloffset",{"_index":971,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillsiz",{"_index":902,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filltop",{"_index":914,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillwidth",{"_index":912,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filter",{"_index":560,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.frequency.valu",{"_index":730,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.gain.valu",{"_index":727,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.q.valu",{"_index":729,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.typ",{"_index":725,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter0",{"_index":722,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter1",{"_index":732,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filtertyp",{"_index":650,"title":{},"body":{"injectables/EffectsService.html":{}}}],["finish",{"_index":155,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["flag",{"_index":1021,"title":{},"body":{"index.html":{}}}],["float",{"_index":287,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["fn",{"_index":848,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fold",{"_index":835,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["forbidden",{"_index":290,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["formbuild",{"_index":205,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["formgroup",{"_index":219,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["formsmodul",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["forwardref",{"_index":859,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["freepik",{"_index":37,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["frequenc",{"_index":646,"title":{},"body":{"injectables/EffectsService.html":{}}}],["function",{"_index":280,"title":{"miscellaneous/functions.html":{}},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1032,"title":{},"body":{"index.html":{}}}],["gain",{"_index":635,"title":{},"body":{"injectables/EffectsService.html":{}}}],["gener",{"_index":998,"title":{},"body":{"index.html":{}}}],["get",{"_index":995,"title":{"index.html":{}},"body":{}}],["geteffect",{"_index":540,"title":{},"body":{"injectables/EffectsService.html":{}}}],["geteffectscr",{"_index":541,"title":{},"body":{"injectables/EffectsService.html":{}}}],["getfillheight",{"_index":940,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillleft",{"_index":944,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfilltop",{"_index":942,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillwidth",{"_index":938,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbheight",{"_index":932,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbleft",{"_index":936,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbtop",{"_index":934,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbwidth",{"_index":930,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackheight",{"_index":948,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackleft",{"_index":952,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettracktop",{"_index":950,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackwidth",{"_index":946,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["go",{"_index":1035,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1053,"title":{},"body":{"modules.html":{}}}],["height",{"_index":140,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["help",{"_index":1033,"title":{},"body":{"index.html":{}}}],["here",{"_index":405,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["higher",{"_index":588,"title":{},"body":{"injectables/EffectsService.html":{}}}],["highpass",{"_index":651,"title":{},"body":{"injectables/EffectsService.html":{}}}],["highshelf",{"_index":654,"title":{},"body":{"injectables/EffectsService.html":{}}}],["hostlisten",{"_index":474,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["hostlistener('document:click",{"_index":885,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["hostlistener('window:dragleav",{"_index":500,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["hostlistener('window:dragov",{"_index":498,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["htmlelement",{"_index":924,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["http://localhost:4200",{"_index":1010,"title":{},"body":{"index.html":{}}}],["http://virtualdj",{"_index":1047,"title":{},"body":{"index.html":{}}}],["http://virtualdj.surge.sh",{"_index":1049,"title":{},"body":{"index.html":{}}}],["https://clm2609.gitlab.io/tfg",{"_index":1041,"title":{},"body":{"index.html":{}}}],["i+1",{"_index":465,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["icon",{"_index":29,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["id",{"_index":557,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["ie",{"_index":685,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ignor",{"_index":861,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["includes(lowsearch",{"_index":398,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["index",{"_index":83,"title":{"index.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["inject",{"_index":534,"title":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"overview.html":{}}}],["input",{"_index":93,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["intens",{"_index":659,"title":{},"body":{"injectables/EffectsService.html":{}}}],["isdefin",{"_index":197,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["isdefined(someth",{"_index":210,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["isnan(valu",{"_index":297,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["isplay",{"_index":784,"title":{},"body":{"injectables/PlayerService.html":{}}}],["isplaying(deck",{"_index":794,"title":{},"body":{"injectables/PlayerService.html":{}}}],["j",{"_index":437,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["jest",{"_index":1028,"title":{},"body":{"index.html":{}}}],["js",{"_index":285,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"dependencies.html":{}}}],["json",{"_index":190,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["json.parse(effect",{"_index":242,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["json.parse(json.stringify(effect",{"_index":453,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.availableeffects.find(a",{"_index":457,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.effect",{"_index":690,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.parse(json.stringify(this.effectscr",{"_index":691,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.parse(json.stringify(this.playerserv.effect",{"_index":444,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(localstorage.getitem('effect",{"_index":736,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.stringify(this.effect",{"_index":699,"title":{},"body":{"injectables/EffectsService.html":{}}}],["key",{"_index":282,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["knee",{"_index":643,"title":{},"body":{"injectables/EffectsService.html":{}}}],["languag",{"_index":460,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["latest",{"_index":1044,"title":{},"body":{"index.html":{}}}],["layout",{"_index":319,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":50,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["layout.compon",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["layout.component.css",{"_index":320,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.html",{"_index":321,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.t",{"_index":318,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:8",{"_index":322,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout/app",{"_index":317,"title":{},"body":{"components/AppLayoutComponent.html":{},"modules/AppModule.html":{}}}],["left",{"_index":573,"title":{},"body":{"injectables/EffectsService.html":{}}}],["legend",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["licens",{"_index":33,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["light",{"_index":463,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["list",{"_index":367,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list'},{'nam",{"_index":53,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["list.compon",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":368,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.html",{"_index":369,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.t",{"_index":366,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:11",{"_index":383,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:13",{"_index":382,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:14",{"_index":384,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:15",{"_index":376,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:30",{"_index":378,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:33",{"_index":380,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:36",{"_index":381,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list/app",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"components/AppMusicListComponent.html":{}}}],["lo",{"_index":668,"title":{},"body":{"injectables/EffectsService.html":{}}}],["load",{"_index":402,"title":{},"body":{"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["load(deck",{"_index":750,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["loader.servic",{"_index":118,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["loader.service.t",{"_index":738,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:10",{"_index":758,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:11",{"_index":753,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:12",{"_index":757,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:13",{"_index":754,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:14",{"_index":745,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:18",{"_index":751,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:32",{"_index":747,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:36",{"_index":749,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:8",{"_index":761,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:9",{"_index":760,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loadondeck",{"_index":373,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loadondeck(deck",{"_index":377,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loc",{"_index":969,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["localstorage.getitem('effect",{"_index":735,"title":{},"body":{"injectables/EffectsService.html":{}}}],["localstorage.setitem('effect",{"_index":698,"title":{},"body":{"injectables/EffectsService.html":{}}}],["lowpass",{"_index":611,"title":{},"body":{"injectables/EffectsService.html":{}}}],["lowsearch",{"_index":395,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["lowshelf",{"_index":653,"title":{},"body":{"injectables/EffectsService.html":{}}}],["made",{"_index":30,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["makeup",{"_index":634,"title":{},"body":{"injectables/EffectsService.html":{}}}],["makeupgain",{"_index":637,"title":{},"body":{"injectables/EffectsService.html":{}}}],["mastermultipli",{"_index":532,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["match",{"_index":71,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchesselector",{"_index":889,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["matchesselector.call(el",{"_index":894,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["math",{"_index":289,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["math.max(0",{"_index":972,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["math.max(valoranterior",{"_index":695,"title":{},"body":{"injectables/EffectsService.html":{}}}],["math[type](+(value[0",{"_index":301,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["math[type](valu",{"_index":296,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["max",{"_index":606,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["maxim",{"_index":471,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["method",{"_index":89,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["mid0",{"_index":509,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["mid1",{"_index":510,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["min",{"_index":605,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["miscellan",{"_index":992,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modul",{"_index":323,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moog",{"_index":559,"title":{},"body":{"injectables/EffectsService.html":{}}}],["moogfilt",{"_index":561,"title":{},"body":{"injectables/EffectsService.html":{}}}],["more",{"_index":1034,"title":{},"body":{"index.html":{}}}],["mouseev",{"_index":844,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["multi",{"_index":864,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music",{"_index":52,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music.filter(mu",{"_index":396,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musiclist",{"_index":370,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicload",{"_index":741,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["musicloaderservic",{"_index":96,"title":{"injectables/MusicLoaderService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["musicservic",{"_index":85,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["musicservice.mus",{"_index":386,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicservice.music$.subscribe(a",{"_index":388,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicsubscript",{"_index":125,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namechar",{"_index":191,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["nan",{"_index":298,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["navig",{"_index":1009,"title":{},"body":{"index.html":{}}}],["need",{"_index":284,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["new",{"_index":702,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"index.html":{}}}],["ng",{"_index":1006,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":860,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ngafterviewinit",{"_index":139,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["ngmodel)]=\"selectedeffectremov",{"_index":313,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["ngmodul",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":163,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["noop",{"_index":862,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["normalize('nfd",{"_index":273,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["normfreq",{"_index":580,"title":{},"body":{"injectables/EffectsService.html":{}}}],["notch",{"_index":656,"title":{},"body":{"injectables/EffectsService.html":{}}}],["npm",{"_index":1025,"title":{},"body":{"index.html":{}}}],["null",{"_index":259,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["number",{"_index":101,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["number(a.id",{"_index":458,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["number(id",{"_index":701,"title":{},"body":{"injectables/EffectsService.html":{}}}],["number(this.selectedeffects[i][j",{"_index":459,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["on(deck",{"_index":797,"title":{},"body":{"injectables/PlayerService.html":{}}}],["onchangecallback",{"_index":866,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ondestroy",{"_index":79,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ondocumentclick(ev",{"_index":886,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ondragover(ev",{"_index":499,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ontouchedcallback",{"_index":865,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["option",{"_index":100,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outputgain",{"_index":625,"title":{},"body":{"injectables/EffectsService.html":{}}}],["overdr",{"_index":624,"title":{},"body":{"injectables/EffectsService.html":{}}}],["overview",{"_index":1055,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":978,"title":{"dependencies.html":{}},"body":{}}],["pan",{"_index":575,"title":{},"body":{"injectables/EffectsService.html":{}}}],["panner",{"_index":574,"title":{},"body":{"injectables/EffectsService.html":{}}}],["paramet",{"_index":98,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["pc",{"_index":963,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["peak",{"_index":655,"title":{},"body":{"injectables/EffectsService.html":{}}}],["percent",{"_index":877,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["phaser",{"_index":582,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ping",{"_index":570,"title":{},"body":{"injectables/EffectsService.html":{}}}],["pingpongdelay",{"_index":572,"title":{},"body":{"injectables/EffectsService.html":{}}}],["player.servic",{"_index":762,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["playerserv",{"_index":434,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["playerservic",{"_index":86,"title":{"injectables/PlayerService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["playpaus",{"_index":91,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["playpause(deck",{"_index":800,"title":{},"body":{"injectables/PlayerService.html":{}}}],["point",{"_index":288,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["pong",{"_index":571,"title":{},"body":{"injectables/EffectsService.html":{}}}],["possibl",{"_index":589,"title":{},"body":{"injectables/EffectsService.html":{}}}],["preparedeffect",{"_index":704,"title":{},"body":{"injectables/EffectsService.html":{}}}],["preparedeffects.push(new",{"_index":705,"title":{},"body":{"injectables/EffectsService.html":{}}}],["privat",{"_index":124,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["prod",{"_index":1020,"title":{},"body":{"index.html":{}}}],["product",{"_index":1022,"title":{},"body":{"index.html":{}}}],["progresscolor",{"_index":152,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["project",{"_index":997,"title":{},"body":{"index.html":{}}}],["properti",{"_index":84,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["protractor",{"_index":1031,"title":{},"body":{"index.html":{}}}],["provid",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["providedin",{"_index":689,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["purpl",{"_index":153,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["q",{"_index":648,"title":{},"body":{"injectables/EffectsService.html":{}}}],["queri",{"_index":371,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["rang",{"_index":587,"title":{},"body":{"injectables/EffectsService.html":{}}}],["rate",{"_index":583,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ratio",{"_index":642,"title":{},"body":{"injectables/EffectsService.html":{}}}],["reactiveformsmodul",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["reader",{"_index":765,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onerror",{"_index":771,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onload",{"_index":768,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.readasdataurl(song",{"_index":767,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.result",{"_index":770,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["readm",{"_index":1037,"title":{},"body":{"index.html":{}}}],["recievedfil",{"_index":417,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["recievedfiles(fil",{"_index":422,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["red",{"_index":151,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["registeronchang",{"_index":836,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registeronchange(fn",{"_index":846,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouch",{"_index":837,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouched(fn",{"_index":849,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["releas",{"_index":640,"title":{},"body":{"injectables/EffectsService.html":{}}}],["reload",{"_index":1011,"title":{},"body":{"index.html":{}}}],["remov",{"_index":312,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["removeeffect",{"_index":198,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["removeeffect(id",{"_index":555,"title":{},"body":{"injectables/EffectsService.html":{}}}],["removesong",{"_index":374,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["removesong(song",{"_index":379,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["replace(/[\\u0300",{"_index":274,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["requestanimationfram",{"_index":144,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["reset",{"_index":199,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["resetdisc",{"_index":92,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["resetremov",{"_index":200,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["reson",{"_index":564,"title":{},"body":{"injectables/EffectsService.html":{}}}],["result",{"_index":70,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":105,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["right",{"_index":576,"title":{},"body":{"injectables/EffectsService.html":{}}}],["root",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["root'},{'nam",{"_index":43,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["rotat",{"_index":87,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["roulett",{"_index":63,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["roulettecontrollercompon",{"_index":62,"title":{"components/RouletteControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["roundicon",{"_index":36,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["rout",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1005,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":121,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["safari",{"_index":684,"title":{},"body":{"injectables/EffectsService.html":{}}}],["save",{"_index":785,"title":{},"body":{"injectables/PlayerService.html":{}}}],["save(deck",{"_index":802,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeffect",{"_index":786,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeffects(deck",{"_index":804,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeq",{"_index":787,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeq(eq",{"_index":806,"title":{},"body":{"injectables/PlayerService.html":{}}}],["scaffold",{"_index":1013,"title":{},"body":{"index.html":{}}}],["search",{"_index":403,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{}}}],["search'},{'nam",{"_index":55,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["search.compon",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.css",{"_index":414,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.html",{"_index":415,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.t",{"_index":413,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:15",{"_index":420,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:19",{"_index":424,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:9",{"_index":418,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search/app",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"components/AppSearchComponent.html":{}}}],["searchmus",{"_index":393,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchmusic(this.queri",{"_index":399,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchqueri",{"_index":394,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["see",{"_index":1043,"title":{},"body":{"index.html":{}}}],["selectedeffect",{"_index":192,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["selectedeffectremov",{"_index":193,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["sensit",{"_index":667,"title":{},"body":{"injectables/EffectsService.html":{}}}],["serv",{"_index":1007,"title":{},"body":{"index.html":{}}}],["server",{"_index":1004,"title":{},"body":{"index.html":{}}}],["services/effects.servic",{"_index":232,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["services/mus",{"_index":117,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["services/player.servic",{"_index":119,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["set",{"_index":428,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{}}}],["setact",{"_index":473,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["setactive(act",{"_index":487,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["seteq",{"_index":517,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["setinterv",{"_index":130,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["settings'},{'nam",{"_index":57,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["settings.compon",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["settings.component.css",{"_index":429,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.html",{"_index":430,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.t",{"_index":427,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":442,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:16",{"_index":441,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":440,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":439,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":443,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:30",{"_index":438,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:9",{"_index":435,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings/app",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"components/AppSettingsComponent.html":{}}}],["setvalu",{"_index":906,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["setvolum",{"_index":788,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setvolume(deck",{"_index":808,"title":{},"body":{"injectables/PlayerService.html":{}}}],["shell",{"_index":903,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetheight",{"_index":959,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetwidth",{"_index":958,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shellview",{"_index":904,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shift",{"_index":299,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["shownmus",{"_index":372,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["signal",{"_index":613,"title":{},"body":{"injectables/EffectsService.html":{}}}],["slider",{"_index":66,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["slidercontrollercompon",{"_index":65,"title":{"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["smallval",{"_index":957,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["smashicon",{"_index":31,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["someth",{"_index":212,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["song",{"_index":88,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["song.nam",{"_index":168,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["sound",{"_index":675,"title":{},"body":{"injectables/EffectsService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["spanish",{"_index":461,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["src/.../app",{"_index":993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/app",{"_index":6,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/roulett",{"_index":828,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["src/app/components/slid",{"_index":901,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["src/app/services/effects.service.t",{"_index":535,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:226",{"_index":553,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:229",{"_index":554,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:232",{"_index":544,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:238",{"_index":556,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:242",{"_index":546,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:251",{"_index":549,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:366",{"_index":552,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:384",{"_index":542,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:75",{"_index":686,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:8",{"_index":602,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/mus",{"_index":737,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["src/app/services/player.service.t",{"_index":777,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:10",{"_index":812,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:11",{"_index":811,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:12",{"_index":814,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:13",{"_index":818,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:14",{"_index":810,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:15",{"_index":820,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:16",{"_index":821,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:17",{"_index":819,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:18",{"_index":813,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:19",{"_index":815,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:20",{"_index":789,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:27",{"_index":803,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:33",{"_index":809,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:36",{"_index":799,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:39",{"_index":796,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:42",{"_index":801,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:45",{"_index":795,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:48",{"_index":792,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:55",{"_index":793,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:61",{"_index":807,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:66",{"_index":805,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:73",{"_index":791,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stage",{"_index":1045,"title":{},"body":{"index.html":{}}}],["stage.surge.sh",{"_index":1048,"title":{},"body":{"index.html":{}}}],["start",{"_index":401,"title":{"index.html":{}},"body":{"components/AppMusicListComponent.html":{}}}],["state",{"_index":1046,"title":{},"body":{"index.html":{}}}],["step",{"_index":293,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{},"miscellaneous/functions.html":{}}}],["stepvalid",{"_index":994,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stepvalidator(actualconfig.step",{"_index":251,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["stepvalidator(step",{"_index":281,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["stereo",{"_index":682,"title":{},"body":{"injectables/EffectsService.html":{}}}],["stereophas",{"_index":594,"title":{},"body":{"injectables/EffectsService.html":{}}}],["stopdrag",{"_index":501,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["store",{"_index":1017,"title":{},"body":{"index.html":{}}}],["string",{"_index":226,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["string(mus.nam",{"_index":397,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["style=\"width:250px",{"_index":314,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["subject",{"_index":752,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["subscript",{"_index":120,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["support",{"_index":1050,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1051,"title":{},"body":{"modules.html":{}}}],["sweep",{"_index":666,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tab",{"_index":468,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs'},{'nam",{"_index":59,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tabs.compon",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.component.css",{"_index":469,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.html",{"_index":470,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.t",{"_index":467,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:10",{"_index":489,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:11",{"_index":490,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:12",{"_index":491,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:13",{"_index":492,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:14",{"_index":488,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:17",{"_index":485,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:19",{"_index":477,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:24",{"_index":484,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:31",{"_index":482,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:37",{"_index":478,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:40",{"_index":486,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs/app",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"components/AppTabsComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["test",{"_index":1024,"title":{},"body":{"index.html":{}}}],["tfg",{"_index":996,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":160,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.activeeffects[deck",{"_index":824,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.applyeffect",{"_index":826,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.availableeffect",{"_index":445,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.availableeffects.find(b",{"_index":448,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.builder.group(config",{"_index":257,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config",{"_index":256,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config.id",{"_index":869,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.config.max",{"_index":871,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.min",{"_index":870,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.valid",{"_index":264,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config.valu",{"_index":268,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config.vert",{"_index":955,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.config.zindex",{"_index":976,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.configslid",{"_index":868,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.max",{"_index":879,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.min",{"_index":878,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.deckloader[0].asobserv",{"_index":755,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[1].asobserv",{"_index":756,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[deck].next(this.decksongs[deck",{"_index":764,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.decknumb",{"_index":142,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.decksongs[deck",{"_index":763,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.defaultstep",{"_index":253,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.drag",{"_index":497,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.effect",{"_index":136,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{}}}],["this.effectloader[0].asobserv",{"_index":816,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectloader[1].asobserv",{"_index":817,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectloader[deck].next(this.effects[deck",{"_index":827,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effects.filter(effect",{"_index":700,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects.find",{"_index":270,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effects.map(c",{"_index":446,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects.push(effect",{"_index":697,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects.reduce((valoranterior",{"_index":693,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects[0",{"_index":452,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects[1",{"_index":455,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effectscreatorarray",{"_index":238,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectserv.addeffect",{"_index":265,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectserv.createeffects(this.deck[deck].backend.ac",{"_index":825,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectserv.geteffect",{"_index":240,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["this.effectserv.geteffectscr",{"_index":239,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectserv.removeeffect(this.selectedeffectremov",{"_index":278,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectstruct",{"_index":241,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectstruct.config",{"_index":244,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectstruct.nam",{"_index":267,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.fills",{"_index":970,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.fold",{"_index":882,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.isdefined(actualconfig.min",{"_index":245,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.isdefined(actualconfig.valu",{"_index":254,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.maxim",{"_index":493,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.music.push(song",{"_index":774,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.music.splice(this.music.indexof(song",{"_index":776,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musiclist",{"_index":385,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicloader.asobserv",{"_index":759,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicloader.next(this.mus",{"_index":775,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicservic",{"_index":128,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.musicservice.decksongs$[this.decknumber].subscribe(a",{"_index":158,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.musicservice.deletesong(song",{"_index":390,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicservice.load(deck",{"_index":389,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicsubscript",{"_index":157,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.musicsubscription.unsubscrib",{"_index":164,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.nam",{"_index":266,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.name.length",{"_index":276,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.namechar",{"_index":277,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.onchangecallback",{"_index":884,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.slid",{"_index":977,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.valu",{"_index":881,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.ontouchedcallback",{"_index":883,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.playerserv.effects$[0].subscribe(effect",{"_index":451,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.effects$[1].subscribe(effect",{"_index":454,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.saveeffect",{"_index":456,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerservic",{"_index":129,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["this.playerservice.activateeffect(this.decknumb",{"_index":167,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.effects$[this.decknumber].subscribe(effect",{"_index":133,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.isplaying(this.decknumb",{"_index":166,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.load(deck",{"_index":769,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.playerservice.on(this.decknumb",{"_index":154,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.playpause(this.decknumb",{"_index":165,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.sav",{"_index":145,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.queri",{"_index":391,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.recievedfiles(event.datatransfer.fil",{"_index":496,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.recievedfiles(fileinput.target.fil",{"_index":425,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["this.reset",{"_index":269,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.resetdisc",{"_index":156,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.resetremov",{"_index":279,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.rot",{"_index":131,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["this.selectedeffect",{"_index":258,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["this.selectedeffectremov",{"_index":260,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.shel",{"_index":956,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shellview.nativeel",{"_index":974,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shownmus",{"_index":392,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.slid",{"_index":962,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.song",{"_index":159,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.thumbheight",{"_index":966,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.thumbwidth",{"_index":967,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.updatemus",{"_index":387,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.validnam",{"_index":263,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.valu",{"_index":872,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.volumemast",{"_index":533,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["this.zindex",{"_index":975,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["threshold",{"_index":636,"title":{},"body":{"injectables/EffectsService.html":{}}}],["thumb",{"_index":873,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["thumbheight",{"_index":909,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbleft",{"_index":911,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbsiz",{"_index":965,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbtop",{"_index":910,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbwidth",{"_index":908,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tolowercas",{"_index":272,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["track",{"_index":874,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["trackheight",{"_index":917,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackleft",{"_index":919,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracksiz",{"_index":968,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracktop",{"_index":918,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackwidth",{"_index":916,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trebble0",{"_index":511,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["trebble1",{"_index":512,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["tremolo",{"_index":658,"title":{},"body":{"injectables/EffectsService.html":{}}}],["true",{"_index":138,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tuna",{"_index":687,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["tuna(ac",{"_index":703,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tuna[effect.type](effect.config",{"_index":706,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tunaj",{"_index":688,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["type",{"_index":99,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":261,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["u036f]/g",{"_index":275,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["undefin",{"_index":262,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["unfold",{"_index":838,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["unit",{"_index":1023,"title":{},"body":{"index.html":{}}}],["updateeffect",{"_index":201,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["updateeffect(effect",{"_index":217,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["updatemus",{"_index":375,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["us",{"_index":632,"title":{},"body":{"injectables/EffectsService.html":{},"index.html":{}}}],["useexist",{"_index":863,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["val",{"_index":961,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["valid",{"_index":234,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validatorfn",{"_index":235,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validators.max(actualconfig.max",{"_index":250,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validators.min(actualconfig.min",{"_index":249,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validators.requir",{"_index":248,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validnam",{"_index":194,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["valoractu",{"_index":694,"title":{},"body":{"injectables/EffectsService.html":{}}}],["valoractual.id",{"_index":696,"title":{},"body":{"injectables/EffectsService.html":{}}}],["valu",{"_index":111,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["value.tostring().split('",{"_index":300,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["value[0",{"_index":305,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["value[1",{"_index":303,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["version",{"_index":1001,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":875,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["via",{"_index":1027,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":927,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["viewchild('slidershel",{"_index":954,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["void",{"_index":106,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volum",{"_index":504,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["volume'},{'nam",{"_index":61,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volume.compon",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["volume.component.css",{"_index":505,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.html",{"_index":506,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.t",{"_index":503,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:10",{"_index":518,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:12",{"_index":529,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:13",{"_index":530,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:14",{"_index":531,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:15",{"_index":522,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:16",{"_index":524,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:17",{"_index":526,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:18",{"_index":523,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:19",{"_index":525,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:20",{"_index":527,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:21",{"_index":520,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:34",{"_index":521,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume/app",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"components/AppVolumeComponent.html":{}}}],["volume0",{"_index":513,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume1",{"_index":514,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volumemast",{"_index":515,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["wah",{"_index":662,"title":{},"body":{"injectables/EffectsService.html":{}}}],["wahwah",{"_index":660,"title":{},"body":{"injectables/EffectsService.html":{}}}],["wavecolor",{"_index":150,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurf",{"_index":122,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["wavesurfer.cr",{"_index":146,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurfer.j",{"_index":123,"title":{},"body":{"components/AppDeckComponent.html":{},"dependencies.html":{}}}],["webapp",{"_index":1042,"title":{},"body":{"index.html":{}}}],["wetlevel",{"_index":618,"title":{},"body":{"injectables/EffectsService.html":{}}}],["window:dragleav",{"_index":475,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragov",{"_index":476,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragover(ev",{"_index":481,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["work",{"_index":683,"title":{},"body":{"injectables/EffectsService.html":{}}}],["writevalu",{"_index":839,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["writevalue(valu",{"_index":853,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["www.flaticon.com",{"_index":32,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["zindex",{"_index":905,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["zone.j",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppAboutComponent.html":{"url":"components/AppAboutComponent.html","title":"component - AppAboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppAboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-about/app-about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                app-about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-about.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-about/app-about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './app-about.component.html',\n  styleUrls: ['./app-about.component.css']\n})\nexport class AppAboutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  Content attribution:\n\n\n\n  \n  \n  Icons made by\n    Smashicons\n    from\n    www.flaticon.com\n    is licensed by\n    CC 3.0 BY\n  \n\n\n\n  \n  \n  Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY\n\n\n\n  \n  \n  Icons made by Freepik from www.flaticon.com is licensed by CC 3.0 BY\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Content attribution:      Icons made by    Smashicons    from    www.flaticon.com    is licensed by    CC 3.0 BY        Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY      Icons made by Freepik from www.flaticon.com is licensed by CC 3.0 BY'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppAboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n-->\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppDeckComponent.html":{"url":"components/AppDeckComponent.html","title":"component - AppDeckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppDeckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-deck/app-deck.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deck\n            \n\n            \n                styleUrls\n                app-deck.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-deck.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effects\n                            \n                            \n                                musicService\n                            \n                            \n                                playerService\n                            \n                            \n                                rotation\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyEffect\n                            \n                            \n                                playPause\n                            \n                            \n                                resetDisc\n                            \n                            \n                                rotate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deckNumber\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-deck/app-deck.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deckNumber\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffect(i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetDisc\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetDisc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [{}, {}, {}, {}, {}, {}] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            song\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        song:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { PlayerService } from '../../services/player.service';\nimport { Subscription } from 'rxjs';\nimport * as WaveSurfer from 'wavesurfer.js';\n\n@Component({\n  selector: 'app-deck',\n  templateUrl: './app-deck.component.html',\n  styleUrls: ['./app-deck.component.css']\n})\nexport class AppDeckComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  deckNumber: number;\n  private musicSubscription: Subscription;\n  musicService: MusicLoaderService;\n  playerService: PlayerService;\n  rotation = 0;\n  private active = false;\n  song: any;\n  effects = [{}, {}, {}, {}, {}, {}] as any;\n  constructor(musicService: MusicLoaderService, playerService: PlayerService) {\n    this.musicService = musicService;\n    this.playerService = playerService;\n  }\n  ngOnInit() {\n    setInterval(() => {\n      this.rotate();\n    }, 50);\n    this.playerService.effects$[this.deckNumber].subscribe(effects => {\n      const eff = effects as any;\n      this.effects = eff.filter(_ => true);\n    });\n  }\n  ngAfterViewInit(): void {\n    const height = document.getElementById('deck_' + this.deckNumber + '_wave').offsetHeight;\n    requestAnimationFrame(() => {\n      this.playerService.save(\n        this.deckNumber,\n        WaveSurfer.create({\n          container: '#deck_' + this.deckNumber + '_wave',\n          waveColor: 'red',\n          progressColor: 'purple',\n          height: height\n        })\n      );\n      this.playerService.on(this.deckNumber, 'finish', () => {\n        this.resetDisc();\n      });\n    });\n    this.musicSubscription = this.musicService.decksongs$[this.deckNumber].subscribe(a => {\n      this.resetDisc();\n      this.song = a as File;\n    });\n  }\n  rotate() {\n    if (this.active) {\n      this.rotation = (this.rotation + 10) % 360;\n    }\n  }\n  resetDisc() {\n    this.active = false;\n    this.rotation = 0;\n  }\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n  playPause() {\n    this.playerService.playPause(this.deckNumber);\n    this.active = this.playerService.isPlaying(this.deckNumber);\n  }\n  applyEffect(i) {\n    this.playerService.activateEffect(this.deckNumber, i);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n    \n\n    \n      \n        {{song.name}}\n      \n\n      \n        \n          \n            \n          \n          \n            2x\n            4x\n            8x\n            16x\n            32x\n          \n        \n        \n          \n            \n              CUEs\n              \n                CUE 1\n                CUE 2\n                CUE 3\n                CUE 4\n              \n              Effects\n              \n                \n                  1\n                  2\n                  3\n                \n                \n                  4\n                  5\n                  6\n                \n              \n            \n            \n              \n            \n          \n          \n            CUE\n            \n              \n                \n                \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{song.name}}                                                                          2x            4x            8x            16x            32x                                                              CUEs                              CUE 1                CUE 2                CUE 3                CUE 4                            Effects                                                1                  2                  3                                                  4                  5                  6                                                                                                                CUE                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppDeckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppEffectsCreatorComponent.html":{"url":"components/AppEffectsCreatorComponent.html","title":"component - AppEffectsCreatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppEffectsCreatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-effects-creator/app-effects-creator.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-effects-creator\n            \n\n            \n                styleUrls\n                app-effects-creator.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-effects-creator.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                defaultStep\n                            \n                            \n                                effects\n                            \n                            \n                                effectsCreatorArray\n                            \n                            \n                                effectStruct\n                            \n                            \n                                JSON\n                            \n                            \n                                name\n                            \n                            \n                                nameChars\n                            \n                            \n                                selectedEffect\n                            \n                            \n                                selectedEffectRemove\n                            \n                            \n                                validName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkName\n                            \n                            \n                                createEffect\n                            \n                            \n                                isDefined\n                            \n                            \n                                removeEffect\n                            \n                            \n                                reset\n                            \n                            \n                                resetRemove\n                            \n                            \n                                updateEffect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkName\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEffect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDefined\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDefined(something: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        something\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveEffect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetRemove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateEffect(effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.01\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsCreatorArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsCreatorArray:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectStruct\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectStruct:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JSON:     \n\n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameChars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nameChars:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffect:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffectRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffectRemove:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validName:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EffectsService } from '../../services/effects.service';\nimport { FormBuilder, FormGroup, AbstractControl, Validators, ValidatorFn } from '@angular/forms';\n\n@Component({\n  selector: 'app-effects-creator',\n  templateUrl: './app-effects-creator.component.html',\n  styleUrls: ['./app-effects-creator.component.css']\n})\nexport class AppEffectsCreatorComponent implements OnInit {\n  effectsCreatorArray: any;\n  effects: any;\n  selectedEffect: string;\n  selectedEffectRemove: string;\n  effectStruct: any;\n  JSON = JSON;\n  config: FormGroup;\n  name = '';\n  nameChars = 5;\n  validName = false;\n  defaultStep = 0.01;\n  constructor(private effectServ: EffectsService, private builder: FormBuilder) {\n    this.effectsCreatorArray = this.effectServ.getEffectsCreator();\n    this.effects = this.effectServ.getEffects();\n  }\n  ngOnInit() { }\n  updateEffect(effect) {\n    this.effectStruct = JSON.parse(effect);\n    const config = {};\n    for (const actualConfig of this.effectStruct.configs) {\n      if (this.isDefined(actualConfig.min)) {\n        config[actualConfig.name] = [\n          actualConfig.default,\n          [\n            Validators.required,\n            Validators.min(actualConfig.min),\n            Validators.max(actualConfig.max),\n            stepValidator(actualConfig.step ? actualConfig.step : this.defaultStep)\n          ]\n        ];\n      }\n      if (this.isDefined(actualConfig.values)) {\n        config[actualConfig.name] = actualConfig.default;\n      }\n      if (this.isDefined(actualConfig.value)) {\n        config[actualConfig.name] = actualConfig.value;\n      }\n    }\n    this.config = this.builder.group(config);\n  }\n  reset() {\n    this.selectedEffect = null;\n    this.effectStruct = null;\n  }\n  resetRemove() {\n    this.selectedEffectRemove = null;\n  }\n  isDefined(something) {\n    return typeof something !== 'undefined';\n  }\n  createEffect() {\n    if (this.validName && this.config.valid) {\n      this.effectServ.addEffect({\n        name: this.name,\n        type: this.effectStruct.name,\n        active: false,\n        config: this.config.value\n      });\n      this.effects = this.effectServ.getEffects();\n      this.reset();\n    }\n  }\n  checkName() {\n    if (\n      !this.effects.find(\n        effect =>\n          effect.name\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '') ===\n          this.name\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n      ) &&\n      this.name.length >= this.nameChars\n    ) {\n      this.validName = true;\n    } else {\n      this.validName = false;\n    }\n  }\n  removeEffect() {\n    this.effectServ.removeEffect(this.selectedEffectRemove);\n    this.effects = this.effectServ.getEffects();\n    this.resetRemove();\n  }\n}\nfunction stepValidator(step: number): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    // decimalAdjust is needed because of js clunky floating point maths\n    const forbidden = decimalAdjust('round', control.value / step, -5) % 1 !== 0;\n    return forbidden ? { 'forbidden number step': { value: control.value } } : null;\n  };\n}\nfunction decimalAdjust(type, value, exp) {\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math[type](value);\n  }\n  value = +value;\n  exp = +exp;\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n  // Shift\n  value = value.toString().split('e');\n  value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp)));\n  // Shift back\n  value = value.toString().split('e');\n  return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));\n}\n\n    \n\n    \n        \n  \n    \n      Create effect\n      \n        {{effect.name}}\n      \n    \n  \n  \n    \n      {{effectStruct.name}}\n      {{effectStruct.description}}\n    \n    \n      Name:\n      \n    \n    \n      Configuration:\n    \n    \n      \n        \n          {{config.name}}:\n          \n            \n            \n              {{value}}\n            \n            {{config.value}}\n          \n        \n      \n    \n    Create\n  \n  \n    Remove effect\n    To remove effects you must have at least 6 effects\n    6\" [(ngModel)]=\"selectedEffectRemove\" style=\"width:250px\">\n      {{effect.name}}\n    \n    6\" style=\"width:250px\" (click)=\"removeEffect()\" [disabled]=\"\">Remove\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Create effect              {{effect.name}}                        {{effectStruct.name}}      {{effectStruct.description}}              Name:                    Configuration:                                {{config.name}}:                                                {{value}}                        {{config.value}}                                Create        Remove effect    To remove effects you must have at least 6 effects    6\" [(ngModel)]=\"selectedEffectRemove\" style=\"width:250px\">      {{effect.name}}        6\" style=\"width:250px\" (click)=\"removeEffect()\" [disabled]=\"\">Remove  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppEffectsCreatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppLayoutComponent.html":{"url":"components/AppLayoutComponent.html","title":"component - AppLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-layout/app-layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                app-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-layout.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-layout/app-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './app-layout.component.html',\n  styleUrls: ['./app-layout.component.css']\n})\nexport class AppLayoutComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppEffectsCreatorComponent\n\nAppEffectsCreatorComponent\n\nAppModule -->\n\nAppEffectsCreatorComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppAboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                AppDeckComponent\n                            \n                            \n                                AppEffectsCreatorComponent\n                            \n                            \n                                AppLayoutComponent\n                            \n                            \n                                AppMusicListComponent\n                            \n                            \n                                AppSearchComponent\n                            \n                            \n                                AppSettingsComponent\n                            \n                            \n                                AppTabsComponent\n                            \n                            \n                                AppVolumeComponent\n                            \n                            \n                                RouletteControllerComponent\n                            \n                            \n                                SliderControllerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppDeckComponent } from './components/app-deck/app-deck.component';\nimport { AppLayoutComponent } from './components/app-layout/app-layout.component';\nimport { AppVolumeComponent } from './components/app-volume/app-volume.component';\nimport { SliderControllerComponent } from './components/slider-controller/slider-controller.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouletteControllerComponent } from './components/roulette-controller/roulette-controller.component';\nimport { AppSearchComponent } from './components/app-search/app-search.component';\nimport { AppTabsComponent } from './components/app-tabs/app-tabs.component';\nimport { AppMusicListComponent } from './components/app-music-list/app-music-list.component';\nimport { AppSettingsComponent } from './components/app-settings/app-settings.component';\nimport { AppAboutComponent } from './components/app-about/app-about.component';\nimport { AppEffectsCreatorComponent } from './components/app-effects-creator/app-effects-creator.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppDeckComponent,\n    AppLayoutComponent,\n    AppVolumeComponent,\n    SliderControllerComponent,\n    RouletteControllerComponent,\n    AppSearchComponent,\n    AppTabsComponent,\n    AppMusicListComponent,\n    AppSettingsComponent,\n    AppAboutComponent,\n    AppEffectsCreatorComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppMusicListComponent.html":{"url":"components/AppMusicListComponent.html","title":"component - AppMusicListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppMusicListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-music-list/app-music-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music-list\n            \n\n            \n                styleUrls\n                app-music-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-music-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicList\n                            \n                            \n                                musicService\n                            \n                            \n                                query\n                            \n                            \n                                shownMusic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadOnDeck\n                            \n                            \n                                removeSong\n                            \n                            \n                                updateMusic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOnDeck\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadOnDeck(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeSong\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateMusic()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicList:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shownMusic:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-music-list',\n  templateUrl: './app-music-list.component.html',\n  styleUrls: ['./app-music-list.component.css']\n})\nexport class AppMusicListComponent implements OnDestroy {\n  musicService: MusicLoaderService;\n  private musicSubscription: Subscription;\n  musicList: File[];\n  shownMusic: File[];\n  query: string;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n    this.musicList = musicService.music;\n    this.updateMusic();\n    this.musicSubscription = musicService.music$.subscribe(a => {\n      this.musicList = a as File[];\n      this.updateMusic();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n\n  loadOnDeck(deck, song) {\n    this.musicService.load(deck, song);\n  }\n  removeSong(song) {\n    this.musicService.deleteSong(song);\n  }\n  updateMusic() {\n    if (!this.query) {\n      this.shownMusic = this.musicList;\n    } else {\n      const searchMusic = (searchQuery, music: any[]) => {\n        const lowSearch = searchQuery\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n        return music.filter(mus => {\n          return String(mus.name)\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .includes(lowSearch);\n        });\n      };\n      this.shownMusic = searchMusic(this.query, this.musicList);\n    }\n  }\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      \n        \n          Song\n          \n            \n            \n          \n        \n      \n      Artist -->\n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      {{song.name}}\n       -->\n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n    \n    \n      No songs match {{query}}\n    \n\n  \n  \n    \n    To start load music from the search or drag music here from your computer.\n  \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                                  Song                                                                Artist -->                                                                        {{song.name}}       -->                                                                                                                                          No songs match {{query}}                To start load music from the search or drag music here from your computer.    '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppMusicListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), FormsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSearchComponent.html":{"url":"components/AppSearchComponent.html","title":"component - AppSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-search/app-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                app-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChangeEvent\n                            \n                            \n                                recievedFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChangeEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChangeEvent(fileInput: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileInput\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n@Component({\n  selector: 'app-search',\n  templateUrl: './app-search.component.html',\n  styleUrls: ['./app-search.component.css']\n})\nexport class AppSearchComponent implements OnInit {\n  musicService: MusicLoaderService;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  ngOnInit() {}\n  fileChangeEvent(fileInput: any) {\n    this.recievedFiles(fileInput.target.files);\n  }\n\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n\n    \n    \n      \n      Choose a\n        file\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                          Choose a        file      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSettingsComponent.html":{"url":"components/AppSettingsComponent.html","title":"component - AppSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-settings/app-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                app-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableEffects\n                            \n                            \n                                effects\n                            \n                            \n                                effectsNum\n                            \n                            \n                                JSON\n                            \n                            \n                                selectedEffects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, playerServ: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-settings/app-settings.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerServ\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(i: , j: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        j\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [null, null] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JSON:     \n\n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EffectsService } from '../../services/effects.service';\nimport { PlayerService } from '../../services/player.service';\n@Component({\n  selector: 'app-settings',\n  templateUrl: './app-settings.component.html',\n  styleUrls: ['./app-settings.component.css']\n})\nexport class AppSettingsComponent implements OnInit {\n  constructor(private effectServ: EffectsService, private playerServ: PlayerService) {\n    this.effects = JSON.parse(JSON.stringify(this.playerServ.effects));\n    this.availableEffects = this.effectServ.getEffects();\n    this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n  }\n  JSON = JSON;\n  effectsNum = 6;\n  effects = [null, null] as any;\n  availableEffects: any;\n  selectedEffects: any;\n  ngOnInit() {\n    this.playerServ.effects$[0].subscribe(effects => {\n      this.effects[0] = JSON.parse(JSON.stringify(effects));\n      this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n    });\n    this.playerServ.effects$[1].subscribe(effects => {\n      this.effects[1] = JSON.parse(JSON.stringify(effects));\n      this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n    });\n  }\n  change(i, j) {\n    this.playerServ.saveEffects(\n      i,\n      j,\n      JSON.parse(JSON.stringify(this.availableEffects.find(a => Number(a.id) === Number(this.selectedEffects[i][j]))))\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Language\n\n      \n        Spanish\n        English\n      \n    \n    \n      Template\n      \n        Light\n        Dark\n      \n    \n  \n  \n    \n      Effects deck {{i+1}}\n      \n        \n          Effect {{j}}\n          \n            \n              {{availableEffect.name}}\n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Language              Spanish        English                    Template              Light        Dark                        Effects deck {{i+1}}                        Effect {{j}}                                    {{availableEffect.name}}                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppTabsComponent.html":{"url":"components/AppTabsComponent.html","title":"component - AppTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-tabs/app-tabs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                app-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                dragging\n                            \n                            \n                                maximized\n                            \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                droped\n                            \n                            \n                                maximize\n                            \n                            \n                                recievedFiles\n                            \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:dragleave\n                            \n                            \n                                window:dragover\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-tabs/app-tabs.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragleave\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:dragleave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:dragover(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            droped\n                            \n                            \n                        \n                    \n                \n                \n                    \ndroped(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maximize\n                            \n                            \n                        \n                    \n                \n                \n                    \nmaximize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActive(active: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'music'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragging\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dragging:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maximized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maximized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './app-tabs.component.html',\n  styleUrls: ['./app-tabs.component.css']\n})\nexport class AppTabsComponent {\n  active = 'music';\n  dragging = false;\n  maximized = false;\n  musicService: MusicLoaderService;\n  setActive(active) {\n    this.active = active;\n  }\n  maximize() {\n    this.maximized = !this.maximized;\n  }\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  droped(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.recievedFiles(event.dataTransfer.files);\n    this.dragging = false;\n  }\n  @HostListener('window:dragover', ['$event'])\n  onDragOver(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.dragging = true;\n  }\n  @HostListener('window:dragleave')\n  stopdrag() {\n    this.dragging = false;\n  }\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n        Music\n      \n      \n        Settings\n      \n      \n        Effects creator\n      \n      \n        About\n      \n      \n        \n        \n      \n    \n    \n      \n      \n      \n      \n    \n  \n  \n    Drop your song here\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Music                    Settings                    Effects creator                    About                                                                              Drop your song here  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppVolumeComponent.html":{"url":"components/AppVolumeComponent.html","title":"component - AppVolumeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppVolumeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-volume/app-volume.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volume\n            \n\n            \n                styleUrls\n                app-volume.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-volume.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bass0\n                            \n                            \n                                bass1\n                            \n                            \n                                mid0\n                            \n                            \n                                mid1\n                            \n                            \n                                trebble0\n                            \n                            \n                                trebble1\n                            \n                            \n                                volume0\n                            \n                            \n                                volume1\n                            \n                            \n                                volumeMaster\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeVolume\n                            \n                            \n                                setEQ\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-volume/app-volume.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeVolume(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEQ()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volumeMaster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volumeMaster:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PlayerService } from '../../services/player.service';\nimport { EffectsService } from '../../services/effects.service';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './app-volume.component.html',\n  styleUrls: ['./app-volume.component.css']\n})\nexport class AppVolumeComponent implements OnInit {\n  constructor(private effectServ: EffectsService, private playerService: PlayerService) {}\n  volume0 = 100;\n  volume1 = 100;\n  volumeMaster = 0;\n  bass0 = 0;\n  mid0 = 0;\n  trebble0 = 0;\n  bass1 = 0;\n  mid1 = 0;\n  trebble1 = 0;\n  changeVolume(deck) {\n    let masterMultiplier = 1;\n    if (deck === 0 && this.volumeMaster > 0) {\n      masterMultiplier = (100 - this.volumeMaster) / 100;\n    }\n    if (deck === 1 && this.volumeMaster \n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n      \n    \n    \n      \n\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppVolumeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EffectsService.html":{"url":"injectables/EffectsService.html","title":"injectable - EffectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EffectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/effects.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effects\n                            \n                            \n                                effectsCreator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEffect\n                            \n                            \n                                createEffects\n                            \n                            \n                                createEQ\n                            \n                            \n                                createEQEffect\n                            \n                            \n                                getEffects\n                            \n                            \n                                getEffectsCreator\n                            \n                            \n                                removeEffect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/effects.service.ts:384\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \naddEffect(effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEffects(ac: , effects: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:242\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ac\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        effects\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEQ(bass0: , mid0: , trebble0: , bass1: , mid1: , trebble1: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:251\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bass0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mid0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trebble0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bass1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mid1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trebble1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEQEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEQEffect(deck: , eq: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:366\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        eq\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEffectsCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEffectsCreator()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveEffect(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:238\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      id: 1,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      id: 2,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      id: 3,\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      id: 4,\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      id: 0,\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      id: 5,\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsCreator:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Chorus',\n      effect: 'Chorus',\n      description: 'A basic chorus effect.',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'delay', min: 0, max: 1, default: 0.0045, step: 0.0001 },\n        { name: 'bypass', values: [0, 1], default: 0 }\n      ]\n    },\n    {\n      description: 'A delay effect with feedback and a lowpass filter applied to the delayed signal.',\n      name: 'Delay',\n      effect: 'Delay',\n\n      configs: [\n        { name: 'feedback', min: 0, max: 1, default: 0.45 },\n        { name: 'delayTime', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'wetLevel', min: 0, max: 1, default: 0.25 },\n        { name: 'dryLevel', min: 0, max: 1, default: 1 },\n        { name: 'cutoff', min: 20, max: 22050, default: 2000 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic phaser effect.',\n      name: 'Phaser',\n      effect: 'Phaser',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.2 },\n        { name: 'depth', min: 0, max: 1, default: 0.3 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 30, step: 1 },\n        { name: 'baseModulationFrequency', min: 500, max: 1500, default: 700, step: 1 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic overdrive effect.',\n      name: 'Overdrive',\n      effect: 'Overdrive',\n      configs: [\n        { name: 'outputGain', min: 0, max: 1, default: 0.5 },\n        { name: 'drive', min: 0, max: 1, default: 0.7 },\n        { name: 'curveAmount', min: 0, max: 1, default: 1 },\n        { name: 'algorithmIndex', values: [0, 1, 2, 3, 4, 5], default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A compressor with the option to use automatic makeup gain.',\n      name: 'Compressor',\n      effect: 'Compressor',\n      configs: [\n        { name: 'threshold', min: -100, max: 0, default: -1 },\n        { name: 'makeupGain', min: 0, max: 50, default: 1 },\n        { name: 'attack', min: 0, max: 1000, default: 1 },\n        { name: 'release', min: 0, max: 3000, default: 0 },\n        { name: 'ratio', min: 1, max: 20, default: 4 },\n        { name: 'knee', min: 0, max: 40, default: 5 },\n        { name: 'automakeup', values: [true, false], default: true },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic filter.',\n      name: 'Filter',\n      effect: 'Filter',\n      configs: [\n        { name: 'frequency', min: 20, max: 22050, default: 440, step: 1 },\n        { name: 'Q', min: 0.001, max: 100, default: 1 },\n        { name: 'gain', min: -40, max: 40, default: 0 },\n        {\n          name: 'filterType',\n          values: ['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch', 'allpass'],\n          default: 'lowpass'\n        },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic tremolo.',\n      name: 'Tremolo',\n      effect: 'Tremolo',\n      configs: [\n        { name: 'intensity', min: 0, max: 1, default: 0.3 },\n        { name: 'rate', min: 0.001, max: 8, default: 4 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A wahwah with an auto wah option.',\n      name: 'WahWah',\n      effect: 'WahWah',\n      configs: [\n        { name: 'automode', values: [true, false], default: true },\n        { name: 'baseFrequency', min: 0, max: 1, default: 0.5 },\n        { name: 'excursionOctaves', min: 1, max: 6, default: 2, step: 1 },\n        { name: 'sweep', min: 0, max: 1, default: 0.2 },\n        { name: 'resonance', min: 1, max: 100, default: 10 },\n        { name: 'sensitivity', min: -1, max: 1, default: 0.5 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A lo- fi bitcrusher effect.',\n      name: 'Bitcrusher',\n      effect: 'Bitcrusher',\n      configs: [\n        { name: 'bits', min: 1, max: 16, default: 4 },\n        { name: 'normfreq', min: 0, max: 1, default: 0.1 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A resonant, analog- sounding filter.',\n      name: 'MoogFilter',\n      effect: 'MoogFilter',\n      configs: [\n        { name: 'cutoff', min: 0, max: 1, default: 0.065, step: 0.001 },\n        { name: 'resonance', min: 0, max: 4, default: 3.5 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A delay that bounces between the left and right channel.',\n      name: 'Ping Pong Delay',\n      effect: 'PingPongDelay',\n      configs: [\n        { name: 'wetLevel', min: 0, max: 1, default: 0.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.3 },\n        { name: 'delayTimeLeft', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'delayTimeRight', min: 1, max: 10000, default: 200, step: 1 }\n      ]\n    },\n    {\n      description: 'A basic gain.',\n      name: 'Gain',\n      effect: 'Gain',\n      configs: [{ name: 'gain', min: 0, max: 40 }]\n    },\n    {\n      description: 'A stereo panner (-1 is left, 1 is right). May not work in Safari and IE.',\n      name: 'Panner',\n      effect: 'Panner',\n      configs: [{ name: 'pan', min: -1, max: 1, default: 0 }]\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:75\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Tuna from 'tunajs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EffectsService {\n  effects = [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      id: 1,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      id: 2,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      id: 3,\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      id: 4,\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      id: 0,\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      id: 5,\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ];\n  effectsCreator = [\n    {\n      name: 'Chorus',\n      effect: 'Chorus',\n      description: 'A basic chorus effect.',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'delay', min: 0, max: 1, default: 0.0045, step: 0.0001 },\n        { name: 'bypass', values: [0, 1], default: 0 }\n      ]\n    },\n    {\n      description: 'A delay effect with feedback and a lowpass filter applied to the delayed signal.',\n      name: 'Delay',\n      effect: 'Delay',\n\n      configs: [\n        { name: 'feedback', min: 0, max: 1, default: 0.45 },\n        { name: 'delayTime', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'wetLevel', min: 0, max: 1, default: 0.25 },\n        { name: 'dryLevel', min: 0, max: 1, default: 1 },\n        { name: 'cutoff', min: 20, max: 22050, default: 2000 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic phaser effect.',\n      name: 'Phaser',\n      effect: 'Phaser',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.2 },\n        { name: 'depth', min: 0, max: 1, default: 0.3 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 30, step: 1 },\n        { name: 'baseModulationFrequency', min: 500, max: 1500, default: 700, step: 1 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic overdrive effect.',\n      name: 'Overdrive',\n      effect: 'Overdrive',\n      configs: [\n        { name: 'outputGain', min: 0, max: 1, default: 0.5 },\n        { name: 'drive', min: 0, max: 1, default: 0.7 },\n        { name: 'curveAmount', min: 0, max: 1, default: 1 },\n        { name: 'algorithmIndex', values: [0, 1, 2, 3, 4, 5], default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A compressor with the option to use automatic makeup gain.',\n      name: 'Compressor',\n      effect: 'Compressor',\n      configs: [\n        { name: 'threshold', min: -100, max: 0, default: -1 },\n        { name: 'makeupGain', min: 0, max: 50, default: 1 },\n        { name: 'attack', min: 0, max: 1000, default: 1 },\n        { name: 'release', min: 0, max: 3000, default: 0 },\n        { name: 'ratio', min: 1, max: 20, default: 4 },\n        { name: 'knee', min: 0, max: 40, default: 5 },\n        { name: 'automakeup', values: [true, false], default: true },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic filter.',\n      name: 'Filter',\n      effect: 'Filter',\n      configs: [\n        { name: 'frequency', min: 20, max: 22050, default: 440, step: 1 },\n        { name: 'Q', min: 0.001, max: 100, default: 1 },\n        { name: 'gain', min: -40, max: 40, default: 0 },\n        {\n          name: 'filterType',\n          values: ['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch', 'allpass'],\n          default: 'lowpass'\n        },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic tremolo.',\n      name: 'Tremolo',\n      effect: 'Tremolo',\n      configs: [\n        { name: 'intensity', min: 0, max: 1, default: 0.3 },\n        { name: 'rate', min: 0.001, max: 8, default: 4 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A wahwah with an auto wah option.',\n      name: 'WahWah',\n      effect: 'WahWah',\n      configs: [\n        { name: 'automode', values: [true, false], default: true },\n        { name: 'baseFrequency', min: 0, max: 1, default: 0.5 },\n        { name: 'excursionOctaves', min: 1, max: 6, default: 2, step: 1 },\n        { name: 'sweep', min: 0, max: 1, default: 0.2 },\n        { name: 'resonance', min: 1, max: 100, default: 10 },\n        { name: 'sensitivity', min: -1, max: 1, default: 0.5 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A lo- fi bitcrusher effect.',\n      name: 'Bitcrusher',\n      effect: 'Bitcrusher',\n      configs: [\n        { name: 'bits', min: 1, max: 16, default: 4 },\n        { name: 'normfreq', min: 0, max: 1, default: 0.1 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A resonant, analog- sounding filter.',\n      name: 'MoogFilter',\n      effect: 'MoogFilter',\n      configs: [\n        { name: 'cutoff', min: 0, max: 1, default: 0.065, step: 0.001 },\n        { name: 'resonance', min: 0, max: 4, default: 3.5 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A delay that bounces between the left and right channel.',\n      name: 'Ping Pong Delay',\n      effect: 'PingPongDelay',\n      configs: [\n        { name: 'wetLevel', min: 0, max: 1, default: 0.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.3 },\n        { name: 'delayTimeLeft', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'delayTimeRight', min: 1, max: 10000, default: 200, step: 1 }\n      ]\n    },\n    {\n      description: 'A basic gain.',\n      name: 'Gain',\n      effect: 'Gain',\n      configs: [{ name: 'gain', min: 0, max: 40 }]\n    },\n    {\n      description: 'A stereo panner (-1 is left, 1 is right). May not work in Safari and IE.',\n      name: 'Panner',\n      effect: 'Panner',\n      configs: [{ name: 'pan', min: -1, max: 1, default: 0 }]\n    }\n  ];\n  getEffects() {\n    return JSON.parse(JSON.stringify(this.effects));\n  }\n  getEffectsCreator() {\n    return JSON.parse(JSON.stringify(this.effectsCreator));\n  }\n  addEffect(effect) {\n    effect.id = this.effects.reduce((valorAnterior, valorActual) => Math.max(valorAnterior, valorActual.id), 0) + 1;\n    this.effects.push(effect);\n    localStorage.setItem('effects', JSON.stringify(this.effects));\n  }\n\n  removeEffect(id) {\n    this.effects = this.effects.filter(effect => effect.id !== Number(id));\n    localStorage.setItem('effects', JSON.stringify(this.effects));\n  }\n  createEffects(ac, effects) {\n    const tuna = new Tuna(ac);\n    const preparedEffects = [];\n    for (const effect of effects) {\n      preparedEffects.push(new tuna[effect.type](effect.config));\n    }\n    return preparedEffects;\n  }\n  // Advanced volume\n  createEQ(bass0, mid0, trebble0, bass1, mid1, trebble1) {\n    const adjustEQValue = value => {\n      if (value > 0) {\n        return value / 5;\n      }\n      return value;\n    };\n    const EQ = [\n      [\n        {\n          f: 32,\n          type: 'lowshelf',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 64,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 125,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 250,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 500,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * bass0 + 0.25 * mid0)\n        },\n        {\n          f: 1000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid0 + 0.25 * bass0)\n        },\n        {\n          f: 2000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid0 + 0.25 * trebble0)\n        },\n        {\n          f: 4000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * trebble0 + 0.25 * mid0)\n        },\n        {\n          f: 8000,\n          type: 'peaking',\n          value: adjustEQValue(trebble0)\n        },\n        {\n          f: 16000,\n          type: 'highshelf',\n          value: adjustEQValue(trebble0)\n        }\n      ],\n      [\n        {\n          f: 32,\n          type: 'lowshelf',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 64,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 125,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 250,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 500,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * bass1 + 0.25 * mid1)\n        },\n        {\n          f: 1000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid1 + 0.25 * bass1)\n        },\n        {\n          f: 2000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid1 + 0.25 * trebble1)\n        },\n        {\n          f: 4000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * trebble1 + 0.25 * mid1)\n        },\n        {\n          f: 8000,\n          type: 'peaking',\n          value: adjustEQValue(trebble1)\n        },\n        {\n          f: 16000,\n          type: 'highshelf',\n          value: adjustEQValue(trebble1)\n        }\n      ]\n    ];\n    return EQ;\n  }\n  createEQEffect(deck, eq) {\n    const filter0 = eq[0].map(band => {\n      const filter = deck[0].backend.ac.createBiquadFilter();\n      filter.type = band.type;\n      filter.gain.value = band.value;\n      filter.Q.value = 1;\n      filter.frequency.value = band.f;\n      return filter;\n    });\n    const filter1 = eq[1].map(band => {\n      const filter = deck[1].backend.ac.createBiquadFilter();\n      filter.type = band.type;\n      filter.gain.value = band.value;\n      filter.Q.value = 1;\n      filter.frequency.value = band.f;\n      return filter;\n    });\n    return [filter0, filter1];\n  }\n  constructor() {\n    if (localStorage.getItem('effects')) {\n      this.effects = JSON.parse(localStorage.getItem('effects'));\n    } else {\n      localStorage.setItem('effects', JSON.stringify(this.effects));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicLoaderService.html":{"url":"injectables/MusicLoaderService.html","title":"injectable - MusicLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MusicLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/music-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deckLoader\n                            \n                            \n                                decksongs\n                            \n                            \n                                decksongs$\n                            \n                            \n                                music\n                            \n                            \n                                music$\n                            \n                            \n                                musicLoader\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSong\n                            \n                            \n                                deleteSong\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSong\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSong(song: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSong\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.musicLoader.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicLoader:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PlayerService } from './player.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicLoaderService {\n  musicLoader = new Subject();\n  music$ = this.musicLoader.asObservable();\n  music: File[] = [];\n  deckLoader = [new Subject(), new Subject()];\n  decksongs$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  decksongs: File[] = [null, null];\n  playerService: PlayerService;\n  constructor(playerService: PlayerService) {\n    this.playerService = playerService;\n  }\n  load(deck, song) {\n    this.decksongs[deck] = song;\n    this.deckLoader[deck].next(this.decksongs[deck]);\n    requestAnimationFrame(() => {\n      const reader = new FileReader();\n      reader.readAsDataURL(song);\n      reader.onload = () => {\n        this.playerService.load(deck, reader.result);\n      };\n      reader.onerror = error => {\n        console.log('Error: ', error);\n      };\n    });\n  }\n  addSong(song: File) {\n    this.music.push(song);\n    this.musicLoader.next(this.music);\n  }\n  deleteSong(song) {\n    this.music.splice(this.music.indexOf(song), 1);\n    this.musicLoader.next(this.music);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/player.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeEffects\n                            \n                            \n                                deck\n                            \n                            \n                                deck$\n                            \n                            \n                                deckLoader\n                            \n                            \n                                deckNum\n                            \n                            \n                                effectLoader\n                            \n                            \n                                effects\n                            \n                            \n                                effects$\n                            \n                            \n                                effectsNum\n                            \n                            \n                                eq\n                            \n                            \n                                eqEffect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateEffect\n                            \n                            \n                                applyEffects\n                            \n                            \n                                equalizer\n                            \n                            \n                                isPlaying\n                            \n                            \n                                load\n                            \n                            \n                                on\n                            \n                            \n                                playPause\n                            \n                            \n                                save\n                            \n                            \n                                saveEffects\n                            \n                            \n                                saveEQ\n                            \n                            \n                                setVolume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activateEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivateEffect(deck: , i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equalizer\n                            \n                            \n                        \n                    \n                \n                \n                    \nequalizer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPlaying(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            on\n                            \n                            \n                        \n                    \n                \n                \n                    \non(deck: , event: , callback: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(deck: , wavesurfer: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        wavesurfer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEffects(deck: , i: , effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEQ(eq: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eq\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetVolume(deck: , volume: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        volume\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeEffects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[], []]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[null, null, null, null, null, null], [null, null, null, null, null, null]]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.effectLoader[0].asObservable(), this.effectLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eq\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eq:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eqEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eqEffect:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport Tuna from 'tunajs';\nimport { EffectsService } from './effects.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  deckLoader = [new Subject(), new Subject()];\n  deck$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  effectLoader = [new Subject(), new Subject()];\n  effects$ = [this.effectLoader[0].asObservable(), this.effectLoader[1].asObservable()];\n  deck: any[] = [null, null];\n  eq = [null, null];\n  eqEffect: any;\n  effectsNum = 6;\n  deckNum = 2;\n  effects = [[null, null, null, null, null, null], [null, null, null, null, null, null]];\n  activeEffects = [[], []];\n  constructor(private effectServ: EffectsService) {\n    for (let i = 0; i  a.active);\n    this.activeEffects[deck] = this.effectServ.createEffects(this.deck[deck].backend.ac, effects);\n    this.applyEffects();\n    this.effectLoader[deck].next(this.effects[deck]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouletteControllerComponent.html":{"url":"components/RouletteControllerComponent.html","title":"component - RouletteControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouletteControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/roulette-controller/roulette-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                roulette-controller\n            \n\n            \n                styleUrls\n                roulette-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./roulette-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSlider\n                            \n                            \n                                folded\n                            \n                            \n                                rotation\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                rotate\n                            \n                            \n                                unfold\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/roulette-controller/roulette-controller.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:66\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unfold\n                            \n                            \n                        \n                    \n                \n                \n                    \nunfold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSlider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSlider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folded:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RouletteControllerComponent),\n  multi: true\n};\n@Component({\n  selector: 'roulette-controller',\n  templateUrl: './roulette-controller.component.html',\n  styleUrls: ['./roulette-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class RouletteControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  folded = true;\n  value = 0;\n  configSlider: any;\n  rotation: number;\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.configSlider = {\n      id: this.config.id + 'slider',\n      min: this.config.min || 0,\n      max: this.config.max || 100,\n      default: this.value,\n      thumb: 'roulette-slider-thumb',\n      track: 'roulette-slider-track',\n      vertical: true,\n      fill: true\n    };\n    this.rotate();\n  }\n\n  rotate() {\n    const percent = (this.value - this.configSlider.min) / (this.configSlider.max - this.configSlider.min);\n    this.rotation = 135 * 2 * (percent - 0.5);\n    this.onChangeCallback(this.value);\n  }\n  unfold() {\n    this.folded = !this.folded;\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.value = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  @HostListener('document:click', ['$event'])\n  private onDocumentClick(event: MouseEvent) {\n    const closest = (el, selector) => {\n      const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\n      while (el) {\n        if (matchesSelector.call(el, selector)) {\n          break;\n        }\n        el = el.parentElement;\n      }\n      return el;\n    };\n    const ele = event.target as Element;\n    if (!closest(ele, '#' + this.config.id + '_container')) {\n      this.folded = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouletteControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderControllerComponent.html":{"url":"components/SliderControllerComponent.html","title":"component - SliderControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/slider-controller/slider-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                slider-controller\n            \n\n            \n                styleUrls\n                slider-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./slider-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fillsize\n                            \n                            \n                                shell\n                            \n                            \n                                shellView\n                            \n                            \n                                slider\n                            \n                            \n                                zindex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbWidth\n                                \n                                \n                                    thumbHeight\n                                \n                                \n                                    thumbTop\n                                \n                                \n                                    thumbLeft\n                                \n                                \n                                    fillWidth\n                                \n                                \n                                    fillHeight\n                                \n                                \n                                    fillTop\n                                \n                                \n                                    fillLeft\n                                \n                                \n                                    trackWidth\n                                \n                                \n                                    trackHeight\n                                \n                                \n                                    trackTop\n                                \n                                \n                                    trackLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:216\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:221\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillsize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillsize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shell\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shell:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shellView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shellView:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zindex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zindex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thumbWidth\n                    \n                \n\n                \n                    \n                        getthumbWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbHeight\n                    \n                \n\n                \n                    \n                        getthumbHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbTop\n                    \n                \n\n                \n                    \n                        getthumbTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbLeft\n                    \n                \n\n                \n                    \n                        getthumbLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillWidth\n                    \n                \n\n                \n                    \n                        getfillWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:89\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillHeight\n                    \n                \n\n                \n                    \n                        getfillHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillTop\n                    \n                \n\n                \n                    \n                        getfillTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:123\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillLeft\n                    \n                \n\n                \n                    \n                        getfillLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:146\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackWidth\n                    \n                \n\n                \n                    \n                        gettrackWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackHeight\n                    \n                \n\n                \n                    \n                        gettrackHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackTop\n                    \n                \n\n                \n                    \n                        gettrackTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:185\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackLeft\n                    \n                \n\n                \n                    \n                        gettrackLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:196\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, ViewChild, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SliderControllerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'slider-controller',\n  templateUrl: './slider-controller.component.html',\n  styleUrls: ['./slider-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class SliderControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  @ViewChild('sliderShell')\n  shellView: ElementRef;\n  shell: HTMLElement;\n  slider: any;\n  fillsize = 16;\n  zindex = 0;\n\n  get thumbWidth(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    if (vertical) {\n      return smallval;\n    } else {\n      return smallval / 2.5;\n    }\n  }\n  get thumbHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      if (!vertical) {\n        return smallval;\n      } else {\n        return smallval / 2.5;\n      }\n    } else {\n      return null;\n    }\n  }\n  get thumbTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? loc : 0;\n    } else {\n      return null;\n    }\n  }\n  get thumbLeft(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? 0 : loc;\n    } else {\n      return null;\n    }\n  }\n\n  get fillWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get fillHeight(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return Math.max(0, vertical ? bigval - filloffset - fillsize - loc : fillsize);\n    } else {\n      return null;\n    }\n  }\n  get fillTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n\n      /* Fill */\n\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return vertical ? loc + thumbsize : filloffset;\n    } else {\n      return null;\n    }\n  }\n  get fillLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  get trackWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return bigval - thumbsize * 1.25;\n    } else {\n      return null;\n    }\n  }\n  get trackTop(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  ngOnInit() {\n    this.shell = this.shellView.nativeElement;\n    this.zindex = this.config.zindex || 0;\n  }\n\n  setValue() {\n    this.onChangeCallback(this.slider);\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.slider = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n\n    \n\n    \n        \n\t\n\t\n\t\n\t\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            tunajs : ^1.0.2\n        \n            wavesurfer.js : ^2.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            decimalAdjust   (src/.../app-effects-creator.component.ts)\n                        \n                        \n                            stepValidator   (src/.../app-effects-creator.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/app-effects-creator/app-effects-creator.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            decimalAdjust\n                            \n                            \n                        \n                    \n                \n                \n                    \ndecimalAdjust(type: , value: , exp: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        exp\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepValidator(step: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        step\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTFG\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun npm test to execute the unit tests via jest.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nDocumentation\nTo access the compodoc generated documentation go to https://clm2609.gitlab.io/tfg\nWebApp\nTo see the latest stage state of the app go to http://virtualdj-stage.surge.sh/\nTo see the latest production state of the app go to http://virtualdj.surge.sh/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppEffectsCreatorComponent\n\nAppEffectsCreatorComponent\n\nAppModule -->\n\nAppEffectsCreatorComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
