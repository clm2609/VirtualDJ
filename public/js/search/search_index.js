var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppAboutComponent.html",[0,0.092,1,0.448]],["body/components/AppAboutComponent.html",[0,0.17,1,0.823,2,0.342,3,0.273,4,0.858,5,0.273,6,1.361,7,3.724,8,3.647,9,1.526,10,1.486,11,0.858,12,1.369,13,1.064,14,1.074,15,4.565,16,1.074,17,4.565,18,0.906,19,0.575,20,3.647,21,0.342,22,0.044,23,0.273,24,0.273,25,0.342,26,1.53,27,4.565,28,4.565,29,5.485,30,5.485,31,4.565,32,5.485,33,5.485,34,5.485,35,5.485,36,4.565,37,4.565,38,1.229,39,0.858,40,0.429,41,0.858,42,0.575,43,0.858,44,0.575,45,0.858,46,0.575,47,0.493,48,0.858,49,0.575,50,0.858,51,0.575,52,0.663,53,0.858,54,0.575,55,0.858,56,0.575,57,0.858,58,0.575,59,0.858,60,0.575,61,0.858,62,0.575,63,0.858,64,0.858,65,0.575,66,0.858,67,0.858,68,0.858,69,0.858,70,0.035,71,0.035]],["title/components/AppComponent.html",[0,0.092,42,0.448]],["body/components/AppComponent.html",[0,0.175,1,0.627,2,0.373,3,0.298,4,0.936,5,0.298,11,0.936,12,1.382,13,1.061,14,1.133,16,1.133,21,0.373,22,0.045,23,0.298,24,0.298,25,0.373,38,1.266,39,0.936,40,0.452,41,0.936,42,0.849,43,0.936,44,0.627,45,0.936,46,0.627,47,0.537,48,0.936,49,0.627,50,0.936,51,0.627,52,0.723,53,0.936,54,0.627,55,0.936,56,0.627,57,0.936,58,0.627,59,0.936,60,0.627,61,0.936,62,0.627,63,0.936,64,0.936,65,0.627,66,0.936,67,0.936,68,0.936,69,0.936,70,0.037,71,0.037,72,3.977,73,2.558,74,4.815,75,4.815]],["title/components/AppDeckComponent.html",[0,0.092,44,0.448]],["body/components/AppDeckComponent.html",[0,0.139,1,0.358,2,0.213,3,0.17,4,0.533,5,0.248,6,1.654,9,1.105,10,1.163,11,0.533,12,1.281,13,1.003,14,0.778,16,0.778,18,0.412,19,0.87,21,0.447,22,0.046,23,0.17,24,0.17,25,0.213,26,0.951,38,1.009,39,0.533,40,0.428,41,0.533,42,0.358,43,0.533,44,0.676,45,0.533,46,0.358,47,0.681,48,0.533,49,0.358,50,0.533,51,0.358,52,0.412,53,0.533,54,0.358,55,0.533,56,0.358,57,0.533,58,0.358,59,0.533,60,0.358,61,0.533,62,0.358,63,0.533,64,0.533,65,0.358,66,0.533,67,0.533,68,0.533,69,0.533,70,0.025,71,0.025,76,4.526,77,2.267,78,3.183,79,3.183,80,1.799,81,3.306,82,3.306,83,0.306,84,0.601,85,5.347,86,4.759,87,4.108,88,2.279,89,0.686,90,4.288,91,2.697,92,4.288,93,3.498,94,4.288,95,4.288,96,4.288,97,3.306,98,2.978,99,3.902,100,1.205,101,1.799,102,2.315,103,3.306,104,0.615,105,0.75,106,0.615,107,1.757,108,1.591,109,2.267,110,2.267,111,1.066,112,1.097,113,3.306,114,2.267,115,2.267,116,2.267,117,2.267,118,2.267,119,2.267,120,2.267,121,3.306,122,2.267,123,1.009,124,0.89,125,2.267,126,1.419,127,2.267,128,2.267,129,2.267,130,1.205,131,1.205,132,1.575,133,2.697,134,1.068,135,1.85,136,1.85,137,2.267,138,2.267,139,1.637,140,1.575,141,1.369,142,1.996,143,1.369,144,2.267,145,3.498,146,1.85,147,2.267,148,1.524,149,2.267,150,1.369,151,2.267,152,1.558,153,2.267,154,3.166,155,2.267,156,4.559,157,2.267,158,1.85,159,2.267,160,2.267,161,2.267,162,2.267,163,2.267,164,2.267,165,2.267,166,2.267,167,2.267,168,2.267,169,2.267,170,2.267,171,2.267,172,1.782,173,2.267,174,2.267,175,3.306,176,2.267,177,2.267,178,2.267,179,2.267,180,2.267,181,1.85,182,2.267,183,2.267,184,2.267,185,3.306,186,1.85,187,2.267,188,2.267,189,2.267,190,2.267,191,3.183,192,1.85,193,2.752,194,3.902,195,2.267,196,1.85,197,1.85,198,2.267,199,2.267,200,2.267,201,3.306,202,2.267,203,2.267,204,2.267,205,3.306,206,3.306,207,2.267,208,2.267,209,3.166,210,2.267,211,2.267,212,2.267,213,2.267,214,2.267,215,2.697,216,2.697,217,3.306,218,3.306,219,3.306,220,3.306,221,3.306,222,1.799,223,3.498,224,1.996,225,2.296,226,1.757]],["title/components/AppEffectsCreatorComponent.html",[0,0.092,46,0.448]],["body/components/AppEffectsCreatorComponent.html",[0,0.133,1,0.325,2,0.194,3,0.155,4,0.485,5,0.155,6,1.657,9,1.031,10,1.101,11,0.485,12,1.259,13,0.988,14,0.725,16,0.725,18,0.375,19,0.872,21,0.347,22,0.046,23,0.155,24,0.155,25,0.194,26,0.866,38,0.964,39,0.485,40,0.492,41,0.485,42,0.325,43,0.485,44,0.325,45,0.485,46,0.646,47,0.799,48,0.485,49,0.325,50,0.485,51,0.325,52,0.375,53,0.485,54,0.325,55,0.485,56,0.325,57,0.485,58,0.325,59,0.485,60,0.325,61,0.485,62,0.325,63,0.485,64,0.485,65,0.325,66,0.485,67,0.725,68,0.485,69,0.485,70,0.023,71,0.023,83,0.279,84,0.56,89,0.64,104,0.582,105,0.817,106,0.582,108,1.594,111,1.1,112,0.955,123,1.032,124,1.111,126,1.101,139,0.866,141,1.246,142,2.473,143,1.246,148,1.234,150,2.229,152,0.972,172,1.154,224,2.473,225,2.564,226,2.444,227,3.858,228,1.683,229,2.515,230,3.083,231,3.083,232,2.777,233,4.096,234,4.096,235,4.096,236,3.752,237,4.096,238,3.342,239,4.096,240,4.096,241,4.096,242,3.342,243,3.083,244,3.342,245,4.096,246,3.083,247,1.433,248,1.93,249,3.692,250,4.096,251,3.083,252,1.862,253,2.063,254,2.063,255,3.083,256,2.063,257,3.083,258,2.063,259,2.063,260,2.063,261,2.063,262,3.083,263,2.063,264,4.096,265,2.063,266,2.515,267,2.063,268,2.063,269,2.063,270,2.063,271,3.025,272,2.063,273,2.063,274,2.063,275,2.063,276,2.063,277,1.433,278,3.083,279,2.063,280,3.083,281,0.972,282,2.063,283,2.063,284,3.012,285,3.083,286,2.063,287,2.063,288,2.063,289,2.063,290,3.692,291,3.083,292,2.063,293,2.063,294,2.063,295,2.063,296,2.063,297,2.063,298,3.083,299,2.063,300,2.063,301,2.063,302,1.683,303,1.465,304,2.063,305,2.564,306,1.862,307,3.692,308,2.063,309,2.063,310,3.083,311,2.063,312,2.063,313,2.063,314,2.063,315,4.384,316,2.515,317,2.515,318,2.515,319,2.515,320,2.063,321,2.063,322,2.063,323,2.063,324,2.141,325,1.683,326,2.063,327,1.683,328,2.063,329,1.683,330,2.063,331,2.063,332,2.063,333,2.063,334,3.692,335,2.063,336,3.083,337,2.141,338,1.683,339,4.225,340,2.063,341,2.063,342,2.063,343,3.083,344,3.083,345,2.063,346,3.083,347,4.096,348,2.063,349,2.063,350,4.096,351,3.083,352,3.083,353,3.083,354,3.083,355,3.083,356,4.096,357,3.083,358,4.096,359,3.083,360,3.083]],["title/components/AppLayoutComponent.html",[0,0.092,49,0.448]],["body/components/AppLayoutComponent.html",[0,0.164,1,0.522,2,0.311,3,0.248,4,0.779,5,0.248,6,1.557,10,0.988,11,0.779,12,1.354,13,1.053,14,1.01,16,1.01,18,0.602,19,0.795,21,0.403,22,0.045,23,0.248,24,0.248,25,0.311,38,1.186,39,0.779,40,0.447,41,0.779,42,0.522,43,0.779,44,0.522,45,0.779,46,0.522,47,0.448,48,0.779,49,0.795,50,0.779,51,0.522,52,0.602,53,0.779,54,0.522,55,0.779,56,0.522,57,0.779,58,0.522,59,0.779,60,0.522,61,0.779,62,0.522,63,0.779,64,0.779,65,0.522,66,0.779,67,0.779,68,0.779,69,0.779,70,0.033,71,0.033,83,0.448,84,0.78,104,0.522,105,0.751,106,0.522,108,1.788,123,0.779,124,0.989,154,3.833,172,1.24,303,1.435,361,4.259,362,3.313,363,4.294,364,4.294,365,4.294,366,4.502,367,5.35,368,4.294,369,3.152,370,4.294,371,3.313,372,3.313,373,2.702,374,4.764,375,3.313,376,4.764,377,3.313,378,3.313,379,4.294,380,3.313,381,4.294,382,4.294,383,4.294,384,3.503,385,4.294,386,3.503,387,4.294,388,4.294,389,4.294,390,3.503,391,4.294,392,4.294]],["title/modules/AppModule.html",[393,1.193,394,1.717]],["body/modules/AppModule.html",[1,0.837,2,0.303,3,0.242,5,0.242,7,2.631,13,0.586,21,0.547,22,0.046,23,0.242,24,0.316,25,0.303,42,0.895,44,0.837,46,0.837,47,0.57,49,0.837,51,0.837,52,0.767,54,0.837,56,0.837,58,0.837,60,0.837,62,0.837,65,0.837,70,0.032,71,0.032,76,2.631,224,1.947,227,2.24,281,1.988,361,2.631,393,1.77,394,3.58,395,1.947,396,2.631,397,3.836,398,3.836,399,2.548,400,2.631,401,2.631,402,2.631,403,2.631,404,2.822,405,3.442,406,2.24,407,3.225,408,4.22,409,2.631,410,2.24,411,3.442,412,3.225,413,3.225,414,5.55,415,3.225,416,3.225,417,2.631,418,3.225,419,3.225,420,2.631,421,4.22,422,3.442,423,3.225,424,2.631,425,2.631,426,3.225,427,2.631,428,3.225,429,2.631,430,3.225,431,2.631,432,3.225,433,3.225,434,3.225,435,4.22]],["title/components/AppMusicListComponent.html",[0,0.092,51,0.448]],["body/components/AppMusicListComponent.html",[0,0.154,1,0.449,2,0.267,3,0.213,4,0.67,5,0.4,6,1.614,9,1.298,10,0.849,11,0.67,12,1.327,13,1.035,14,0.913,16,0.913,18,0.517,19,0.842,21,0.415,22,0.046,23,0.213,24,0.213,25,0.267,38,1.116,39,0.67,40,0.466,41,0.67,42,0.449,43,0.67,44,0.449,45,0.67,46,0.449,47,0.385,48,0.67,49,0.449,50,0.67,51,0.748,52,1.068,53,0.67,54,0.449,55,0.67,56,0.449,57,0.67,58,0.449,59,0.67,60,0.449,61,0.67,62,0.449,63,0.67,64,0.67,65,0.449,66,0.67,67,0.67,68,0.67,69,0.67,70,0.029,71,0.036,79,3.604,80,1.194,83,0.385,84,0.706,88,2.876,89,0.806,100,2.063,101,2.2,104,0.697,105,0.783,106,0.697,107,2.723,111,1.03,112,0.985,126,1.158,130,1.513,131,1.513,133,3.167,134,1.341,139,1.194,140,1.977,148,1.298,186,2.323,196,2.323,197,2.323,216,3.167,271,2.667,316,3.167,317,3.167,318,3.167,319,3.167,429,4.415,436,2.847,437,3.882,438,3.882,439,3.882,440,4.745,441,5.124,442,4.745,443,3.882,444,3.882,445,4.745,446,3.882,447,3.882,448,2.847,449,3.882,450,2.847,451,2.847,452,2.847,453,2.847,454,2.847,455,1.977,456,4.745,457,2.847,458,3.882,459,2.847,460,2.847,461,2.847,462,2.847,463,3.882,464,2.847,465,3.882,466,2.847,467,2.847,468,2.847,469,2.847,470,2.847,471,3.882,472,2.696,473,2.696,474,3.167,475,3.167,476,3.167,477,3.882]],["title/modules/AppRoutingModule.html",[393,1.193,404,1.511]],["body/modules/AppRoutingModule.html",[2,0.41,3,0.327,5,0.327,21,0.521,22,0.045,23,0.327,24,0.381,25,0.41,70,0.039,71,0.039,148,1.459,281,2.056,393,1.831,404,2.704,411,4.151,422,4.151,478,4.365,479,4.365,480,5.386,481,5.089,482,3.561,483,4.365]],["title/components/AppSearchComponent.html",[0,0.092,54,0.448]],["body/components/AppSearchComponent.html",[0,0.161,1,0.497,2,0.296,3,0.236,4,0.741,5,0.385,6,1.532,9,1.389,10,1.386,11,0.741,12,1.345,13,1.047,14,0.977,16,0.977,18,0.572,19,0.779,21,0.39,22,0.045,23,0.236,24,0.236,25,0.296,26,1.321,38,1.163,39,0.741,40,0.482,41,0.741,42,0.497,43,0.741,44,0.497,45,0.741,46,0.497,47,0.426,48,0.741,49,0.497,50,0.741,51,0.497,52,0.572,53,0.741,54,0.779,55,0.741,56,0.497,57,0.741,58,0.497,59,0.741,60,0.497,61,0.741,62,0.497,63,0.741,64,0.741,65,0.497,66,0.741,67,0.741,68,0.741,69,0.741,70,0.045,71,0.032,83,0.426,84,0.755,89,0.862,100,2.208,101,2.257,104,0.733,105,0.779,106,0.733,107,2.804,111,0.862,112,0.862,126,0.939,130,1.674,131,1.674,172,2.14,222,2.47,425,4.191,455,2.187,474,3.389,484,3.15,485,4.154,486,4.154,487,4.154,488,3.389,489,4.154,490,4.154,491,3.15,492,3.15,493,3.389,494,3.792,495,3.15,496,3.15,497,4.154]],["title/components/AppSettingsComponent.html",[0,0.092,56,0.448]],["body/components/AppSettingsComponent.html",[0,0.152,1,0.43,2,0.256,3,0.204,4,1.017,5,0.204,6,1.619,9,1.26,10,1.288,11,0.642,12,1.319,13,1.029,14,0.887,16,0.887,18,0.496,19,0.846,21,0.438,22,0.046,23,0.204,24,0.204,25,0.256,26,1.145,38,1.096,39,0.642,40,0.438,41,0.642,42,0.43,43,0.642,44,0.43,45,0.642,46,0.43,47,0.725,48,0.642,49,0.43,50,0.642,51,0.43,52,0.496,53,0.642,54,0.43,55,0.642,56,0.735,57,0.642,58,0.43,59,0.642,60,0.43,61,0.642,62,0.43,63,0.642,64,0.642,65,0.43,66,0.642,67,0.642,68,0.642,69,0.642,70,0.029,71,0.029,80,1.582,83,0.369,84,0.685,89,0.782,102,2.196,104,0.595,105,0.771,106,0.595,108,1.26,111,0.782,112,0.782,123,1.096,124,0.967,132,1.895,139,1.582,143,1.647,148,0.912,150,1.647,181,3.99,215,3.076,226,2.004,236,4.126,238,3.802,247,1.895,248,2.196,252,2.277,271,2.277,277,1.895,284,2.226,302,3.524,303,1.635,369,3.13,373,2.226,431,4.429,498,2.729,499,3.076,500,3.771,501,3.771,502,4.66,503,3.802,504,3.076,505,3.802,506,4.321,507,2.729,508,3.771,509,4.66,510,2.729,511,2.729,512,2.729,513,2.729,514,2.729,515,2.729,516,2.729,517,3.524,518,2.729,519,2.729,520,2.729,521,4.321,522,4.321,523,4.321,524,4.321,525,4.321,526,2.729,527,2.729,528,3.771,529,2.729,530,2.729,531,3.771,532,3.771,533,3.771,534,2.729,535,2.729,536,2.729,537,2.729,538,2.729,539,2.729,540,2.729,541,2.729,542,2.729,543,3.771,544,3.771,545,3.771,546,3.771,547,3.771,548,3.771,549,2.618,550,3.771,551,3.771,552,3.771,553,3.771,554,3.771,555,3.771,556,3.771,557,3.771,558,3.771,559,3.771,560,3.771,561,3.771]],["title/components/AppTabsComponent.html",[0,0.092,58,0.448]],["body/components/AppTabsComponent.html",[0,0.157,1,0.47,2,0.28,3,0.223,4,0.702,5,0.339,6,1.673,11,0.702,12,1.335,13,1.041,14,0.943,16,0.943,18,0.542,19,0.878,21,0.376,22,0.045,23,0.223,24,0.223,25,0.28,38,1.138,39,0.702,40,0.488,41,0.702,42,0.47,43,0.702,44,0.47,45,0.702,46,0.47,47,0.611,48,0.702,49,0.47,50,0.702,51,0.47,52,0.917,53,0.702,54,0.47,55,0.702,56,0.47,57,0.702,58,0.763,59,0.702,60,0.47,61,0.702,62,0.47,63,0.702,64,0.702,65,0.47,66,0.702,67,0.702,68,0.702,69,0.702,70,0.03,71,0.03,83,0.403,84,0.728,88,2.129,89,0.831,100,2.129,101,2.227,104,0.763,105,0.763,106,0.763,107,2.761,111,1.004,112,1.004,123,1.064,124,0.939,126,0.889,130,1.585,131,1.585,141,3.137,142,3.137,152,1.405,191,2.433,229,3.268,271,2.419,427,4.577,455,2.071,475,3.945,476,3.268,488,3.268,493,3.268,494,3.691,499,3.268,562,2.983,563,4.007,564,4.007,565,4.007,566,5.395,567,4.007,568,4.007,569,3.691,570,4.524,571,4.007,572,2.983,573,2.983,574,2.433,575,3.142,576,2.983,577,2.983,578,4.007,579,2.983,580,2.983,581,2.983,582,4.007,583,2.983,584,2.983,585,2.983,586,2.983,587,2.983,588,4.007,589,4.007,590,4.007,591,2.983,592,4.524,593,2.983,594,2.983,595,2.983,596,2.983,597,4.007]],["title/components/AppVolumeComponent.html",[0,0.092,60,0.448]],["body/components/AppVolumeComponent.html",[0,0.151,1,0.426,2,0.253,3,0.202,4,0.635,5,0.202,6,1.678,9,1.251,10,1.281,11,0.635,12,1.317,13,1.028,14,0.881,16,0.881,18,0.68,19,0.882,21,0.436,22,0.046,23,0.202,24,0.202,25,0.253,38,1.092,39,0.635,40,0.457,41,0.635,42,0.426,43,0.635,44,0.426,45,0.635,46,0.426,47,0.365,48,0.635,49,0.426,50,0.635,51,0.426,52,0.491,53,0.635,54,0.426,55,0.635,56,0.426,57,0.635,58,0.426,59,0.635,60,0.732,61,0.635,62,0.426,63,0.635,64,0.635,65,0.426,66,0.635,67,0.635,68,0.635,69,0.635,70,0.028,71,0.028,78,3.505,80,1.946,83,0.365,84,0.68,89,0.777,100,1.435,101,1.946,102,2.436,104,0.677,105,0.863,106,0.677,107,1.989,108,1.906,111,0.892,112,0.892,123,1.275,124,1.124,126,1.686,130,1.435,131,1.435,132,1.875,139,1.802,140,3.221,172,1.401,193,3.044,248,2.186,252,2.594,277,1.875,303,1.551,417,4.591,598,2.7,599,2.599,600,3.743,601,3.743,602,3.785,603,3.785,604,3.785,605,3.785,606,3.785,607,3.785,608,4.639,609,4.639,610,4.639,611,3.743,612,3.743,613,4.296,614,2.7,615,3.743,616,2.7,617,2.7,618,2.7,619,2.7,620,2.7,621,2.7,622,2.7,623,2.7,624,2.7,625,2.7,626,2.7,627,2.7,628,2.7,629,2.7,630,3.743,631,4.296,632,2.7,633,4.639,634,4.639,635,4.639]],["title/injectables/EffectsService.html",[248,1.34,636,0.951]],["body/injectables/EffectsService.html",[2,0.087,3,0.07,5,0.07,18,0.388,19,0.618,21,0.151,22,0.046,23,0.07,24,0.07,25,0.087,40,0.553,47,0.735,70,0.012,71,0.012,73,0.494,80,0.39,83,0.126,84,0.293,89,0.335,104,0.455,105,0.827,106,0.594,111,0.939,112,0.335,123,1.359,124,1.151,126,1.726,141,2.516,142,2.733,146,1.316,148,1.26,150,0.974,152,1.695,172,2.182,192,1.316,193,1.911,209,3.236,222,1.328,223,2.081,225,2.36,226,0.857,232,3.212,242,1.316,244,1.316,248,0.76,266,2.582,337,3.314,384,1.316,386,1.316,390,2.081,517,1.316,549,1.12,599,0.645,602,1.743,603,2.355,604,2.772,605,2.772,606,2.355,607,2.355,636,0.714,637,0.929,638,2.551,639,1.613,640,1.613,641,1.613,642,2.551,643,2.551,644,0.929,645,1.613,646,0.929,647,1.613,648,0.929,649,0.929,650,1.613,651,0.929,652,1.613,653,2.355,654,0.929,655,0.929,656,0.929,657,1.613,658,0.929,659,3.485,660,4.952,661,1.613,662,4.526,663,3.165,664,3.598,665,3.165,666,3.919,667,3.165,668,3.919,669,4.365,670,3.919,671,3.919,672,2.551,673,2.551,674,2.551,675,3.919,676,4.365,677,3.165,678,3.919,679,3.919,680,2.551,681,2.081,682,2.551,683,2.551,684,3.919,685,3.598,686,3.598,687,1.613,688,1.613,689,1.613,690,2.551,691,3.598,692,4.167,693,3.598,694,3.165,695,2.551,696,3.165,697,2.551,698,2.551,699,3.165,700,2.551,701,4.659,702,0.929,703,3.165,704,5.024,705,4.674,706,4.674,707,1.613,708,4.365,709,1.613,710,1.613,711,3.165,712,1.613,713,1.613,714,1.613,715,1.613,716,3.165,717,2.551,718,2.551,719,3.919,720,1.613,721,3.165,722,2.551,723,2.551,724,3.165,725,1.613,726,2.935,727,1.613,728,1.613,729,1.613,730,1.613,731,3.165,732,1.316,733,1.613,734,4.167,735,1.613,736,1.613,737,1.613,738,2.551,739,1.613,740,1.613,741,1.613,742,1.613,743,3.598,744,1.613,745,1.613,746,1.613,747,1.613,748,3.598,749,1.613,750,1.613,751,1.613,752,2.551,753,2.551,754,4.659,755,1.613,756,1.613,757,3.165,758,1.613,759,3.165,760,1.613,761,1.613,762,1.613,763,1.613,764,1.613,765,1.613,766,1.613,767,1.613,768,2.551,769,2.551,770,2.551,771,2.551,772,1.613,773,1.613,774,1.613,775,1.613,776,1.613,777,1.613,778,1.613,779,1.613,780,1.613,781,1.613,782,1.613,783,0.929,784,1.316,785,0.645,786,0.561,787,0.929,788,0.929,789,1.613,790,0.929,791,0.929,792,0.929,793,0.929,794,0.929,795,2.137,796,2.137,797,0.929,798,0.929,799,0.494,800,0.929,801,1.613,802,0.929,803,0.929,804,0.929,805,0.929,806,4.772,807,1.613,808,2.551,809,1.613,810,1.613,811,1.613,812,3.598,813,1.613,814,1.613,815,1.613,816,1.613,817,2.551,818,1.613,819,1.613,820,0.929,821,0.929,822,1.613,823,1.613,824,1.613,825,1.613,826,1.613,827,1.613,828,1.613,829,1.613,830,0.929,831,0.929,832,0.929,833,0.929]],["title/injectables/MusicLoaderService.html",[101,1.193,636,0.951]],["body/injectables/MusicLoaderService.html",[2,0.301,3,0.24,5,0.419,18,0.582,19,0.889,21,0.44,22,0.046,23,0.24,24,0.24,25,0.301,40,0.467,52,0.996,70,0.032,71,0.032,73,1.702,80,1.344,83,0.433,84,0.763,88,2.817,89,0.872,101,1.762,102,2.687,104,0.785,105,0.852,106,0.785,111,0.973,112,0.973,123,1.247,124,1.1,134,1.509,148,1.071,158,2.613,172,1.199,303,1.663,473,2.917,636,1.567,786,1.934,799,2.871,834,5.672,835,3.203,836,4.059,837,5.48,838,4.975,839,4.201,840,4.201,841,4.201,842,4.201,843,4.201,844,3.203,845,4.201,846,3.203,847,3.427,848,3.203,849,3.751,850,3.203,851,3.203,852,3.427,853,3.427,854,3.203,855,3.203,856,4.201,857,3.203,858,3.203,859,3.203,860,3.203,861,3.203,862,3.203,863,3.203,864,3.203,865,3.203,866,3.203,867,3.203,868,3.203,869,3.203,870,4.201,871,3.203,872,3.203,873,4.201,874,3.203]],["title/injectables/PlayerService.html",[102,1.34,636,0.951]],["body/injectables/PlayerService.html",[2,0.238,3,0.189,5,0.189,18,0.46,19,0.914,21,0.423,22,0.046,23,0.189,24,0.189,25,0.238,40,0.52,47,0.731,70,0.027,71,0.027,73,1.344,80,2.39,83,0.342,84,0.65,88,1.901,89,0.742,91,3.384,93,2.918,102,1.685,104,0.874,105,0.861,106,0.874,108,1.507,111,1.169,112,1.122,123,1.258,124,1.109,126,0.754,134,1.192,135,2.918,143,1.528,222,1.5,226,1.901,247,1.757,248,2.124,252,2.159,303,1.953,472,2.881,473,2.484,503,3.678,575,2.484,599,2.484,636,1.387,653,3.881,784,2.064,785,1.757,786,1.528,799,2.755,836,3.678,847,2.064,849,3.662,852,2.918,853,2.918,875,2.53,876,4.509,877,4.509,878,4.509,879,4.509,880,3.577,881,4.149,882,3.577,883,3.577,884,3.577,885,3.577,886,3.577,887,3.577,888,3.577,889,3.577,890,3.577,891,3.577,892,2.53,893,2.53,894,2.53,895,2.53,896,3.577,897,2.53,898,3.577,899,2.53,900,2.53,901,2.53,902,2.53,903,2.53,904,3.577,905,2.53,906,3.577,907,2.53,908,2.53,909,2.53,910,2.53,911,2.53,912,2.53,913,2.53,914,2.53,915,2.53,916,2.53,917,3.577,918,2.53,919,2.53,920,2.53,921,2.53,922,2.53,923,2.53,924,2.53,925,2.53,926,2.53,927,3.577,928,3.577,929,2.53,930,2.53,931,2.53,932,2.53,933,2.53,934,2.53,935,2.53,936,2.53,937,2.53,938,2.53,939,2.53,940,2.53,941,2.53]],["title/components/RouletteControllerComponent.html",[0,0.092,62,0.448]],["body/components/RouletteControllerComponent.html",[0,0.149,1,0.412,2,0.245,3,0.195,4,0.614,5,0.195,9,1.222,10,1.258,11,0.614,12,1.324,13,0.978,14,0.86,16,0.86,18,0.767,19,0.865,21,0.343,22,0.046,23,0.195,24,0.274,25,0.245,26,1.095,38,1.076,39,0.614,40,0.452,41,0.614,42,0.412,43,0.614,44,0.412,45,0.614,46,0.412,47,0.353,48,0.614,49,0.412,50,0.614,51,0.412,52,0.474,53,0.614,54,0.412,55,0.614,56,0.412,57,0.614,58,0.412,59,0.614,60,0.412,61,0.614,62,0.759,63,1.249,64,0.614,65,0.412,66,1.076,67,0.993,68,0.614,69,0.614,70,0.028,71,0.028,83,0.353,84,0.664,87,4.263,89,0.759,98,3.174,104,0.665,105,0.808,106,0.665,108,1.609,111,1.035,112,1.063,123,0.993,124,1.117,126,1.258,139,1.77,145,3.442,148,1.667,152,2.35,193,1.576,222,1.095,232,2.547,281,1.23,303,0.872,305,1.812,306,1.576,399,2.547,424,4.512,569,3.442,574,2.129,575,2.538,659,2.129,705,2.129,706,2.129,726,2.129,942,5.531,943,2.129,944,3.442,945,3.442,946,2.982,947,2.982,948,4.571,949,4.571,950,2.982,951,2.982,952,4.571,953,2.982,954,3.656,955,2.129,956,2.61,957,2.61,958,3.656,959,2.61,960,2.982,961,2.61,962,3.729,963,2.982,964,2.61,965,2.61,966,2.61,967,2.982,968,2.61,969,2.129,970,2.129,971,2.129,972,2.61,973,2.982,974,2.982,975,2.982,976,3.442,977,2.129,978,2.129,979,2.129,980,2.129,981,2.129,982,2.61,983,3.656,984,2.129,985,2.129,986,4.219,987,3.656,988,3.656,989,2.129,990,2.129,991,3.656,992,3.656,993,2.61,994,2.61,995,2.61,996,4.219,997,2.982,998,2.129,999,2.61,1000,2.61,1001,2.61,1002,4.813,1003,2.61,1004,2.61,1005,2.61,1006,2.61,1007,2.61,1008,2.61,1009,2.61,1010,2.61,1011,2.61,1012,2.61,1013,2.61,1014,2.61]],["title/injectables/SizeService.html",[369,1.717,636,0.951]],["body/injectables/SizeService.html",[2,0.329,3,0.262,5,0.262,18,0.889,19,0.895,21,0.418,22,0.046,23,0.262,24,0.262,25,0.329,40,0.329,70,0.034,71,0.034,73,1.861,83,0.473,84,0.809,89,0.923,104,0.552,105,0.702,106,0.552,108,1.866,111,1.102,112,0.727,123,1.211,124,1.068,134,1.65,154,4.023,303,1.487,366,4.686,369,2.686,505,3.63,636,1.635,786,2.114,799,2.734,849,3.688,1015,3.502,1016,5.146,1017,5.146,1018,5.146,1019,5.146,1020,4.45,1021,4.45,1022,3.502,1023,3.502,1024,3.502,1025,3.502,1026,3.502,1027,3.502,1028,4.45,1029,3.502,1030,4.45,1031,3.502,1032,3.502,1033,3.502,1034,5.146,1035,3.502,1036,5.146,1037,3.502,1038,3.502,1039,3.502,1040,3.502,1041,3.502,1042,3.502,1043,3.502]],["title/components/SliderControllerComponent.html",[0,0.092,65,0.448]],["body/components/SliderControllerComponent.html",[0,0.117,1,0.254,2,0.151,3,0.121,4,0.379,5,0.121,9,0.852,10,0.943,11,0.379,12,1.197,13,0.867,14,0.599,16,0.599,19,0.854,21,0.239,22,0.046,23,0.121,24,0.191,25,0.151,26,0.676,38,0.846,39,0.379,40,0.368,41,0.379,42,0.254,43,0.379,44,0.254,45,0.379,46,0.254,47,0.218,48,0.379,49,0.254,50,0.379,51,0.254,52,0.293,53,0.379,54,0.254,55,0.379,56,0.254,57,0.379,58,0.254,59,0.379,60,0.254,61,0.379,62,0.254,63,0.379,64,0.379,65,0.618,66,1.145,67,0.744,68,0.379,69,0.379,70,0.019,71,0.019,83,0.218,84,0.463,89,0.529,98,2.496,104,0.499,105,0.734,106,0.499,108,1.201,111,1.155,112,0.864,123,0.599,124,0.864,126,1.301,139,1.069,148,1.967,152,0.759,172,1.559,222,2.042,232,1.909,281,0.759,303,1.654,305,1.118,306,0.972,399,1.909,420,4.438,681,2.932,943,1.314,944,2.579,945,2.579,946,2.079,947,2.079,950,2.079,951,2.079,953,2.079,955,1.314,960,2.079,962,2.932,963,2.079,967,2.079,969,1.314,970,1.314,971,1.314,973,2.079,974,2.079,975,2.079,976,2.579,977,1.314,978,1.314,979,1.314,980,1.314,981,1.314,984,4.038,985,3.397,989,4.708,990,1.314,997,2.079,998,1.314,1044,5.44,1045,4.77,1046,5.144,1047,3.594,1048,3.594,1049,3.594,1050,2.548,1051,3.162,1052,3.162,1053,3.162,1054,3.162,1055,3.162,1056,3.162,1057,3.162,1058,3.162,1059,3.162,1060,3.162,1061,3.162,1062,3.162,1063,1.61,1064,1.61,1065,1.61,1066,1.61,1067,3.162,1068,3.594,1069,1.61,1070,2.548,1071,1.61,1072,1.61,1073,1.61,1074,1.61,1075,1.61,1076,1.61,1077,1.61,1078,1.61,1079,1.61,1080,1.61,1081,1.61,1082,1.61,1083,1.61,1084,1.61,1085,1.61,1086,1.61,1087,1.61,1088,1.61,1089,1.61,1090,1.61,1091,1.61,1092,1.61,1093,1.61,1094,1.61,1095,1.61,1096,1.61,1097,1.61,1098,4.95,1099,5.44,1100,5.087,1101,5.023,1102,5.023,1103,2.548,1104,4.95,1105,4.362,1106,5.282,1107,5.144,1108,5.319,1109,4.523,1110,4.523,1111,5.282,1112,4.95,1113,3.594,1114,4.523,1115,1.61,1116,1.61,1117,1.61,1118,1.61,1119,1.61,1120,1.61]],["title/dependencies.html",[395,2.065,1121,2.376]],["body/dependencies.html",[22,0.045,23,0.323,70,0.038,71,0.038,134,2.031,136,3.517,281,2.031,329,3.517,395,2.603,409,4.121,410,3.508,482,3.517,785,2.994,1122,4.311,1123,5.831,1124,4.311,1125,4.311,1126,4.311,1127,4.311,1128,4.311,1129,4.311,1130,4.311,1131,4.311,1132,4.311,1133,4.311,1134,4.311]],["title/miscellaneous/functions.html",[324,2.375,1135,1.938]],["body/miscellaneous/functions.html",[6,1.303,22,0.044,40,0.478,47,0.75,70,0.039,71,0.039,83,0.591,104,0.803,105,0.689,106,0.803,124,1.057,227,3.036,228,4.397,306,2.639,324,3.036,325,3.566,327,4.155,337,3.036,338,3.566,339,4.155,1135,3.566,1136,5.093,1137,5.093]],["title/index.html",[83,0.321,472,1.65,1138,2.376]],["body/index.html",[0,0.167,3,0.292,5,0.292,13,0.934,22,0.036,40,0.367,70,0.036,71,0.036,406,2.712,504,3.186,549,2.712,732,4.191,799,2.075,1139,3.905,1140,4.762,1141,5.483,1142,5.137,1143,5.137,1144,3.905,1145,3.905,1146,3.905,1147,4.762,1148,5.646,1149,5.577,1150,3.905,1151,3.905,1152,3.905,1153,3.905,1154,3.905,1155,3.905,1156,3.905,1157,3.905,1158,5.483,1159,3.905,1160,3.905,1161,3.905,1162,3.905,1163,3.905,1164,3.905,1165,4.762,1166,4.762,1167,5.483,1168,3.905,1169,4.762,1170,4.762,1171,3.905,1172,5.348,1173,3.905,1174,3.905,1175,3.905,1176,5.137,1177,3.905,1178,5.348,1179,3.905,1180,3.905,1181,4.762,1182,3.905,1183,3.905,1184,3.905,1185,3.905,1186,4.762,1187,4.762,1188,3.905,1189,4.762,1190,3.905,1191,3.905,1192,3.905]],["title/modules.html",[393,1.627]],["body/modules.html",[22,0.04,70,0.04,71,0.04,393,1.917,394,2.759,404,2.429,410,3.174,1193,4.57,1194,4.57,1195,5.225,1196,4.57,1197,4.57]],["title/overview.html",[1198,3.164]],["body/overview.html",[0,0.128,1,0.814,22,0.045,24,0.295,42,0.892,44,0.814,46,0.814,49,0.814,51,0.814,54,0.814,56,0.814,58,0.814,60,0.814,62,0.814,65,0.814,70,0.036,71,0.036,209,2.738,222,1.654,224,2.381,393,2.009,394,3.615,395,2.381,396,3.217,397,3.217,398,3.217,399,2.381,400,3.217,401,3.217,402,3.217,403,3.217,404,2.742,405,3.907,406,2.738,636,1.318,1198,3.217,1199,3.943]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":126,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["0.0001",{"_index":710,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.001",{"_index":748,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.0045",{"_index":709,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.01",{"_index":266,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["0.065",{"_index":665,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.1",{"_index":683,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.2",{"_index":693,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.25",{"_index":719,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.3",{"_index":691,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.45",{"_index":714,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.5",{"_index":726,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["0.7",{"_index":728,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.8.26",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["000",{"_index":176,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["1",{"_index":172,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSearchComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/SliderControllerComponent.html":{}}}],["1.0.2",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":390,"title":{},"body":{"components/AppLayoutComponent.html":{},"injectables/EffectsService.html":{}}}],["1.25",{"_index":1116,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["1.5",{"_index":707,"title":{},"body":{"injectables/EffectsService.html":{}}}],["10",{"_index":192,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["100",{"_index":193,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["1000",{"_index":738,"title":{},"body":{"injectables/EffectsService.html":{}}}],["10000",{"_index":716,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1024",{"_index":769,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1024x768",{"_index":559,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["10px",{"_index":182,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["12",{"_index":1199,"title":{},"body":{"overview.html":{}}}],["125",{"_index":810,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1280x1024",{"_index":556,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["1280x720",{"_index":558,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["1280x800",{"_index":557,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["135",{"_index":994,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["1360x768",{"_index":555,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["1366x768",{"_index":554,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["150",{"_index":717,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1500",{"_index":700,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16",{"_index":681,"title":{},"body":{"injectables/EffectsService.html":{},"components/SliderControllerComponent.html":{}}}],["16000",{"_index":816,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1600x900",{"_index":552,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["16384",{"_index":671,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1680x1050",{"_index":553,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["16x",{"_index":220,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["180",{"_index":696,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1920x1080",{"_index":551,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["1920x1200",{"_index":550,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["2",{"_index":222,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["2.1.1",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":1103,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["2.5.4",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":721,"title":{},"body":{"injectables/EffectsService.html":{}}}],["200",{"_index":779,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2000",{"_index":723,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2048",{"_index":770,"title":{},"body":{"injectables/EffectsService.html":{}}}],["22050",{"_index":722,"title":{},"body":{"injectables/EffectsService.html":{}}}],["250",{"_index":811,"title":{},"body":{"injectables/EffectsService.html":{}}}],["256",{"_index":670,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2px",{"_index":179,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["2x",{"_index":217,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["3",{"_index":223,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["3.0",{"_index":35,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["3.5",{"_index":667,"title":{},"body":{"injectables/EffectsService.html":{}}}],["30",{"_index":695,"title":{},"body":{"injectables/EffectsService.html":{}}}],["3000",{"_index":740,"title":{},"body":{"injectables/EffectsService.html":{}}}],["32",{"_index":807,"title":{},"body":{"injectables/EffectsService.html":{}}}],["32x",{"_index":221,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["360",{"_index":195,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["4",{"_index":209,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{},"overview.html":{}}}],["40",{"_index":743,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4000",{"_index":813,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4096",{"_index":669,"title":{},"body":{"injectables/EffectsService.html":{}}}],["440",{"_index":746,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4x",{"_index":218,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["5",{"_index":225,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["50",{"_index":146,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["500",{"_index":699,"title":{},"body":{"injectables/EffectsService.html":{}}}],["512",{"_index":768,"title":{},"body":{"injectables/EffectsService.html":{}}}],["6",{"_index":226,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["6.0.0",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":1145,"title":{},"body":{"index.html":{}}}],["64",{"_index":809,"title":{},"body":{"injectables/EffectsService.html":{}}}],["700",{"_index":698,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8",{"_index":686,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8000",{"_index":814,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8192",{"_index":771,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8x",{"_index":219,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_",{"_index":981,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["_contain",{"_index":1014,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["_wave",{"_index":163,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_wave').offsetheight",{"_index":157,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["a.act",{"_index":934,"title":{},"body":{"injectables/PlayerService.html":{}}}],["a.id",{"_index":524,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["about'},{'nam",{"_index":41,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["about.compon",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["about.component.css",{"_index":15,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.t",{"_index":8,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.ts:8",{"_index":20,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about/app",{"_index":7,"title":{},"body":{"components/AppAboutComponent.html":{},"modules/AppModule.html":{}}}],["abstractcontrol",{"_index":278,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["ac",{"_index":649,"title":{},"body":{"injectables/EffectsService.html":{}}}],["access",{"_index":1182,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":1050,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["activ",{"_index":141,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["activateeffect",{"_index":880,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activateeffect(deck",{"_index":892,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeeffect",{"_index":876,"title":{},"body":{"injectables/PlayerService.html":{}}}],["actual_compon",{"_index":69,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["actualconfig",{"_index":287,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualconfig.default",{"_index":291,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualconfig.step",{"_index":296,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualconfig.valu",{"_index":299,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["actualheight",{"_index":1016,"title":{},"body":{"injectables/SizeService.html":{}}}],["actualwidth",{"_index":1017,"title":{},"body":{"injectables/SizeService.html":{}}}],["addcu",{"_index":90,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["addeffect",{"_index":639,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addeffect(effect",{"_index":645,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addsong",{"_index":839,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["addsong(song",{"_index":843,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["adjusteqvalu",{"_index":805,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(0.75",{"_index":812,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(bass0",{"_index":808,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(bass1",{"_index":817,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(trebble0",{"_index":815,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(trebble1",{"_index":818,"title":{},"body":{"injectables/EffectsService.html":{}}}],["advanc",{"_index":804,"title":{},"body":{"injectables/EffectsService.html":{}}}],["afterviewinit",{"_index":78,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppVolumeComponent.html":{}}}],["algorithmindex",{"_index":730,"title":{},"body":{"injectables/EffectsService.html":{}}}],["allpass",{"_index":756,"title":{},"body":{"injectables/EffectsService.html":{}}}],["analog",{"_index":772,"title":{},"body":{"injectables/EffectsService.html":{}}}],["angular",{"_index":1142,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":281,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":482,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["appaboutcompon",{"_index":1,"title":{"components/AppAboutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appcompon",{"_index":42,"title":{"components/AppComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appdeckcompon",{"_index":44,"title":{"components/AppDeckComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appeffectscreatorcompon",{"_index":46,"title":{"components/AppEffectsCreatorComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["applayoutcompon",{"_index":49,"title":{"components/AppLayoutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appli",{"_index":712,"title":{},"body":{"injectables/EffectsService.html":{}}}],["applic",{"_index":383,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["applyeffect",{"_index":91,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["applyeffect(i",{"_index":113,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["appmodul",{"_index":394,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmusiclistcompon",{"_index":51,"title":{"components/AppMusicListComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["approutingmodul",{"_index":404,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsearchcompon",{"_index":54,"title":{"components/AppSearchComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appsettingscompon",{"_index":56,"title":{"components/AppSettingsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["apptabscompon",{"_index":58,"title":{"components/AppTabsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appvolumecompon",{"_index":60,"title":{"components/AppVolumeComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["argument",{"_index":574,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["artifact",{"_index":1159,"title":{},"body":{"index.html":{}}}],["artist",{"_index":471,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["attack",{"_index":737,"title":{},"body":{"injectables/EffectsService.html":{}}}],["attribut",{"_index":28,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["auto",{"_index":517,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{}}}],["automakeup",{"_index":744,"title":{},"body":{"injectables/EffectsService.html":{}}}],["automat",{"_index":549,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"index.html":{}}}],["automod",{"_index":761,"title":{},"body":{"injectables/EffectsService.html":{}}}],["avail",{"_index":1197,"title":{},"body":{"modules.html":{}}}],["availableeffect",{"_index":502,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["availableeffect.nam",{"_index":561,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["b.id).id",{"_index":525,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["back",{"_index":348,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["background",{"_index":174,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["band.f",{"_index":828,"title":{},"body":{"injectables/EffectsService.html":{}}}],["band.typ",{"_index":823,"title":{},"body":{"injectables/EffectsService.html":{}}}],["band.valu",{"_index":825,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bandpass",{"_index":751,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basefrequ",{"_index":762,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basemodulationfrequ",{"_index":697,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basic",{"_index":660,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bass0",{"_index":602,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["bass1",{"_index":603,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["be",{"_index":389,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["between",{"_index":775,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bigval",{"_index":1107,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["bit",{"_index":680,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bitcrush",{"_index":679,"title":{},"body":{"injectables/EffectsService.html":{}}}],["boolean",{"_index":258,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["bootstrap",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bounc",{"_index":774,"title":{},"body":{"injectables/EffectsService.html":{}}}],["break",{"_index":1009,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["brows",{"_index":1195,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["buffers",{"_index":668,"title":{},"body":{"injectables/EffectsService.html":{}}}],["build",{"_index":1158,"title":{},"body":{"index.html":{}}}],["builder",{"_index":249,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["bypass",{"_index":701,"title":{},"body":{"injectables/EffectsService.html":{}}}],["c.map(a",{"_index":522,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["callback",{"_index":904,"title":{},"body":{"injectables/PlayerService.html":{}}}],["cc",{"_index":34,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["chang",{"_index":504,"title":{},"body":{"components/AppSettingsComponent.html":{},"index.html":{}}}],["change(i",{"_index":508,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["changepitch",{"_index":92,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["changes",{"_index":505,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/SizeService.html":{}}}],["changesize(width",{"_index":1021,"title":{},"body":{"injectables/SizeService.html":{}}}],["changevolum",{"_index":611,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["changevolume(deck",{"_index":615,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["channel",{"_index":776,"title":{},"body":{"injectables/EffectsService.html":{}}}],["check",{"_index":1179,"title":{},"body":{"index.html":{}}}],["checknam",{"_index":241,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["choos",{"_index":497,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["choru",{"_index":703,"title":{},"body":{"injectables/EffectsService.html":{}}}],["class",{"_index":25,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["cli",{"_index":1143,"title":{},"body":{"index.html":{}}}],["click)=\"removeeffect",{"_index":359,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["closest",{"_index":1001,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["closest(el",{"_index":1013,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["clunki",{"_index":330,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["cluster_appmodul",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1155,"title":{},"body":{"index.html":{}}}],["color",{"_index":175,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["compodoc",{"_index":1183,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":39,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["components/app",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["components/roulett",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["components/slid",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["compressor",{"_index":731,"title":{},"body":{"injectables/EffectsService.html":{}}}],["comput",{"_index":477,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["config",{"_index":232,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["config.nam",{"_index":354,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["config.valu",{"_index":355,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["config[actualconfig.nam",{"_index":290,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["configslid",{"_index":948,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["configur",{"_index":353,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["console.log('error",{"_index":871,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["console.log(this.playerservice.getcurrenttime(this.decknumb",{"_index":202,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["console.log(this.playerservice.getduration(this.decknumb",{"_index":203,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["const",{"_index":148,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{}}}],["constructor(effectserv",{"_index":247,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(musicservic",{"_index":100,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["constructor(playerservic",{"_index":841,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["constructor(priv",{"_index":143,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(sizeservic",{"_index":368,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["contain",{"_index":161,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["content",{"_index":27,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["control",{"_index":67,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["control.valu",{"_index":336,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["controller'},{'nam",{"_index":64,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.compon",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["controller.component.css",{"_index":946,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.html",{"_index":947,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.t",{"_index":943,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:104",{"_index":1084,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:123",{"_index":1086,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:146",{"_index":1088,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:158",{"_index":1090,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:173",{"_index":1092,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:185",{"_index":1094,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:196",{"_index":1096,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:20",{"_index":956,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:21",{"_index":970,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:216",{"_index":1065,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:22",{"_index":972,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:221",{"_index":1066,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:226",{"_index":1063,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:229",{"_index":1064,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":969,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:24",{"_index":971,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:25",{"_index":1071,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":955,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:27",{"_index":1072,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:29",{"_index":1074,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:39",{"_index":1076,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:44",{"_index":965,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:49",{"_index":966,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:53",{"_index":1078,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:54",{"_index":968,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:60",{"_index":961,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:63",{"_index":964,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:67",{"_index":959,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:70",{"_index":1080,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:89",{"_index":1082,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller/roulett",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{}}}],["controller/slid",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"components/SliderControllerComponent.html":{}}}],["controlvalueaccessor",{"_index":944,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["core",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["creat",{"_index":350,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["createeffect",{"_index":242,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["createeffects(ac",{"_index":647,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeq",{"_index":640,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeq(bass0",{"_index":650,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeqeffect",{"_index":641,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeqeffect(deck",{"_index":652,"title":{},"body":{"injectables/EffectsService.html":{}}}],["creator",{"_index":229,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{}}}],["creator'},{'nam",{"_index":48,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["creator.compon",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["creator.component.css",{"_index":230,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.html",{"_index":231,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.t",{"_index":228,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["creator.component.ts:11",{"_index":268,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:12",{"_index":267,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:13",{"_index":274,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:14",{"_index":275,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:15",{"_index":269,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:16",{"_index":270,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:17",{"_index":265,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:18",{"_index":272,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:19",{"_index":273,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:20",{"_index":276,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:21",{"_index":251,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:27",{"_index":263,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:51",{"_index":260,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:55",{"_index":261,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:58",{"_index":256,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:61",{"_index":254,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:73",{"_index":253,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator.component.ts:93",{"_index":259,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["creator/app",{"_index":227,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["cue",{"_index":85,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["cue['perc",{"_index":204,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["cue['po",{"_index":207,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["cursor",{"_index":137,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["cursor.cr",{"_index":169,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["curveamount",{"_index":729,"title":{},"body":{"injectables/EffectsService.html":{}}}],["custom_text_input_control_value_accessor",{"_index":945,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["customshowtimestyl",{"_index":173,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["cutoff",{"_index":664,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dark",{"_index":547,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["decent",{"_index":687,"title":{},"body":{"injectables/EffectsService.html":{}}}],["decimaladjust",{"_index":327,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["decimaladjust('round",{"_index":335,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["decimaladjust(typ",{"_index":338,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["deck",{"_index":80,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["deck'},{'nam",{"_index":45,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deck.compon",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["deck.component.css",{"_index":81,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.html",{"_index":82,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.t",{"_index":77,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:109",{"_index":122,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:112",{"_index":117,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:15",{"_index":109,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:17",{"_index":128,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:19",{"_index":129,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:20",{"_index":125,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:21",{"_index":127,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:22",{"_index":103,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:69",{"_index":120,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:74",{"_index":118,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:81",{"_index":116,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:85",{"_index":114,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:88",{"_index":115,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:92",{"_index":119,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:97",{"_index":110,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck/app",{"_index":76,"title":{},"body":{"components/AppDeckComponent.html":{},"modules/AppModule.html":{}}}],["deck[0].backend.ac.createbiquadfilt",{"_index":821,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck[1].backend.ac.createbiquadfilt",{"_index":831,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck_",{"_index":162,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deckload",{"_index":836,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["decknum",{"_index":877,"title":{},"body":{"injectables/PlayerService.html":{}}}],["decknumb",{"_index":99,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["decksong",{"_index":837,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["declar",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":1069,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["default",{"_index":123,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["defaultstep",{"_index":233,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["defin",{"_index":19,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["delay",{"_index":708,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytim",{"_index":715,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytimeleft",{"_index":777,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytimeright",{"_index":778,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deletesong",{"_index":840,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["deletesong(song",{"_index":845,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["depend",{"_index":395,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":690,"title":{},"body":{"injectables/EffectsService.html":{}}}],["descript",{"_index":704,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dev",{"_index":1151,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1146,"title":{},"body":{"index.html":{}}}],["devic",{"_index":387,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["direct",{"_index":68,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1157,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1162,"title":{},"body":{"index.html":{}}}],["disabled]=\"\">remov",{"_index":360,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["dist",{"_index":1161,"title":{},"body":{"index.html":{}}}],["document",{"_index":1181,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('deck_",{"_index":155,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["document:click",{"_index":954,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["document:click(ev",{"_index":957,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["drag",{"_index":475,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["drive",{"_index":727,"title":{},"body":{"injectables/EffectsService.html":{}}}],["drop",{"_index":597,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drope",{"_index":567,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["droped(ev",{"_index":578,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drylevel",{"_index":720,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dynam",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":346,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["e2",{"_index":1173,"title":{},"body":{"index.html":{}}}],["eff",{"_index":149,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["eff.filter(_",{"_index":151,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["effect",{"_index":47,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["effect.id",{"_index":789,"title":{},"body":{"injectables/EffectsService.html":{}}}],["effect.nam",{"_index":315,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectload",{"_index":878,"title":{},"body":{"injectables/PlayerService.html":{}}}],["effects.servic",{"_index":933,"title":{},"body":{"injectables/PlayerService.html":{}}}],["effectscr",{"_index":638,"title":{},"body":{"injectables/EffectsService.html":{}}}],["effectscreatorarray",{"_index":234,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectserv",{"_index":252,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["effectsnum",{"_index":503,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["effectsservic",{"_index":248,"title":{"injectables/EffectsService.html":{}},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["effectstruct",{"_index":235,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectstruct.descript",{"_index":352,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["effectstruct.nam",{"_index":351,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["el",{"_index":1002,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.match",{"_index":1004,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.mozmatchesselector",{"_index":1006,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.msmatchesselector",{"_index":1007,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.parentel",{"_index":1010,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.webkitmatchesselector",{"_index":1005,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["element",{"_index":1012,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["elementref",{"_index":1068,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["end",{"_index":1172,"title":{},"body":{"index.html":{}}}],["english",{"_index":545,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["eq",{"_index":653,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["eq[0].map(band",{"_index":820,"title":{},"body":{"injectables/EffectsService.html":{}}}],["eq[1].map(band",{"_index":830,"title":{},"body":{"injectables/EffectsService.html":{}}}],["eqeffect",{"_index":879,"title":{},"body":{"injectables/PlayerService.html":{}}}],["equal",{"_index":881,"title":{},"body":{"injectables/PlayerService.html":{}}}],["error",{"_index":870,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["event",{"_index":575,"title":{},"body":{"components/AppTabsComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{}}}],["event.preventdefault",{"_index":589,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.stoppropag",{"_index":590,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.target",{"_index":1011,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["excursionoctav",{"_index":763,"title":{},"body":{"injectables/EffectsService.html":{}}}],["execut",{"_index":1169,"title":{},"body":{"index.html":{}}}],["exp",{"_index":339,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["f",{"_index":806,"title":{},"body":{"injectables/EffectsService.html":{}}}],["fals",{"_index":142,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["feedback",{"_index":692,"title":{},"body":{"injectables/EffectsService.html":{}}}],["fff",{"_index":177,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["fi",{"_index":767,"title":{},"body":{"injectables/EffectsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["filechangeev",{"_index":487,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filechangeevent(fileinput",{"_index":490,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["fileinput",{"_index":492,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filelist",{"_index":494,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["fileread",{"_index":864,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["fill",{"_index":990,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fillheight",{"_index":1056,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillleft",{"_index":1058,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filloffset",{"_index":1114,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillsiz",{"_index":1045,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filltop",{"_index":1057,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillwidth",{"_index":1055,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filter",{"_index":662,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.frequency.valu",{"_index":827,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.gain.valu",{"_index":824,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.q.valu",{"_index":826,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.typ",{"_index":822,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter0",{"_index":819,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter1",{"_index":829,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filtertyp",{"_index":749,"title":{},"body":{"injectables/EffectsService.html":{}}}],["finish",{"_index":184,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["flag",{"_index":1164,"title":{},"body":{"index.html":{}}}],["float",{"_index":331,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["fn",{"_index":962,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fold",{"_index":949,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["font",{"_index":180,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["forbidden",{"_index":334,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["formbuild",{"_index":250,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["formgroup",{"_index":264,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["formsmodul",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["forwardref",{"_index":973,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["freepik",{"_index":37,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["frequenc",{"_index":745,"title":{},"body":{"injectables/EffectsService.html":{}}}],["function",{"_index":324,"title":{"miscellaneous/functions.html":{}},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1175,"title":{},"body":{"index.html":{}}}],["gain",{"_index":734,"title":{},"body":{"injectables/EffectsService.html":{}}}],["gener",{"_index":1141,"title":{},"body":{"index.html":{}}}],["get",{"_index":1138,"title":{"index.html":{}},"body":{}}],["getcurrenttim",{"_index":882,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getcurrenttime(deck",{"_index":896,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getdur",{"_index":883,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getduration(deck",{"_index":898,"title":{},"body":{"injectables/PlayerService.html":{}}}],["geteffect",{"_index":642,"title":{},"body":{"injectables/EffectsService.html":{}}}],["geteffectscr",{"_index":643,"title":{},"body":{"injectables/EffectsService.html":{}}}],["getfillheight",{"_index":1083,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillleft",{"_index":1087,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfilltop",{"_index":1085,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillwidth",{"_index":1081,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getheight",{"_index":1018,"title":{},"body":{"injectables/SizeService.html":{}}}],["getthumbheight",{"_index":1075,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbleft",{"_index":1079,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbtop",{"_index":1077,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbwidth",{"_index":1073,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackheight",{"_index":1091,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackleft",{"_index":1095,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettracktop",{"_index":1093,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackwidth",{"_index":1089,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getwidth",{"_index":1019,"title":{},"body":{"injectables/SizeService.html":{}}}],["go",{"_index":1178,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1196,"title":{},"body":{"modules.html":{}}}],["height",{"_index":154,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"injectables/SizeService.html":{}}}],["help",{"_index":1176,"title":{},"body":{"index.html":{}}}],["here",{"_index":476,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["high",{"_index":633,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["higher",{"_index":386,"title":{},"body":{"components/AppLayoutComponent.html":{},"injectables/EffectsService.html":{}}}],["highpass",{"_index":750,"title":{},"body":{"injectables/EffectsService.html":{}}}],["highshelf",{"_index":753,"title":{},"body":{"injectables/EffectsService.html":{}}}],["hostlisten",{"_index":569,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["hostlistener('document:click",{"_index":999,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["hostlistener('window:dragleav",{"_index":595,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["hostlistener('window:dragov",{"_index":593,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["htmlelement",{"_index":1067,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["http://localhost:4200",{"_index":1153,"title":{},"body":{"index.html":{}}}],["http://virtualdj",{"_index":1190,"title":{},"body":{"index.html":{}}}],["http://virtualdj.surge.sh",{"_index":1192,"title":{},"body":{"index.html":{}}}],["https://clm2609.gitlab.io/tfg",{"_index":1184,"title":{},"body":{"index.html":{}}}],["i+1",{"_index":215,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["icon",{"_index":29,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["id",{"_index":659,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["ie",{"_index":782,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ignor",{"_index":975,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["includes(lowsearch",{"_index":469,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["index",{"_index":83,"title":{"index.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["inject",{"_index":636,"title":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/SizeService.html":{}},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/SizeService.html":{},"overview.html":{}}}],["input",{"_index":98,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["intens",{"_index":758,"title":{},"body":{"injectables/EffectsService.html":{}}}],["isdefin",{"_index":243,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["isdefined(someth",{"_index":255,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["isnan(valu",{"_index":341,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["isplay",{"_index":884,"title":{},"body":{"injectables/PlayerService.html":{}}}],["isplaying(deck",{"_index":900,"title":{},"body":{"injectables/PlayerService.html":{}}}],["j",{"_index":509,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["j+1",{"_index":560,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["jest",{"_index":1171,"title":{},"body":{"index.html":{}}}],["js",{"_index":329,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"dependencies.html":{}}}],["json",{"_index":236,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["json.parse(effect",{"_index":286,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["json.parse(json.stringify(effect",{"_index":528,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.availableeffects.find(a",{"_index":536,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.effect",{"_index":787,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.parse(json.stringify(this.effectscr",{"_index":788,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.parse(json.stringify(this.playerserv.effect",{"_index":519,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(localstorage.getitem('effect",{"_index":833,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.stringify(this.effect",{"_index":796,"title":{},"body":{"injectables/EffectsService.html":{}}}],["key",{"_index":326,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["knee",{"_index":742,"title":{},"body":{"injectables/EffectsService.html":{}}}],["languag",{"_index":543,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["latest",{"_index":1187,"title":{},"body":{"index.html":{}}}],["layout",{"_index":363,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":50,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["layout.compon",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["layout.component.css",{"_index":364,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.html",{"_index":365,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.t",{"_index":362,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:10",{"_index":372,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:11",{"_index":371,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:12",{"_index":370,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout/app",{"_index":361,"title":{},"body":{"components/AppLayoutComponent.html":{},"modules/AppModule.html":{}}}],["left",{"_index":675,"title":{},"body":{"injectables/EffectsService.html":{}}}],["legend",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["licens",{"_index":33,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["light",{"_index":546,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["list",{"_index":437,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list'},{'nam",{"_index":53,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["list.compon",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":438,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.html",{"_index":439,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.t",{"_index":436,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:11",{"_index":453,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:13",{"_index":452,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:14",{"_index":454,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:15",{"_index":446,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:30",{"_index":448,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:33",{"_index":450,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:36",{"_index":451,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list/app",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"components/AppMusicListComponent.html":{}}}],["lo",{"_index":766,"title":{},"body":{"injectables/EffectsService.html":{}}}],["load",{"_index":473,"title":{},"body":{"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["load(deck",{"_index":847,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["loader.servic",{"_index":131,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["loader.service.t",{"_index":835,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:10",{"_index":855,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:11",{"_index":850,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:12",{"_index":854,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:13",{"_index":851,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:14",{"_index":842,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:18",{"_index":848,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:32",{"_index":844,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:36",{"_index":846,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:8",{"_index":858,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:9",{"_index":857,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loadondeck",{"_index":443,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loadondeck(deck",{"_index":447,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loc",{"_index":1112,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["localstorage.getitem('effect",{"_index":832,"title":{},"body":{"injectables/EffectsService.html":{}}}],["localstorage.getitem('height",{"_index":1033,"title":{},"body":{"injectables/SizeService.html":{}}}],["localstorage.getitem('width",{"_index":1032,"title":{},"body":{"injectables/SizeService.html":{}}}],["localstorage.removeitem('height",{"_index":1043,"title":{},"body":{"injectables/SizeService.html":{}}}],["localstorage.removeitem('width",{"_index":1042,"title":{},"body":{"injectables/SizeService.html":{}}}],["localstorage.setitem('effect",{"_index":795,"title":{},"body":{"injectables/EffectsService.html":{}}}],["localstorage.setitem('height",{"_index":1041,"title":{},"body":{"injectables/SizeService.html":{}}}],["localstorage.setitem('width",{"_index":1040,"title":{},"body":{"injectables/SizeService.html":{}}}],["low",{"_index":635,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["lowpass",{"_index":711,"title":{},"body":{"injectables/EffectsService.html":{}}}],["lowsearch",{"_index":466,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["lowshelf",{"_index":752,"title":{},"body":{"injectables/EffectsService.html":{}}}],["made",{"_index":30,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["makeup",{"_index":733,"title":{},"body":{"injectables/EffectsService.html":{}}}],["makeupgain",{"_index":736,"title":{},"body":{"injectables/EffectsService.html":{}}}],["mastermultipli",{"_index":630,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["match",{"_index":71,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchesselector",{"_index":1003,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["matchesselector.call(el",{"_index":1008,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["math",{"_index":333,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["math.max(0",{"_index":1115,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["math.max(valoranterior",{"_index":792,"title":{},"body":{"injectables/EffectsService.html":{}}}],["math[type](+(value[0",{"_index":345,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["math[type](valu",{"_index":340,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["max",{"_index":706,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["maxim",{"_index":566,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["method",{"_index":89,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["mid",{"_index":634,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["mid0",{"_index":604,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["mid1",{"_index":605,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["min",{"_index":705,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["miscellan",{"_index":1135,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modul",{"_index":393,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moog",{"_index":661,"title":{},"body":{"injectables/EffectsService.html":{}}}],["moogfilt",{"_index":663,"title":{},"body":{"injectables/EffectsService.html":{}}}],["more",{"_index":1177,"title":{},"body":{"index.html":{}}}],["mouseev",{"_index":958,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["multi",{"_index":978,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music",{"_index":52,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music.filter(mu",{"_index":467,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musiclist",{"_index":440,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicload",{"_index":838,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["musicloaderservic",{"_index":101,"title":{"injectables/MusicLoaderService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["musicservic",{"_index":107,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["musicservice.mus",{"_index":457,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicservice.music$.subscribe(a",{"_index":459,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicsubscript",{"_index":140,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppVolumeComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namechar",{"_index":237,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["nan",{"_index":342,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["navig",{"_index":1152,"title":{},"body":{"index.html":{}}}],["need",{"_index":328,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["new",{"_index":799,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/SizeService.html":{},"index.html":{}}}],["ng",{"_index":1149,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":974,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ngafterviewinit",{"_index":153,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["ngmodel)]=\"selectedeffectremov",{"_index":357,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["ngmodul",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":196,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["noop",{"_index":976,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["normalize('nfd",{"_index":317,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["normfreq",{"_index":682,"title":{},"body":{"injectables/EffectsService.html":{}}}],["notch",{"_index":755,"title":{},"body":{"injectables/EffectsService.html":{}}}],["npm",{"_index":1168,"title":{},"body":{"index.html":{}}}],["null",{"_index":303,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["number",{"_index":108,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["number(a.id",{"_index":537,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["number(id",{"_index":798,"title":{},"body":{"injectables/EffectsService.html":{}}}],["number(localstorage.getitem('height",{"_index":1037,"title":{},"body":{"injectables/SizeService.html":{}}}],["number(localstorage.getitem('width",{"_index":1035,"title":{},"body":{"injectables/SizeService.html":{}}}],["number(this.selectedeffects[i][j",{"_index":538,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["number(valu",{"_index":379,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["on(deck",{"_index":903,"title":{},"body":{"injectables/PlayerService.html":{}}}],["onchangecallback",{"_index":980,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ondestroy",{"_index":79,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ondocumentclick(ev",{"_index":1000,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ondragover(ev",{"_index":594,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ontouchedcallback",{"_index":979,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["opac",{"_index":171,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["option",{"_index":106,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outputgain",{"_index":725,"title":{},"body":{"injectables/EffectsService.html":{}}}],["overdr",{"_index":724,"title":{},"body":{"injectables/EffectsService.html":{}}}],["overview",{"_index":1198,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1121,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":178,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["pan",{"_index":677,"title":{},"body":{"injectables/EffectsService.html":{}}}],["panner",{"_index":676,"title":{},"body":{"injectables/EffectsService.html":{}}}],["paramet",{"_index":104,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["pc",{"_index":1106,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["peak",{"_index":754,"title":{},"body":{"injectables/EffectsService.html":{}}}],["percent",{"_index":991,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["phaser",{"_index":684,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ping",{"_index":672,"title":{},"body":{"injectables/EffectsService.html":{}}}],["pingpongdelay",{"_index":674,"title":{},"body":{"injectables/EffectsService.html":{}}}],["pitch",{"_index":86,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["playback",{"_index":917,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player.servic",{"_index":859,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["playerserv",{"_index":506,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["playerservic",{"_index":102,"title":{"injectables/PlayerService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["playfromposit",{"_index":885,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playfromposition(deck",{"_index":906,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpaus",{"_index":93,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["playpause(deck",{"_index":908,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plugin",{"_index":168,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["point",{"_index":332,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["pong",{"_index":673,"title":{},"body":{"injectables/EffectsService.html":{}}}],["possibl",{"_index":689,"title":{},"body":{"injectables/EffectsService.html":{}}}],["preparedeffect",{"_index":801,"title":{},"body":{"injectables/EffectsService.html":{}}}],["preparedeffects.push(new",{"_index":802,"title":{},"body":{"injectables/EffectsService.html":{}}}],["privat",{"_index":139,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["prod",{"_index":1163,"title":{},"body":{"index.html":{}}}],["product",{"_index":1165,"title":{},"body":{"index.html":{}}}],["progresscolor",{"_index":166,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["project",{"_index":1140,"title":{},"body":{"index.html":{}}}],["properli",{"_index":385,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["properti",{"_index":84,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["protractor",{"_index":1174,"title":{},"body":{"index.html":{}}}],["provid",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["providedin",{"_index":786,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/SizeService.html":{}}}],["purpl",{"_index":167,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["q",{"_index":747,"title":{},"body":{"injectables/EffectsService.html":{}}}],["queri",{"_index":441,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["rang",{"_index":688,"title":{},"body":{"injectables/EffectsService.html":{}}}],["rate",{"_index":685,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ratio",{"_index":741,"title":{},"body":{"injectables/EffectsService.html":{}}}],["reactiveformsmodul",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["reader",{"_index":863,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onerror",{"_index":869,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onload",{"_index":866,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.readasdataurl(song",{"_index":865,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.result",{"_index":868,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["readm",{"_index":1180,"title":{},"body":{"index.html":{}}}],["recievedfil",{"_index":488,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["recievedfiles(fil",{"_index":493,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["recommend",{"_index":392,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["red",{"_index":165,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["registeronchang",{"_index":950,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registeronchange(fn",{"_index":960,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouch",{"_index":951,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouched(fn",{"_index":963,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["releas",{"_index":739,"title":{},"body":{"injectables/EffectsService.html":{}}}],["reload",{"_index":1154,"title":{},"body":{"index.html":{}}}],["remov",{"_index":356,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["removeeffect",{"_index":244,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{}}}],["removeeffect(id",{"_index":657,"title":{},"body":{"injectables/EffectsService.html":{}}}],["removesong",{"_index":444,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["removesong(song",{"_index":449,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["replace(/[\\u0300",{"_index":318,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["requestanimationfram",{"_index":158,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["reset",{"_index":224,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["resetcu",{"_index":94,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["resetdisc",{"_index":95,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["reseteq",{"_index":612,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["reseteq(deck",{"_index":617,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["resetpitch",{"_index":96,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["resetremov",{"_index":245,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["resolut",{"_index":548,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["reson",{"_index":666,"title":{},"body":{"injectables/EffectsService.html":{}}}],["result",{"_index":70,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":111,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["right",{"_index":678,"title":{},"body":{"injectables/EffectsService.html":{}}}],["root",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/SizeService.html":{}}}],["root'},{'nam",{"_index":43,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["rotat",{"_index":87,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["roulett",{"_index":63,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["roulettecontrollercompon",{"_index":62,"title":{"components/RouletteControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["roundicon",{"_index":36,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["rout",{"_index":480,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":481,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":483,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":479,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1148,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":134,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/SizeService.html":{},"dependencies.html":{}}}],["safari",{"_index":781,"title":{},"body":{"injectables/EffectsService.html":{}}}],["save",{"_index":886,"title":{},"body":{"injectables/PlayerService.html":{}}}],["save(deck",{"_index":910,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeffect",{"_index":887,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeffects(deck",{"_index":912,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeq",{"_index":888,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeq(eq",{"_index":914,"title":{},"body":{"injectables/PlayerService.html":{}}}],["scaffold",{"_index":1156,"title":{},"body":{"index.html":{}}}],["search",{"_index":474,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{}}}],["search'},{'nam",{"_index":55,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["search.compon",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.css",{"_index":485,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.html",{"_index":486,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.t",{"_index":484,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:15",{"_index":491,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:19",{"_index":495,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:9",{"_index":489,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search/app",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"components/AppSearchComponent.html":{}}}],["searchmus",{"_index":464,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchmusic(this.queri",{"_index":470,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchqueri",{"_index":465,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["see",{"_index":1186,"title":{},"body":{"index.html":{}}}],["selectedeffect",{"_index":238,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["selectedeffectremov",{"_index":239,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["sensit",{"_index":765,"title":{},"body":{"injectables/EffectsService.html":{}}}],["serv",{"_index":1150,"title":{},"body":{"index.html":{}}}],["server",{"_index":1147,"title":{},"body":{"index.html":{}}}],["services/effects.servic",{"_index":277,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["services/mus",{"_index":130,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["services/player.servic",{"_index":132,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["services/size.servic",{"_index":373,"title":{},"body":{"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{}}}],["set",{"_index":499,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{}}}],["setact",{"_index":568,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["setactive(act",{"_index":582,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["seteq",{"_index":613,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["setinterv",{"_index":144,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["setpitch",{"_index":889,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setpitch(deck",{"_index":916,"title":{},"body":{"injectables/PlayerService.html":{}}}],["settings'},{'nam",{"_index":57,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["settings.compon",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["settings.component.css",{"_index":500,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.html",{"_index":501,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.t",{"_index":498,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:10",{"_index":507,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:16",{"_index":515,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":514,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":513,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":512,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:20",{"_index":516,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:21",{"_index":518,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:35",{"_index":510,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:42",{"_index":511,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings/app",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"components/AppSettingsComponent.html":{}}}],["setvalu",{"_index":1049,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["setvolum",{"_index":890,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setvolume(deck",{"_index":919,"title":{},"body":{"injectables/PlayerService.html":{}}}],["shell",{"_index":1046,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetheight",{"_index":1102,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetwidth",{"_index":1101,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shellview",{"_index":1047,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shift",{"_index":343,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["shownmus",{"_index":442,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["showtim",{"_index":170,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["signal",{"_index":713,"title":{},"body":{"injectables/EffectsService.html":{}}}],["size",{"_index":181,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["size[1",{"_index":542,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["sizeservic",{"_index":369,"title":{"injectables/SizeService.html":{}},"body":{"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/SizeService.html":{}}}],["sizeservice.getheight",{"_index":377,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["sizeservice.getwidth",{"_index":375,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["sizeservice.height$.subscribe(valu",{"_index":380,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["sizeservice.width$.subscribe(valu",{"_index":378,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["slider",{"_index":66,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["slidercontrollercompon",{"_index":65,"title":{"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["smallval",{"_index":1100,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["smashicon",{"_index":31,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["someth",{"_index":257,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["song",{"_index":88,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["song.nam",{"_index":216,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["sound",{"_index":773,"title":{},"body":{"injectables/EffectsService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["spanish",{"_index":544,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["src/.../app",{"_index":1136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":478,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/app",{"_index":6,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/roulett",{"_index":942,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["src/app/components/slid",{"_index":1044,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["src/app/services/effects.service.t",{"_index":637,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:226",{"_index":655,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:229",{"_index":656,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:232",{"_index":646,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:238",{"_index":658,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:242",{"_index":648,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:251",{"_index":651,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:366",{"_index":654,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:384",{"_index":644,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:75",{"_index":783,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:8",{"_index":702,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/mus",{"_index":834,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["src/app/services/player.service.t",{"_index":875,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:10",{"_index":923,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:11",{"_index":922,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:12",{"_index":925,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:13",{"_index":929,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:14",{"_index":921,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:15",{"_index":931,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:16",{"_index":932,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:17",{"_index":930,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:18",{"_index":924,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:19",{"_index":926,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:20",{"_index":891,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:27",{"_index":911,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:33",{"_index":920,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:36",{"_index":918,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:39",{"_index":905,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:42",{"_index":902,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:45",{"_index":909,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:48",{"_index":901,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:51",{"_index":894,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:58",{"_index":895,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:64",{"_index":915,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:69",{"_index":913,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:76",{"_index":893,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:83",{"_index":897,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:86",{"_index":899,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:89",{"_index":907,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/size.service.t",{"_index":1015,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:10",{"_index":1026,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:11",{"_index":1025,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:12",{"_index":1031,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:13",{"_index":1020,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:23",{"_index":1022,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:36",{"_index":1024,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:40",{"_index":1023,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:8",{"_index":1029,"title":{},"body":{"injectables/SizeService.html":{}}}],["src/app/services/size.service.ts:9",{"_index":1027,"title":{},"body":{"injectables/SizeService.html":{}}}],["stage",{"_index":1188,"title":{},"body":{"index.html":{}}}],["stage.surge.sh",{"_index":1191,"title":{},"body":{"index.html":{}}}],["start",{"_index":472,"title":{"index.html":{}},"body":{"components/AppMusicListComponent.html":{},"injectables/PlayerService.html":{}}}],["startcu",{"_index":97,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["startcue(cu",{"_index":121,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["state",{"_index":1189,"title":{},"body":{"index.html":{}}}],["step",{"_index":337,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"injectables/EffectsService.html":{},"miscellaneous/functions.html":{}}}],["stepvalid",{"_index":1137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stepvalidator(actualconfig.step",{"_index":295,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["stepvalidator(step",{"_index":325,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"miscellaneous/functions.html":{}}}],["stereo",{"_index":780,"title":{},"body":{"injectables/EffectsService.html":{}}}],["stereophas",{"_index":694,"title":{},"body":{"injectables/EffectsService.html":{}}}],["stopdrag",{"_index":596,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["store",{"_index":1160,"title":{},"body":{"index.html":{}}}],["string",{"_index":271,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{}}}],["string(mus.nam",{"_index":468,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["style=\"width:250px",{"_index":358,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["subject",{"_index":849,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/SizeService.html":{}}}],["subscript",{"_index":133,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["support",{"_index":1193,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1194,"title":{},"body":{"modules.html":{}}}],["sweep",{"_index":764,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tab",{"_index":563,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs'},{'nam",{"_index":59,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tabs.compon",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.component.css",{"_index":564,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.html",{"_index":565,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.t",{"_index":562,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:10",{"_index":584,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:11",{"_index":585,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:12",{"_index":586,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:13",{"_index":587,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:14",{"_index":583,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:17",{"_index":580,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:19",{"_index":572,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:24",{"_index":579,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:31",{"_index":577,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:37",{"_index":573,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:40",{"_index":581,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs/app",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/AppTabsComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["test",{"_index":1167,"title":{},"body":{"index.html":{}}}],["tfg",{"_index":1139,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":191,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.activeeffects[deck",{"_index":935,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.actualheight",{"_index":1036,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.actualwidth",{"_index":1034,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.applyeffect",{"_index":937,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.availableeffect",{"_index":520,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.availableeffects.find(b",{"_index":523,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.builder.group(config",{"_index":301,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config",{"_index":300,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config.id",{"_index":983,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.config.max",{"_index":985,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.min",{"_index":984,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.valid",{"_index":308,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config.valu",{"_index":312,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.config.vert",{"_index":1098,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.config.zindex",{"_index":1119,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.configslid",{"_index":982,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.max",{"_index":993,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.min",{"_index":992,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.cu",{"_index":214,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.cues.length",{"_index":208,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.cues.push(cu",{"_index":211,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.cues.shift",{"_index":210,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.cues[cue].po",{"_index":213,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.deck[deck].getcurrenttim",{"_index":939,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deck[deck].getdur",{"_index":940,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deck[deck].seekandcenter(start",{"_index":941,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deckloader[0].asobserv",{"_index":852,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[1].asobserv",{"_index":853,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[deck].next(this.decksongs[deck",{"_index":862,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.decknumb",{"_index":156,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.decksongs[deck",{"_index":861,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.defaultstep",{"_index":297,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.drag",{"_index":592,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.effect",{"_index":150,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{}}}],["this.effectloader[0].asobserv",{"_index":927,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectloader[1].asobserv",{"_index":928,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectloader[deck].next(this.effects[deck",{"_index":938,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effects.filter(effect",{"_index":797,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects.find",{"_index":314,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effects.map(c",{"_index":521,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects.push(effect",{"_index":794,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects.reduce((valoranterior",{"_index":790,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects[0",{"_index":527,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects[1",{"_index":530,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effectscreatorarray",{"_index":282,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectserv.addeffect",{"_index":309,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectserv.createeffects(this.deck[deck].backend.ac",{"_index":936,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectserv.geteffect",{"_index":284,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["this.effectserv.geteffectscr",{"_index":283,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectserv.removeeffect(this.selectedeffectremov",{"_index":322,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectstruct",{"_index":285,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectstruct.config",{"_index":288,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.effectstruct.nam",{"_index":311,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.fills",{"_index":1113,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.fold",{"_index":996,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.height",{"_index":376,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["this.height.asobserv",{"_index":1028,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.height.next(height",{"_index":1039,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.isdefined(actualconfig.min",{"_index":289,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.isdefined(actualconfig.valu",{"_index":298,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.maxim",{"_index":588,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.music.push(song",{"_index":872,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.music.splice(this.music.indexof(song",{"_index":874,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musiclist",{"_index":456,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicloader.asobserv",{"_index":856,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicloader.next(this.mus",{"_index":873,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicservic",{"_index":455,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.musicservice.decksongs$[this.decknumber].subscribe(a",{"_index":187,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.musicservice.deletesong(song",{"_index":461,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicservice.load(deck",{"_index":460,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicsubscript",{"_index":186,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.musicsubscription.unsubscrib",{"_index":197,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.nam",{"_index":310,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.name.length",{"_index":320,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.namechar",{"_index":321,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.onchangecallback",{"_index":998,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.slid",{"_index":1120,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.valu",{"_index":995,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.ontouchedcallback",{"_index":997,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.pitch",{"_index":194,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerserv.effects$[0].subscribe(effect",{"_index":526,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.effects$[1].subscribe(effect",{"_index":529,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.saveeffect",{"_index":535,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerservic",{"_index":860,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.playerservice.activateeffect(this.decknumb",{"_index":200,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.effects$[this.decknumber].subscribe(effect",{"_index":147,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.getcurrenttime(this.decknumb",{"_index":205,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.getduration(this.decknumb",{"_index":206,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.isplaying(this.decknumb",{"_index":199,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.load(deck",{"_index":867,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.playerservice.on(this.decknumb",{"_index":183,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.playfromposition(this.decknumb",{"_index":212,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.playpause(this.decknumb",{"_index":198,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.sav",{"_index":159,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.setpitch(deck",{"_index":201,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.queri",{"_index":462,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.recievedfiles(event.datatransfer.fil",{"_index":591,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.recievedfiles(fileinput.target.fil",{"_index":496,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["this.reset",{"_index":313,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.resetcu",{"_index":188,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.resetdisc",{"_index":185,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.reseteq(0",{"_index":632,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["this.resetpitch",{"_index":189,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.resetremov",{"_index":323,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.rot",{"_index":145,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["this.selectedeffect",{"_index":302,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppSettingsComponent.html":{}}}],["this.selectedeffectremov",{"_index":304,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.shel",{"_index":1099,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shellview.nativeel",{"_index":1117,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shownmus",{"_index":463,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.siz",{"_index":533,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.size.split('x",{"_index":540,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.sizeservice.changesize(nul",{"_index":539,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.sizeservice.changesize(size[0",{"_index":541,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.sizeservice.getheight",{"_index":532,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.sizeservice.getwidth",{"_index":531,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.slid",{"_index":1105,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.song",{"_index":190,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.thumbheight",{"_index":1109,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.thumbwidth",{"_index":1110,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.updatemus",{"_index":458,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.validnam",{"_index":307,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["this.valu",{"_index":986,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.volumemast",{"_index":631,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["this.width",{"_index":374,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["this.width.asobserv",{"_index":1030,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.width.next(width",{"_index":1038,"title":{},"body":{"injectables/SizeService.html":{}}}],["this.zindex",{"_index":1118,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thought",{"_index":388,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["threshold",{"_index":735,"title":{},"body":{"injectables/EffectsService.html":{}}}],["thumb",{"_index":987,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["thumbheight",{"_index":1052,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbleft",{"_index":1054,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbsiz",{"_index":1108,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbtop",{"_index":1053,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbwidth",{"_index":1051,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["time",{"_index":391,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["tolowercas",{"_index":316,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["track",{"_index":988,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["trackheight",{"_index":1060,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackleft",{"_index":1062,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracksiz",{"_index":1111,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracktop",{"_index":1061,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackwidth",{"_index":1059,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trebble0",{"_index":606,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["trebble1",{"_index":607,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["tremolo",{"_index":757,"title":{},"body":{"injectables/EffectsService.html":{}}}],["true",{"_index":152,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tuna",{"_index":784,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["tuna(ac",{"_index":800,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tuna[effect.type](effect.config",{"_index":803,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tunaj",{"_index":785,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["type",{"_index":105,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":305,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["u036f]/g",{"_index":319,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{}}}],["undefin",{"_index":306,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["unfold",{"_index":952,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["unit",{"_index":1166,"title":{},"body":{"index.html":{}}}],["updateeffect",{"_index":246,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["updateeffect(effect",{"_index":262,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["updatemus",{"_index":445,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["us",{"_index":732,"title":{},"body":{"injectables/EffectsService.html":{},"index.html":{}}}],["useexist",{"_index":977,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["val",{"_index":1104,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["valid",{"_index":279,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validatorfn",{"_index":280,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validators.max(actualconfig.max",{"_index":294,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validators.min(actualconfig.min",{"_index":293,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validators.requir",{"_index":292,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["validnam",{"_index":240,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["valoractu",{"_index":791,"title":{},"body":{"injectables/EffectsService.html":{}}}],["valoractual.id",{"_index":793,"title":{},"body":{"injectables/EffectsService.html":{}}}],["valu",{"_index":124,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["value.tostring().split('",{"_index":344,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["value[0",{"_index":349,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["value[1",{"_index":347,"title":{},"body":{"components/AppEffectsCreatorComponent.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["version",{"_index":1144,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":989,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["via",{"_index":1170,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":1070,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["viewchild('slidershel",{"_index":1097,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["void",{"_index":112,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"injectables/SizeService.html":{},"components/SliderControllerComponent.html":{}}}],["volum",{"_index":599,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["volume'},{'nam",{"_index":61,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppEffectsCreatorComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volume.compon",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["volume.component.css",{"_index":600,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.html",{"_index":601,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.t",{"_index":598,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:11",{"_index":614,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:17",{"_index":627,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:18",{"_index":628,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:19",{"_index":629,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:20",{"_index":620,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:21",{"_index":622,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:22",{"_index":625,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:23",{"_index":621,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:24",{"_index":623,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:25",{"_index":626,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:26",{"_index":624,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:27",{"_index":616,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:40",{"_index":619,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:44",{"_index":618,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume/app",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"components/AppVolumeComponent.html":{}}}],["volume0",{"_index":608,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume1",{"_index":609,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volumemast",{"_index":610,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["wah",{"_index":760,"title":{},"body":{"injectables/EffectsService.html":{}}}],["wahwah",{"_index":759,"title":{},"body":{"injectables/EffectsService.html":{}}}],["warn",{"_index":382,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["wavecolor",{"_index":164,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurf",{"_index":135,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["wavesurfer.cr",{"_index":160,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurfer.j",{"_index":136,"title":{},"body":{"components/AppDeckComponent.html":{},"dependencies.html":{}}}],["wavesurfer.js/dist/plugin/wavesurfer.cursor.min.j",{"_index":138,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["webapp",{"_index":1185,"title":{},"body":{"index.html":{}}}],["wetlevel",{"_index":718,"title":{},"body":{"injectables/EffectsService.html":{}}}],["width",{"_index":366,"title":{},"body":{"components/AppLayoutComponent.html":{},"injectables/SizeService.html":{}}}],["window",{"_index":367,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["window.innerheight);els",{"_index":381,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["window:dragleav",{"_index":570,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragov",{"_index":571,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragover(ev",{"_index":576,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["work",{"_index":384,"title":{},"body":{"components/AppLayoutComponent.html":{},"injectables/EffectsService.html":{}}}],["writevalu",{"_index":953,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["writevalue(valu",{"_index":967,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["www.flaticon.com",{"_index":32,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["x",{"_index":534,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["zindex",{"_index":1048,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["zone.j",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppAboutComponent.html":{"url":"components/AppAboutComponent.html","title":"component - AppAboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppAboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-about/app-about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                app-about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-about.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-about/app-about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './app-about.component.html',\n  styleUrls: ['./app-about.component.css']\n})\nexport class AppAboutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  Content attribution:\n\n\n\n  \n  \n  \n  Icons made by\n    Smashicons\n    from\n    www.flaticon.com\n    is licensed by\n    CC 3.0 BY\n  \n\n\n\n  \n  \n  Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY\n\n\n\n  \n  \n  Icons made by Freepik from www.flaticon.com is licensed by CC 3.0 BY\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Content attribution:        Icons made by    Smashicons    from    www.flaticon.com    is licensed by    CC 3.0 BY        Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY      Icons made by Freepik from www.flaticon.com is licensed by CC 3.0 BY'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppAboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n-->\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppDeckComponent.html":{"url":"components/AppDeckComponent.html","title":"component - AppDeckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppDeckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-deck/app-deck.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deck\n            \n\n            \n                styleUrls\n                app-deck.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-deck.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cues\n                            \n                            \n                                effects\n                            \n                            \n                                pitch\n                            \n                            \n                                rotation\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCUE\n                            \n                            \n                                applyEffect\n                            \n                            \n                                changePitch\n                            \n                            \n                                playPause\n                            \n                            \n                                resetCUE\n                            \n                            \n                                resetDisc\n                            \n                            \n                                resetPitch\n                            \n                            \n                                rotate\n                            \n                            \n                                startCUE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deckNumber\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-deck/app-deck.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deckNumber\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCUE\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCUE()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffect(i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changePitch\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangePitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCUE\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCUE()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetDisc\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetDisc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startCUE\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartCUE(cue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cues:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [{}, {}, {}, {}, {}, {}] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitch:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            song\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        song:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { PlayerService } from '../../services/player.service';\nimport { Subscription } from 'rxjs';\nimport * as WaveSurfer from 'wavesurfer.js';\nimport * as Cursor from 'wavesurfer.js/dist/plugin/wavesurfer.cursor.min.js';\n\n@Component({\n  selector: 'app-deck',\n  templateUrl: './app-deck.component.html',\n  styleUrls: ['./app-deck.component.css']\n})\nexport class AppDeckComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  deckNumber: number;\n  private musicSubscription: Subscription;\n  rotation = 0;\n  private active = false;\n  song: any;\n  effects = [{}, {}, {}, {}, {}, {}] as any;\n  pitch = 0;\n  cues = [];\n  constructor(private musicService: MusicLoaderService, private playerService: PlayerService) {}\n  ngOnInit() {\n    setInterval(() => {\n      this.rotate();\n    }, 50);\n    this.playerService.effects$[this.deckNumber].subscribe(effects => {\n      const eff = effects as any;\n      this.effects = eff.filter(_ => true);\n    });\n  }\n  ngAfterViewInit(): void {\n    const height = document.getElementById('deck_' + this.deckNumber + '_wave').offsetHeight;\n    requestAnimationFrame(() => {\n      this.playerService.save(\n        this.deckNumber,\n        WaveSurfer.create({\n          container: '#deck_' + this.deckNumber + '_wave',\n          waveColor: 'red',\n          progressColor: 'purple',\n          height: height,\n          plugins: [\n            Cursor.create({\n              showTime: true,\n              opacity: 1,\n              customShowTimeStyle: {\n                'background-color': '#000',\n                color: '#fff',\n                padding: '2px',\n                height: height,\n                'font-size': '10px'\n              }\n            })\n          ]\n        })\n      );\n      this.playerService.on(this.deckNumber, 'finish', () => {\n        this.resetDisc();\n      });\n    });\n    this.musicSubscription = this.musicService.decksongs$[this.deckNumber].subscribe(a => {\n      this.resetDisc();\n      this.resetCUE();\n      this.resetPitch();\n      this.song = a as File;\n    });\n  }\n  rotate() {\n    if (this.active) {\n      this.rotation = (this.rotation + (10 * (100 + this.pitch)) / 100) % 360;\n    }\n  }\n  resetDisc() {\n    this.active = false;\n    this.rotation = 0;\n  }\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n  playPause() {\n    this.playerService.playPause(this.deckNumber);\n    this.active = this.playerService.isPlaying(this.deckNumber);\n  }\n  applyEffect(i) {\n    this.playerService.activateEffect(this.deckNumber, i);\n  }\n  changePitch() {\n    const deck = this.deckNumber;\n    this.playerService.setPitch(deck, (100 + this.pitch) / 100);\n  }\n  resetPitch() {\n    const deck = this.deckNumber;\n    this.pitch = 0;\n    this.playerService.setPitch(deck, 1);\n  }\n  addCUE() {\n    const cue = {};\n    console.log(this.playerService.getCurrentTime(this.deckNumber));\n    console.log(this.playerService.getDuration(this.deckNumber));\n    cue['percent'] =\n      (this.playerService.getCurrentTime(this.deckNumber) / this.playerService.getDuration(this.deckNumber)) * 100;\n    cue['pos'] = this.playerService.getCurrentTime(this.deckNumber) / this.playerService.getDuration(this.deckNumber);\n    if (this.cues.length === 4) {\n      this.cues.shift();\n    }\n    this.cues.push(cue);\n  }\n  startCUE(cue) {\n    this.playerService.playFromPosition(this.deckNumber, this.cues[cue].pos);\n  }\n  resetCUE() {\n    this.cues = [];\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        \n        \n          \n            CUE {{i+1}}\n          \n        \n      \n    \n\n    \n      \n        {{song.name}}\n      \n\n      \n        \n          \n            \n          \n          \n            2x\n            4x\n            8x\n            16x\n            32x\n          \n        \n        \n          \n            \n              CUEs\n              \n                1\n                2\n                3\n                4\n                Reset\n              \n              Effects\n              \n                \n                  1\n                  2\n                  3\n                \n                \n                  4\n                  5\n                  6\n                \n              \n            \n            \n              \n                {{pitch}}%\n              \n              \n                \n              \n              \n                \n              \n\n            \n          \n          \n            CUE\n            \n              \n                \n                \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      CUE {{i+1}}                                              {{song.name}}                                                                          2x            4x            8x            16x            32x                                                              CUEs                              1                2                3                4                Reset                            Effects                                                1                  2                  3                                                  4                  5                  6                                                                                    {{pitch}}%                                                                                                                                                  CUE                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppDeckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppEffectsCreatorComponent.html":{"url":"components/AppEffectsCreatorComponent.html","title":"component - AppEffectsCreatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppEffectsCreatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-effects-creator/app-effects-creator.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-effects-creator\n            \n\n            \n                styleUrls\n                app-effects-creator.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-effects-creator.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                defaultStep\n                            \n                            \n                                effects\n                            \n                            \n                                effectsCreatorArray\n                            \n                            \n                                effectStruct\n                            \n                            \n                                JSON\n                            \n                            \n                                name\n                            \n                            \n                                nameChars\n                            \n                            \n                                selectedEffect\n                            \n                            \n                                selectedEffectRemove\n                            \n                            \n                                validName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkName\n                            \n                            \n                                createEffect\n                            \n                            \n                                isDefined\n                            \n                            \n                                removeEffect\n                            \n                            \n                                reset\n                            \n                            \n                                resetRemove\n                            \n                            \n                                updateEffect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkName\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEffect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDefined\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDefined(something: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        something\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveEffect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetRemove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateEffect(effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.01\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsCreatorArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsCreatorArray:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectStruct\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectStruct:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JSON:     \n\n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameChars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nameChars:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffect:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffectRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffectRemove:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validName:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-effects-creator/app-effects-creator.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EffectsService } from '../../services/effects.service';\nimport { FormBuilder, FormGroup, AbstractControl, Validators, ValidatorFn } from '@angular/forms';\n\n@Component({\n  selector: 'app-effects-creator',\n  templateUrl: './app-effects-creator.component.html',\n  styleUrls: ['./app-effects-creator.component.css']\n})\nexport class AppEffectsCreatorComponent implements OnInit {\n  effectsCreatorArray: any;\n  effects: any;\n  selectedEffect: string;\n  selectedEffectRemove: string;\n  effectStruct: any;\n  JSON = JSON;\n  config: FormGroup;\n  name = '';\n  nameChars = 5;\n  validName = false;\n  defaultStep = 0.01;\n  constructor(private effectServ: EffectsService, private builder: FormBuilder) {\n    this.effectsCreatorArray = this.effectServ.getEffectsCreator();\n    this.effects = this.effectServ.getEffects();\n  }\n  ngOnInit() {}\n  updateEffect(effect) {\n    this.effectStruct = JSON.parse(effect);\n    const config = {};\n    for (const actualConfig of this.effectStruct.configs) {\n      if (this.isDefined(actualConfig.min)) {\n        config[actualConfig.name] = [\n          actualConfig.default,\n          [\n            Validators.required,\n            Validators.min(actualConfig.min),\n            Validators.max(actualConfig.max),\n            stepValidator(actualConfig.step ? actualConfig.step : this.defaultStep)\n          ]\n        ];\n      }\n      if (this.isDefined(actualConfig.values)) {\n        config[actualConfig.name] = actualConfig.default;\n      }\n      if (this.isDefined(actualConfig.value)) {\n        config[actualConfig.name] = actualConfig.value;\n      }\n    }\n    this.config = this.builder.group(config);\n  }\n  reset() {\n    this.selectedEffect = null;\n    this.effectStruct = null;\n  }\n  resetRemove() {\n    this.selectedEffectRemove = null;\n  }\n  isDefined(something) {\n    return typeof something !== 'undefined';\n  }\n  createEffect() {\n    if (this.validName && this.config.valid) {\n      this.effectServ.addEffect({\n        name: this.name,\n        type: this.effectStruct.name,\n        active: false,\n        config: this.config.value\n      });\n      this.effects = this.effectServ.getEffects();\n      this.reset();\n    }\n  }\n  checkName() {\n    if (\n      !this.effects.find(\n        effect =>\n          effect.name\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '') ===\n          this.name\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n      ) &&\n      this.name.length >= this.nameChars\n    ) {\n      this.validName = true;\n    } else {\n      this.validName = false;\n    }\n  }\n  removeEffect() {\n    this.effectServ.removeEffect(this.selectedEffectRemove);\n    this.effects = this.effectServ.getEffects();\n    this.resetRemove();\n  }\n}\nfunction stepValidator(step: number): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    // decimalAdjust is needed because of js clunky floating point maths\n    const forbidden = decimalAdjust('round', control.value / step, -5) % 1 !== 0;\n    return forbidden ? { 'forbidden number step': { value: control.value } } : null;\n  };\n}\nfunction decimalAdjust(type, value, exp) {\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math[type](value);\n  }\n  value = +value;\n  exp = +exp;\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n  // Shift\n  value = value.toString().split('e');\n  value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp)));\n  // Shift back\n  value = value.toString().split('e');\n  return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));\n}\n\n    \n\n    \n        \n  \n    \n      Create effect\n      \n        {{effect.name}}\n      \n    \n  \n  \n    \n      {{effectStruct.name}}\n      {{effectStruct.description}}\n    \n    \n      Name:\n      \n    \n    \n      Configuration:\n    \n    \n      \n        \n          {{config.name}}:\n          \n            \n            \n              {{value}}\n            \n            {{config.value}}\n          \n        \n      \n    \n    Create\n  \n  \n    Remove effect\n    To remove effects you must have at least 6 effects\n    6\" [(ngModel)]=\"selectedEffectRemove\" style=\"width:250px\">\n      {{effect.name}}\n    \n    6\" style=\"width:250px\" (click)=\"removeEffect()\" [disabled]=\"\">Remove\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Create effect              {{effect.name}}                        {{effectStruct.name}}      {{effectStruct.description}}              Name:                    Configuration:                                {{config.name}}:                                                {{value}}                        {{config.value}}                                Create        Remove effect    To remove effects you must have at least 6 effects    6\" [(ngModel)]=\"selectedEffectRemove\" style=\"width:250px\">      {{effect.name}}        6\" style=\"width:250px\" (click)=\"removeEffect()\" [disabled]=\"\">Remove  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppEffectsCreatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppLayoutComponent.html":{"url":"components/AppLayoutComponent.html","title":"component - AppLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-layout/app-layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                app-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-layout.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                width\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sizeService: SizeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-layout/app-layout.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sizeService\n                                                  \n                                                        \n                                                                    SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-layout/app-layout.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-layout/app-layout.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     \n\n                    \n                \n                    \n                        \n                            Default value : window\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-layout/app-layout.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SizeService } from '../../services/size.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './app-layout.component.html',\n  styleUrls: ['./app-layout.component.css']\n})\nexport class AppLayoutComponent {\n  width: number;\n  height: number;\n  window = window;\n  constructor(sizeService: SizeService) {\n    this.width = sizeService.getWidth();\n    this.height = sizeService.getHeight();\n    sizeService.width$.subscribe(value => {\n      if (value) {\n        this.width = Number(value);\n      } else {\n        this.width = null;\n      }\n    });\n    sizeService.height$.subscribe(value => {\n      if (value) {\n        this.height = Number(value) - 1;\n      } else {\n        this.height = null;\n      }\n    });\n  }\n}\n\n    \n\n    \n         window.innerHeight);else warning\">\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n\n  \n    For the application to work properly you must have a higher width than height in your device, thought at least\n    width being 1.2 times the height is recommended.\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' window.innerHeight);else warning\">                                                                                    For the application to work properly you must have a higher width than height in your device, thought at least    width being 1.2 times the height is recommended.  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppEffectsCreatorComponent\n\nAppEffectsCreatorComponent\n\nAppModule -->\n\nAppEffectsCreatorComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppAboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                AppDeckComponent\n                            \n                            \n                                AppEffectsCreatorComponent\n                            \n                            \n                                AppLayoutComponent\n                            \n                            \n                                AppMusicListComponent\n                            \n                            \n                                AppSearchComponent\n                            \n                            \n                                AppSettingsComponent\n                            \n                            \n                                AppTabsComponent\n                            \n                            \n                                AppVolumeComponent\n                            \n                            \n                                RouletteControllerComponent\n                            \n                            \n                                SliderControllerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppDeckComponent } from './components/app-deck/app-deck.component';\nimport { AppLayoutComponent } from './components/app-layout/app-layout.component';\nimport { AppVolumeComponent } from './components/app-volume/app-volume.component';\nimport { SliderControllerComponent } from './components/slider-controller/slider-controller.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouletteControllerComponent } from './components/roulette-controller/roulette-controller.component';\nimport { AppSearchComponent } from './components/app-search/app-search.component';\nimport { AppTabsComponent } from './components/app-tabs/app-tabs.component';\nimport { AppMusicListComponent } from './components/app-music-list/app-music-list.component';\nimport { AppSettingsComponent } from './components/app-settings/app-settings.component';\nimport { AppAboutComponent } from './components/app-about/app-about.component';\nimport { AppEffectsCreatorComponent } from './components/app-effects-creator/app-effects-creator.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppDeckComponent,\n    AppLayoutComponent,\n    AppVolumeComponent,\n    SliderControllerComponent,\n    RouletteControllerComponent,\n    AppSearchComponent,\n    AppTabsComponent,\n    AppMusicListComponent,\n    AppSettingsComponent,\n    AppAboutComponent,\n    AppEffectsCreatorComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppMusicListComponent.html":{"url":"components/AppMusicListComponent.html","title":"component - AppMusicListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppMusicListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-music-list/app-music-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music-list\n            \n\n            \n                styleUrls\n                app-music-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-music-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicList\n                            \n                            \n                                musicService\n                            \n                            \n                                query\n                            \n                            \n                                shownMusic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadOnDeck\n                            \n                            \n                                removeSong\n                            \n                            \n                                updateMusic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOnDeck\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadOnDeck(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeSong\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateMusic()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicList:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shownMusic:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-music-list',\n  templateUrl: './app-music-list.component.html',\n  styleUrls: ['./app-music-list.component.css']\n})\nexport class AppMusicListComponent implements OnDestroy {\n  musicService: MusicLoaderService;\n  private musicSubscription: Subscription;\n  musicList: File[];\n  shownMusic: File[];\n  query: string;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n    this.musicList = musicService.music;\n    this.updateMusic();\n    this.musicSubscription = musicService.music$.subscribe(a => {\n      this.musicList = a as File[];\n      this.updateMusic();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n\n  loadOnDeck(deck, song) {\n    this.musicService.load(deck, song);\n  }\n  removeSong(song) {\n    this.musicService.deleteSong(song);\n  }\n  updateMusic() {\n    if (!this.query) {\n      this.shownMusic = this.musicList;\n    } else {\n      const searchMusic = (searchQuery, music: any[]) => {\n        const lowSearch = searchQuery\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n        return music.filter(mus => {\n          return String(mus.name)\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .includes(lowSearch);\n        });\n      };\n      this.shownMusic = searchMusic(this.query, this.musicList);\n    }\n  }\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      \n        \n          Song\n          \n            \n            \n          \n        \n      \n      Artist -->\n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      {{song.name}}\n       -->\n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n    \n    \n      No songs match {{query}}\n    \n\n  \n  \n    \n    To start load music from the search or drag music here from your computer.\n  \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                                  Song                                                                Artist -->                                                                        {{song.name}}       -->                                                                                                                                          No songs match {{query}}                To start load music from the search or drag music here from your computer.    '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppMusicListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), FormsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSearchComponent.html":{"url":"components/AppSearchComponent.html","title":"component - AppSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-search/app-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                app-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChangeEvent\n                            \n                            \n                                recievedFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChangeEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChangeEvent(fileInput: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileInput\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n@Component({\n  selector: 'app-search',\n  templateUrl: './app-search.component.html',\n  styleUrls: ['./app-search.component.css']\n})\nexport class AppSearchComponent implements OnInit {\n  musicService: MusicLoaderService;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  ngOnInit() {}\n  fileChangeEvent(fileInput: any) {\n    this.recievedFiles(fileInput.target.files);\n  }\n\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n\n    \n    \n      \n      Choose a\n        file\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                          Choose a        file      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSettingsComponent.html":{"url":"components/AppSettingsComponent.html","title":"component - AppSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-settings/app-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                app-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableEffects\n                            \n                            \n                                effects\n                            \n                            \n                                effectsNum\n                            \n                            \n                                JSON\n                            \n                            \n                                selectedEffects\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                changeSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, playerServ: PlayerService, sizeService: SizeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-settings/app-settings.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerServ\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sizeService\n                                                  \n                                                        \n                                                                    SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(i: , j: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        j\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [null, null] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JSON:     \n\n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        size:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'auto'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EffectsService } from '../../services/effects.service';\nimport { PlayerService } from '../../services/player.service';\nimport { SizeService } from '../../services/size.service';\n@Component({\n  selector: 'app-settings',\n  templateUrl: './app-settings.component.html',\n  styleUrls: ['./app-settings.component.css']\n})\nexport class AppSettingsComponent implements OnInit {\n  constructor(private effectServ: EffectsService, private playerServ: PlayerService, private sizeService: SizeService) {\n    this.effects = JSON.parse(JSON.stringify(this.playerServ.effects));\n    this.availableEffects = this.effectServ.getEffects();\n    this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n  }\n  JSON = JSON;\n  effectsNum = 6;\n  effects = [null, null] as any;\n  availableEffects: any;\n  selectedEffects: any;\n  size = 'auto';\n  ngOnInit() {\n    this.playerServ.effects$[0].subscribe(effects => {\n      this.effects[0] = JSON.parse(JSON.stringify(effects));\n      this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n    });\n    this.playerServ.effects$[1].subscribe(effects => {\n      this.effects[1] = JSON.parse(JSON.stringify(effects));\n      this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n    });\n    if (this.sizeService.getWidth() && this.sizeService.getHeight()) {\n      this.size = this.sizeService.getWidth() + 'x' + this.sizeService.getHeight();\n    }\n  }\n  change(i, j) {\n    this.playerServ.saveEffects(\n      i,\n      j,\n      JSON.parse(JSON.stringify(this.availableEffects.find(a => Number(a.id) === Number(this.selectedEffects[i][j]))))\n    );\n  }\n  changeSize() {\n    if (this.size === 'auto') {\n      this.sizeService.changeSize(null, null);\n    } else {\n      const size = this.size.split('x');\n      this.sizeService.changeSize(size[0], size[1]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Language\n\n      \n        Spanish\n        English\n      \n    \n    \n      Template\n      \n        Light\n        Dark\n      \n    \n    \n      Resolution\n\n      \n        Automatic\n        1920x1200\n        1920x1080\n        1600x900\n        1680x1050\n        1366x768\n        1360x768\n        1280x1024\n        1280x800\n        1280x720\n        1024x768\n      \n    \n  \n  \n    \n      Effects deck {{i+1}}\n      \n        \n          Effect {{j+1}}\n          \n            \n              {{availableEffect.name}}\n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Language              Spanish        English                    Template              Light        Dark                    Resolution              Automatic        1920x1200        1920x1080        1600x900        1680x1050        1366x768        1360x768        1280x1024        1280x800        1280x720        1024x768                        Effects deck {{i+1}}                        Effect {{j+1}}                                    {{availableEffect.name}}                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppTabsComponent.html":{"url":"components/AppTabsComponent.html","title":"component - AppTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-tabs/app-tabs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                app-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                dragging\n                            \n                            \n                                maximized\n                            \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                droped\n                            \n                            \n                                maximize\n                            \n                            \n                                recievedFiles\n                            \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:dragleave\n                            \n                            \n                                window:dragover\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-tabs/app-tabs.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragleave\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:dragleave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:dragover(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            droped\n                            \n                            \n                        \n                    \n                \n                \n                    \ndroped(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maximize\n                            \n                            \n                        \n                    \n                \n                \n                    \nmaximize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActive(active: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'music'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragging\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dragging:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maximized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maximized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './app-tabs.component.html',\n  styleUrls: ['./app-tabs.component.css']\n})\nexport class AppTabsComponent {\n  active = 'music';\n  dragging = false;\n  maximized = false;\n  musicService: MusicLoaderService;\n  setActive(active) {\n    this.active = active;\n  }\n  maximize() {\n    this.maximized = !this.maximized;\n  }\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  droped(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.recievedFiles(event.dataTransfer.files);\n    this.dragging = false;\n  }\n  @HostListener('window:dragover', ['$event'])\n  onDragOver(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.dragging = true;\n  }\n  @HostListener('window:dragleave')\n  stopdrag() {\n    this.dragging = false;\n  }\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n        Music\n      \n      \n        Settings\n      \n      \n        Effects creator\n      \n      \n        About\n      \n      \n        \n        \n      \n    \n    \n      \n      \n      \n      \n    \n  \n  \n    Drop your song here\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Music                    Settings                    Effects creator                    About                                                                              Drop your song here  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppVolumeComponent.html":{"url":"components/AppVolumeComponent.html","title":"component - AppVolumeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppVolumeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-volume/app-volume.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volume\n            \n\n            \n                styleUrls\n                app-volume.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-volume.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bass0\n                            \n                            \n                                bass1\n                            \n                            \n                                mid0\n                            \n                            \n                                mid1\n                            \n                            \n                                musicSubscription\n                            \n                            \n                                trebble0\n                            \n                            \n                                trebble1\n                            \n                            \n                                volume0\n                            \n                            \n                                volume1\n                            \n                            \n                                volumeMaster\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeVolume\n                            \n                            \n                                resetEQ\n                            \n                            \n                                setEQ\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService, effectServ: EffectsService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-volume/app-volume.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeVolume(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetEQ(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEQ()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicSubscription:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volumeMaster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volumeMaster:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { PlayerService } from '../../services/player.service';\nimport { EffectsService } from '../../services/effects.service';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './app-volume.component.html',\n  styleUrls: ['./app-volume.component.css']\n})\nexport class AppVolumeComponent implements OnInit, AfterViewInit {\n  constructor(\n    private musicService: MusicLoaderService,\n    private effectServ: EffectsService,\n    private playerService: PlayerService\n  ) { }\n  volume0 = 100;\n  volume1 = 100;\n  volumeMaster = 0;\n  bass0 = 0;\n  mid0 = 0;\n  trebble0 = 0;\n  bass1 = 0;\n  mid1 = 0;\n  trebble1 = 0;\n  musicSubscription = [null, null];\n  changeVolume(deck) {\n    let masterMultiplier = 1;\n    if (deck === 0 && this.volumeMaster > 0) {\n      masterMultiplier = (100 - this.volumeMaster) / 100;\n    }\n    if (deck === 1 && this.volumeMaster  {\n      this.resetEQ(0);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n            High\n            \n          \n          \n            Mid\n            \n          \n          \n            Low\n            \n          \n          \n        \n        \n          \n            High\n            \n          \n          \n            Mid\n            \n          \n          \n            Low\n            \n          \n          \n        \n      \n      \n        \n      \n    \n    \n      \n\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              High                                            Mid                                            Low                                                                      High                                            Mid                                            Low                                                                                      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppVolumeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EffectsService.html":{"url":"injectables/EffectsService.html","title":"injectable - EffectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EffectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/effects.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effects\n                            \n                            \n                                effectsCreator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEffect\n                            \n                            \n                                createEffects\n                            \n                            \n                                createEQ\n                            \n                            \n                                createEQEffect\n                            \n                            \n                                getEffects\n                            \n                            \n                                getEffectsCreator\n                            \n                            \n                                removeEffect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/effects.service.ts:384\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \naddEffect(effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEffects(ac: , effects: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:242\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ac\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        effects\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEQ(bass0: , mid0: , trebble0: , bass1: , mid1: , trebble1: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:251\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bass0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mid0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trebble0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bass1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mid1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trebble1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEQEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEQEffect(deck: , eq: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:366\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        eq\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEffectsCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEffectsCreator()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveEffect(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:238\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      id: 1,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      id: 2,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      id: 3,\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      id: 4,\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      id: 0,\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      id: 5,\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsCreator:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Chorus',\n      effect: 'Chorus',\n      description: 'A basic chorus effect.',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'delay', min: 0, max: 1, default: 0.0045, step: 0.0001 },\n        { name: 'bypass', values: [0, 1], default: 0 }\n      ]\n    },\n    {\n      description: 'A delay effect with feedback and a lowpass filter applied to the delayed signal.',\n      name: 'Delay',\n      effect: 'Delay',\n\n      configs: [\n        { name: 'feedback', min: 0, max: 1, default: 0.45 },\n        { name: 'delayTime', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'wetLevel', min: 0, max: 1, default: 0.25 },\n        { name: 'dryLevel', min: 0, max: 1, default: 1 },\n        { name: 'cutoff', min: 20, max: 22050, default: 2000 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic phaser effect.',\n      name: 'Phaser',\n      effect: 'Phaser',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.2 },\n        { name: 'depth', min: 0, max: 1, default: 0.3 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 30, step: 1 },\n        { name: 'baseModulationFrequency', min: 500, max: 1500, default: 700, step: 1 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic overdrive effect.',\n      name: 'Overdrive',\n      effect: 'Overdrive',\n      configs: [\n        { name: 'outputGain', min: 0, max: 1, default: 0.5 },\n        { name: 'drive', min: 0, max: 1, default: 0.7 },\n        { name: 'curveAmount', min: 0, max: 1, default: 1 },\n        { name: 'algorithmIndex', values: [0, 1, 2, 3, 4, 5], default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A compressor with the option to use automatic makeup gain.',\n      name: 'Compressor',\n      effect: 'Compressor',\n      configs: [\n        { name: 'threshold', min: -100, max: 0, default: -1 },\n        { name: 'makeupGain', min: 0, max: 50, default: 1 },\n        { name: 'attack', min: 0, max: 1000, default: 1 },\n        { name: 'release', min: 0, max: 3000, default: 0 },\n        { name: 'ratio', min: 1, max: 20, default: 4 },\n        { name: 'knee', min: 0, max: 40, default: 5 },\n        { name: 'automakeup', values: [true, false], default: true },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic filter.',\n      name: 'Filter',\n      effect: 'Filter',\n      configs: [\n        { name: 'frequency', min: 20, max: 22050, default: 440, step: 1 },\n        { name: 'Q', min: 0.001, max: 100, default: 1, step: 0.001 },\n        { name: 'gain', min: -40, max: 40, default: 0 },\n        {\n          name: 'filterType',\n          values: ['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch', 'allpass'],\n          default: 'lowpass'\n        },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic tremolo.',\n      name: 'Tremolo',\n      effect: 'Tremolo',\n      configs: [\n        { name: 'intensity', min: 0, max: 1, default: 0.3 },\n        { name: 'rate', min: 0.001, max: 8, default: 4 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A wahwah with an auto wah option.',\n      name: 'WahWah',\n      effect: 'WahWah',\n      configs: [\n        { name: 'automode', values: [true, false], default: true },\n        { name: 'baseFrequency', min: 0, max: 1, default: 0.5 },\n        { name: 'excursionOctaves', min: 1, max: 6, default: 2, step: 1 },\n        { name: 'sweep', min: 0, max: 1, default: 0.2 },\n        { name: 'resonance', min: 1, max: 100, default: 10 },\n        { name: 'sensitivity', min: -1, max: 1, default: 0.5 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A lo- fi bitcrusher effect.',\n      name: 'Bitcrusher',\n      effect: 'Bitcrusher',\n      configs: [\n        { name: 'bits', min: 1, max: 16, default: 4 },\n        { name: 'normfreq', min: 0, max: 1, default: 0.1 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A resonant, analog- sounding filter.',\n      name: 'MoogFilter',\n      effect: 'MoogFilter',\n      configs: [\n        { name: 'cutoff', min: 0, max: 1, default: 0.065, step: 0.001 },\n        { name: 'resonance', min: 0, max: 4, default: 3.5 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A delay that bounces between the left and right channel.',\n      name: 'Ping Pong Delay',\n      effect: 'PingPongDelay',\n      configs: [\n        { name: 'wetLevel', min: 0, max: 1, default: 0.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.3 },\n        { name: 'delayTimeLeft', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'delayTimeRight', min: 1, max: 10000, default: 200, step: 1 }\n      ]\n    },\n    {\n      description: 'A basic gain.',\n      name: 'Gain',\n      effect: 'Gain',\n      configs: [{ name: 'gain', min: 0, max: 40 }]\n    },\n    {\n      description: 'A stereo panner (-1 is left, 1 is right). May not work in Safari and IE.',\n      name: 'Panner',\n      effect: 'Panner',\n      configs: [{ name: 'pan', min: -1, max: 1, default: 0 }]\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:75\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Tuna from 'tunajs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EffectsService {\n  effects = [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      id: 1,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      id: 2,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      id: 3,\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      id: 4,\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      id: 0,\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      id: 5,\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ];\n  effectsCreator = [\n    {\n      name: 'Chorus',\n      effect: 'Chorus',\n      description: 'A basic chorus effect.',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'delay', min: 0, max: 1, default: 0.0045, step: 0.0001 },\n        { name: 'bypass', values: [0, 1], default: 0 }\n      ]\n    },\n    {\n      description: 'A delay effect with feedback and a lowpass filter applied to the delayed signal.',\n      name: 'Delay',\n      effect: 'Delay',\n\n      configs: [\n        { name: 'feedback', min: 0, max: 1, default: 0.45 },\n        { name: 'delayTime', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'wetLevel', min: 0, max: 1, default: 0.25 },\n        { name: 'dryLevel', min: 0, max: 1, default: 1 },\n        { name: 'cutoff', min: 20, max: 22050, default: 2000 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic phaser effect.',\n      name: 'Phaser',\n      effect: 'Phaser',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8, default: 1.2 },\n        { name: 'depth', min: 0, max: 1, default: 0.3 },\n        { name: 'feedback', min: 0, max: 1, default: 0.2 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 30, step: 1 },\n        { name: 'baseModulationFrequency', min: 500, max: 1500, default: 700, step: 1 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic overdrive effect.',\n      name: 'Overdrive',\n      effect: 'Overdrive',\n      configs: [\n        { name: 'outputGain', min: 0, max: 1, default: 0.5 },\n        { name: 'drive', min: 0, max: 1, default: 0.7 },\n        { name: 'curveAmount', min: 0, max: 1, default: 1 },\n        { name: 'algorithmIndex', values: [0, 1, 2, 3, 4, 5], default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A compressor with the option to use automatic makeup gain.',\n      name: 'Compressor',\n      effect: 'Compressor',\n      configs: [\n        { name: 'threshold', min: -100, max: 0, default: -1 },\n        { name: 'makeupGain', min: 0, max: 50, default: 1 },\n        { name: 'attack', min: 0, max: 1000, default: 1 },\n        { name: 'release', min: 0, max: 3000, default: 0 },\n        { name: 'ratio', min: 1, max: 20, default: 4 },\n        { name: 'knee', min: 0, max: 40, default: 5 },\n        { name: 'automakeup', values: [true, false], default: true },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic filter.',\n      name: 'Filter',\n      effect: 'Filter',\n      configs: [\n        { name: 'frequency', min: 20, max: 22050, default: 440, step: 1 },\n        { name: 'Q', min: 0.001, max: 100, default: 1, step: 0.001 },\n        { name: 'gain', min: -40, max: 40, default: 0 },\n        {\n          name: 'filterType',\n          values: ['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch', 'allpass'],\n          default: 'lowpass'\n        },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic tremolo.',\n      name: 'Tremolo',\n      effect: 'Tremolo',\n      configs: [\n        { name: 'intensity', min: 0, max: 1, default: 0.3 },\n        { name: 'rate', min: 0.001, max: 8, default: 4 },\n        { name: 'stereoPhase', min: 0, max: 180, default: 0 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A wahwah with an auto wah option.',\n      name: 'WahWah',\n      effect: 'WahWah',\n      configs: [\n        { name: 'automode', values: [true, false], default: true },\n        { name: 'baseFrequency', min: 0, max: 1, default: 0.5 },\n        { name: 'excursionOctaves', min: 1, max: 6, default: 2, step: 1 },\n        { name: 'sweep', min: 0, max: 1, default: 0.2 },\n        { name: 'resonance', min: 1, max: 100, default: 10 },\n        { name: 'sensitivity', min: -1, max: 1, default: 0.5 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A lo- fi bitcrusher effect.',\n      name: 'Bitcrusher',\n      effect: 'Bitcrusher',\n      configs: [\n        { name: 'bits', min: 1, max: 16, default: 4 },\n        { name: 'normfreq', min: 0, max: 1, default: 0.1 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A resonant, analog- sounding filter.',\n      name: 'MoogFilter',\n      effect: 'MoogFilter',\n      configs: [\n        { name: 'cutoff', min: 0, max: 1, default: 0.065, step: 0.001 },\n        { name: 'resonance', min: 0, max: 4, default: 3.5 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384], default: 4096 }\n      ]\n    },\n    {\n      description: 'A delay that bounces between the left and right channel.',\n      name: 'Ping Pong Delay',\n      effect: 'PingPongDelay',\n      configs: [\n        { name: 'wetLevel', min: 0, max: 1, default: 0.5 },\n        { name: 'feedback', min: 0, max: 1, default: 0.3 },\n        { name: 'delayTimeLeft', min: 1, max: 10000, default: 150, step: 1 },\n        { name: 'delayTimeRight', min: 1, max: 10000, default: 200, step: 1 }\n      ]\n    },\n    {\n      description: 'A basic gain.',\n      name: 'Gain',\n      effect: 'Gain',\n      configs: [{ name: 'gain', min: 0, max: 40 }]\n    },\n    {\n      description: 'A stereo panner (-1 is left, 1 is right). May not work in Safari and IE.',\n      name: 'Panner',\n      effect: 'Panner',\n      configs: [{ name: 'pan', min: -1, max: 1, default: 0 }]\n    }\n  ];\n  getEffects() {\n    return JSON.parse(JSON.stringify(this.effects));\n  }\n  getEffectsCreator() {\n    return JSON.parse(JSON.stringify(this.effectsCreator));\n  }\n  addEffect(effect) {\n    effect.id = this.effects.reduce((valorAnterior, valorActual) => Math.max(valorAnterior, valorActual.id), 0) + 1;\n    this.effects.push(effect);\n    localStorage.setItem('effects', JSON.stringify(this.effects));\n  }\n\n  removeEffect(id) {\n    this.effects = this.effects.filter(effect => effect.id !== Number(id));\n    localStorage.setItem('effects', JSON.stringify(this.effects));\n  }\n  createEffects(ac, effects) {\n    const tuna = new Tuna(ac);\n    const preparedEffects = [];\n    for (const effect of effects) {\n      preparedEffects.push(new tuna[effect.type](effect.config));\n    }\n    return preparedEffects;\n  }\n  // Advanced volume\n  createEQ(bass0, mid0, trebble0, bass1, mid1, trebble1) {\n    const adjustEQValue = value => {\n      if (value > 0) {\n        return value / 5;\n      }\n      return value;\n    };\n    const EQ = [\n      [\n        {\n          f: 32,\n          type: 'lowshelf',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 64,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 125,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 250,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 500,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * bass0 + 0.25 * mid0)\n        },\n        {\n          f: 1000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid0 + 0.25 * bass0)\n        },\n        {\n          f: 2000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid0 + 0.25 * trebble0)\n        },\n        {\n          f: 4000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * trebble0 + 0.25 * mid0)\n        },\n        {\n          f: 8000,\n          type: 'peaking',\n          value: adjustEQValue(trebble0)\n        },\n        {\n          f: 16000,\n          type: 'highshelf',\n          value: adjustEQValue(trebble0)\n        }\n      ],\n      [\n        {\n          f: 32,\n          type: 'lowshelf',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 64,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 125,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 250,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 500,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * bass1 + 0.25 * mid1)\n        },\n        {\n          f: 1000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid1 + 0.25 * bass1)\n        },\n        {\n          f: 2000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid1 + 0.25 * trebble1)\n        },\n        {\n          f: 4000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * trebble1 + 0.25 * mid1)\n        },\n        {\n          f: 8000,\n          type: 'peaking',\n          value: adjustEQValue(trebble1)\n        },\n        {\n          f: 16000,\n          type: 'highshelf',\n          value: adjustEQValue(trebble1)\n        }\n      ]\n    ];\n    return EQ;\n  }\n  createEQEffect(deck, eq) {\n    const filter0 = eq[0].map(band => {\n      const filter = deck[0].backend.ac.createBiquadFilter();\n      filter.type = band.type;\n      filter.gain.value = band.value;\n      filter.Q.value = 1;\n      filter.frequency.value = band.f;\n      return filter;\n    });\n    const filter1 = eq[1].map(band => {\n      const filter = deck[1].backend.ac.createBiquadFilter();\n      filter.type = band.type;\n      filter.gain.value = band.value;\n      filter.Q.value = 1;\n      filter.frequency.value = band.f;\n      return filter;\n    });\n    return [filter0, filter1];\n  }\n  constructor() {\n    if (localStorage.getItem('effects')) {\n      this.effects = JSON.parse(localStorage.getItem('effects'));\n    } else {\n      localStorage.setItem('effects', JSON.stringify(this.effects));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicLoaderService.html":{"url":"injectables/MusicLoaderService.html","title":"injectable - MusicLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MusicLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/music-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deckLoader\n                            \n                            \n                                decksongs\n                            \n                            \n                                decksongs$\n                            \n                            \n                                music\n                            \n                            \n                                music$\n                            \n                            \n                                musicLoader\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSong\n                            \n                            \n                                deleteSong\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSong\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSong(song: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSong\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.musicLoader.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicLoader:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PlayerService } from './player.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicLoaderService {\n  musicLoader = new Subject();\n  music$ = this.musicLoader.asObservable();\n  music: File[] = [];\n  deckLoader = [new Subject(), new Subject()];\n  decksongs$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  decksongs: File[] = [null, null];\n  playerService: PlayerService;\n  constructor(playerService: PlayerService) {\n    this.playerService = playerService;\n  }\n  load(deck, song) {\n    this.decksongs[deck] = song;\n    this.deckLoader[deck].next(this.decksongs[deck]);\n    requestAnimationFrame(() => {\n      const reader = new FileReader();\n      reader.readAsDataURL(song);\n      reader.onload = () => {\n        this.playerService.load(deck, reader.result);\n      };\n      reader.onerror = error => {\n        console.log('Error: ', error);\n      };\n    });\n  }\n  addSong(song: File) {\n    this.music.push(song);\n    this.musicLoader.next(this.music);\n  }\n  deleteSong(song) {\n    this.music.splice(this.music.indexOf(song), 1);\n    this.musicLoader.next(this.music);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/player.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeEffects\n                            \n                            \n                                deck\n                            \n                            \n                                deck$\n                            \n                            \n                                deckLoader\n                            \n                            \n                                deckNum\n                            \n                            \n                                effectLoader\n                            \n                            \n                                effects\n                            \n                            \n                                effects$\n                            \n                            \n                                effectsNum\n                            \n                            \n                                eq\n                            \n                            \n                                eqEffect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateEffect\n                            \n                            \n                                applyEffects\n                            \n                            \n                                equalizer\n                            \n                            \n                                getCurrentTime\n                            \n                            \n                                getDuration\n                            \n                            \n                                isPlaying\n                            \n                            \n                                load\n                            \n                            \n                                on\n                            \n                            \n                                playFromPosition\n                            \n                            \n                                playPause\n                            \n                            \n                                save\n                            \n                            \n                                saveEffects\n                            \n                            \n                                saveEQ\n                            \n                            \n                                setPitch\n                            \n                            \n                                setVolume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activateEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivateEffect(deck: , i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equalizer\n                            \n                            \n                        \n                    \n                \n                \n                    \nequalizer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentTime(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDuration\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDuration(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPlaying(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            on\n                            \n                            \n                        \n                    \n                \n                \n                    \non(deck: , event: , callback: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playFromPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayFromPosition(deck: , start: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        start\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(deck: , wavesurfer: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        wavesurfer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEffects(deck: , i: , effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEQ(eq: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eq\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPitch(deck: , playback: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        playback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetVolume(deck: , volume: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        volume\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeEffects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[], []]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[null, null, null, null, null, null], [null, null, null, null, null, null]]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.effectLoader[0].asObservable(), this.effectLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eq\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eq:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eqEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eqEffect:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport Tuna from 'tunajs';\nimport { EffectsService } from './effects.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  deckLoader = [new Subject(), new Subject()];\n  deck$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  effectLoader = [new Subject(), new Subject()];\n  effects$ = [this.effectLoader[0].asObservable(), this.effectLoader[1].asObservable()];\n  deck: any[] = [null, null];\n  eq = [null, null];\n  eqEffect: any;\n  effectsNum = 6;\n  deckNum = 2;\n  effects = [[null, null, null, null, null, null], [null, null, null, null, null, null]];\n  activeEffects = [[], []];\n  constructor(private effectServ: EffectsService) {\n    for (let i = 0; i  a.active);\n    this.activeEffects[deck] = this.effectServ.createEffects(this.deck[deck].backend.ac, effects);\n    this.applyEffects();\n    this.effectLoader[deck].next(this.effects[deck]);\n  }\n  getCurrentTime(deck) {\n    return this.deck[deck].getCurrentTime();\n  }\n  getDuration(deck) {\n    return this.deck[deck].getDuration();\n  }\n  playFromPosition(deck, start) {\n    this.deck[deck].seekAndCenter(start);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouletteControllerComponent.html":{"url":"components/RouletteControllerComponent.html","title":"component - RouletteControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouletteControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/roulette-controller/roulette-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                roulette-controller\n            \n\n            \n                styleUrls\n                roulette-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./roulette-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSlider\n                            \n                            \n                                folded\n                            \n                            \n                                rotation\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                rotate\n                            \n                            \n                                unfold\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/roulette-controller/roulette-controller.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:67\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unfold\n                            \n                            \n                        \n                    \n                \n                \n                    \nunfold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSlider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSlider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folded:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RouletteControllerComponent),\n  multi: true\n};\n@Component({\n  selector: 'roulette-controller',\n  templateUrl: './roulette-controller.component.html',\n  styleUrls: ['./roulette-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class RouletteControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  folded = true;\n  value = 0;\n  configSlider: any;\n  rotation: number;\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.configSlider = {\n      id: this.config.id + 'slider',\n      min: this.config.min || 0,\n      max: this.config.max || 100,\n      default: this.value,\n      thumb: 'roulette-slider-thumb',\n      track: 'roulette-slider-track',\n      vertical: true,\n      fill: true\n    };\n    this.rotate();\n  }\n\n  rotate() {\n    const percent = (this.value - this.configSlider.min) / (this.configSlider.max - this.configSlider.min);\n    this.rotation = 135 * 2 * (percent - 0.5);\n    this.onChangeCallback(this.value);\n  }\n  unfold() {\n    this.folded = !this.folded;\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.value = value;\n      this.rotate();\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  @HostListener('document:click', ['$event'])\n  private onDocumentClick(event: MouseEvent) {\n    const closest = (el, selector) => {\n      const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\n      while (el) {\n        if (matchesSelector.call(el, selector)) {\n          break;\n        }\n        el = el.parentElement;\n      }\n      return el;\n    };\n    const ele = event.target as Element;\n    if (!closest(ele, '#' + this.config.id + '_container')) {\n      this.folded = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouletteControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SizeService.html":{"url":"injectables/SizeService.html","title":"injectable - SizeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/size.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualHeight\n                            \n                            \n                                actualWidth\n                            \n                            \n                                height\n                            \n                            \n                                height$\n                            \n                            \n                                width\n                            \n                            \n                                width$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSize\n                            \n                            \n                                getHeight\n                            \n                            \n                                getWidth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/size.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSize(width: , height: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/size.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        height\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHeight()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/size.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/size.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actualHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actualHeight:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actualWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actualWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.height.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.width.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/size.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SizeService {\n  width = new Subject();\n  height = new Subject();\n  actualWidth: number;\n  actualHeight: number;\n  width$ = this.width.asObservable();\n  height$ = this.height.asObservable();\n  constructor() {\n    if (localStorage.getItem('width') && localStorage.getItem('height')) {\n      this.actualWidth = Number(localStorage.getItem('width'));\n      this.actualHeight = Number(localStorage.getItem('height'));\n    } else {\n      this.actualWidth = null;\n      this.actualHeight = null;\n    }\n  }\n  changeSize(width, height) {\n    this.width.next(width);\n    this.height.next(height);\n    this.actualWidth = width;\n    this.actualHeight = height;\n    if (width && height) {\n      localStorage.setItem('width', width);\n      localStorage.setItem('height', height);\n    } else {\n      localStorage.removeItem('width');\n      localStorage.removeItem('height');\n    }\n  }\n  getWidth() {\n    return this.actualWidth;\n  }\n\n  getHeight() {\n    return this.actualHeight;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderControllerComponent.html":{"url":"components/SliderControllerComponent.html","title":"component - SliderControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/slider-controller/slider-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                slider-controller\n            \n\n            \n                styleUrls\n                slider-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./slider-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fillsize\n                            \n                            \n                                shell\n                            \n                            \n                                shellView\n                            \n                            \n                                slider\n                            \n                            \n                                zindex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbWidth\n                                \n                                \n                                    thumbHeight\n                                \n                                \n                                    thumbTop\n                                \n                                \n                                    thumbLeft\n                                \n                                \n                                    fillWidth\n                                \n                                \n                                    fillHeight\n                                \n                                \n                                    fillTop\n                                \n                                \n                                    fillLeft\n                                \n                                \n                                    trackWidth\n                                \n                                \n                                    trackHeight\n                                \n                                \n                                    trackTop\n                                \n                                \n                                    trackLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:216\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:221\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillsize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillsize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shell\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shell:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shellView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shellView:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zindex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zindex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thumbWidth\n                    \n                \n\n                \n                    \n                        getthumbWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbHeight\n                    \n                \n\n                \n                    \n                        getthumbHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbTop\n                    \n                \n\n                \n                    \n                        getthumbTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbLeft\n                    \n                \n\n                \n                    \n                        getthumbLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillWidth\n                    \n                \n\n                \n                    \n                        getfillWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:89\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillHeight\n                    \n                \n\n                \n                    \n                        getfillHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillTop\n                    \n                \n\n                \n                    \n                        getfillTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:123\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillLeft\n                    \n                \n\n                \n                    \n                        getfillLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:146\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackWidth\n                    \n                \n\n                \n                    \n                        gettrackWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackHeight\n                    \n                \n\n                \n                    \n                        gettrackHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackTop\n                    \n                \n\n                \n                    \n                        gettrackTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:185\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackLeft\n                    \n                \n\n                \n                    \n                        gettrackLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:196\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, ViewChild, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SliderControllerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'slider-controller',\n  templateUrl: './slider-controller.component.html',\n  styleUrls: ['./slider-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class SliderControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  @ViewChild('sliderShell')\n  shellView: ElementRef;\n  shell: HTMLElement;\n  slider: any;\n  fillsize = 16;\n  zindex = 0;\n\n  get thumbWidth(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    if (vertical) {\n      return smallval;\n    } else {\n      return smallval / 2.5;\n    }\n  }\n  get thumbHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      if (!vertical) {\n        return smallval;\n      } else {\n        return smallval / 2.5;\n      }\n    } else {\n      return null;\n    }\n  }\n  get thumbTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? loc : 0;\n    } else {\n      return null;\n    }\n  }\n  get thumbLeft(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? 0 : loc;\n    } else {\n      return null;\n    }\n  }\n\n  get fillWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get fillHeight(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return Math.max(0, vertical ? bigval - filloffset - fillsize - loc : fillsize);\n    } else {\n      return null;\n    }\n  }\n  get fillTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n\n      /* Fill */\n\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return vertical ? loc + thumbsize : filloffset;\n    } else {\n      return null;\n    }\n  }\n  get fillLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  get trackWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return bigval - thumbsize * 1.25;\n    } else {\n      return null;\n    }\n  }\n  get trackTop(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  ngOnInit() {\n    this.shell = this.shellView.nativeElement;\n    this.zindex = this.config.zindex || 0;\n  }\n\n  setValue() {\n    this.onChangeCallback(this.slider);\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.slider = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n\n    \n\n    \n        \n\t\n\t\n\t\n\t\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppEffectsCreatorComponent', 'selector': 'app-effects-creator'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            tunajs : ^1.0.2\n        \n            wavesurfer.js : ^2.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            decimalAdjust   (src/.../app-effects-creator.component.ts)\n                        \n                        \n                            stepValidator   (src/.../app-effects-creator.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/app-effects-creator/app-effects-creator.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            decimalAdjust\n                            \n                            \n                        \n                    \n                \n                \n                    \ndecimalAdjust(type: , value: , exp: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        exp\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepValidator(step: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        step\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTFG\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun npm test to execute the unit tests via jest.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nDocumentation\nTo access the compodoc generated documentation go to https://clm2609.gitlab.io/tfg\nWebApp\nTo see the latest stage state of the app go to http://virtualdj-stage.surge.sh/\nTo see the latest production state of the app go to http://virtualdj.surge.sh/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppEffectsCreatorComponent\n\nAppEffectsCreatorComponent\n\nAppModule -->\n\nAppEffectsCreatorComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
