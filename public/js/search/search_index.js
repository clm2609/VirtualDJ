var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppAboutComponent.html",[0,0.136,1,0.378]],["body/components/AppAboutComponent.html",[0,0.252,1,0.699,2,0.319,3,0.241,4,0.797,5,0.241,6,1.494,7,3.516,8,3.491,9,1.494,10,1.429,11,0.797,12,1.26,13,0.931,14,0.995,15,4.36,16,0.995,17,4.36,18,0.935,19,0.584,20,3.491,21,0.319,22,0.051,23,0.241,24,0.241,25,0.319,26,1.551,27,4.36,28,4.36,29,4.98,30,4.98,31,4.36,32,4.98,33,4.98,34,4.98,35,4.98,36,4.36,37,1.136,38,0.797,39,0.502,40,0.797,41,0.49,42,0.797,43,0.49,44,0.797,45,0.49,46,0.797,47,0.49,48,0.584,49,0.797,50,0.49,51,0.797,52,0.49,53,0.797,54,0.49,55,0.797,56,0.49,57,0.797,58,0.49,59,0.797,60,0.797,61,0.49,62,0.797,63,0.797,64,0.797,65,0.797,66,0.04,67,0.04]],["title/components/AppComponent.html",[0,0.136,41,0.378]],["body/components/AppComponent.html",[0,0.259,1,0.528,2,0.344,3,0.26,4,0.858,5,0.26,11,0.858,12,1.272,13,0.926,14,1.041,16,1.041,21,0.344,22,0.051,23,0.26,24,0.26,25,0.344,37,1.166,38,0.858,39,0.525,40,0.858,41,0.717,42,0.858,43,0.528,44,0.858,45,0.528,46,0.858,47,0.528,48,0.629,49,0.858,50,0.528,51,0.858,52,0.528,53,0.858,54,0.528,55,0.858,56,0.528,57,0.858,58,0.528,59,0.858,60,0.858,61,0.528,62,0.858,63,0.858,64,0.858,65,0.858,66,0.042,67,0.042,68,3.759,69,2.664,70,4.564,71,4.564]],["title/components/AppDeckComponent.html",[0,0.136,43,0.378]],["body/components/AppDeckComponent.html",[0,0.216,1,0.335,2,0.218,3,0.165,4,0.545,5,0.234,6,1.778,9,1.16,10,1.182,11,0.545,12,1.194,13,0.887,14,0.773,16,0.773,18,0.47,19,0.86,21,0.413,22,0.052,23,0.165,24,0.165,25,0.218,26,1.062,37,0.976,38,0.545,39,0.492,40,0.545,41,0.335,42,0.545,43,0.6,44,0.545,45,0.335,46,0.545,47,0.335,48,0.4,49,0.545,50,0.335,51,0.545,52,0.335,53,0.545,54,0.335,55,0.545,56,0.335,57,0.545,58,0.335,59,0.545,60,0.545,61,0.335,62,0.545,63,0.545,64,0.545,65,0.545,66,0.031,67,0.031,72,4.184,73,2.39,74,3.932,75,3.171,76,1.321,77,3.386,78,3.386,79,0.47,80,0.773,81,2.814,82,2.737,83,2.355,84,3.972,85,2.171,86,0.773,87,2.73,88,3.449,89,4.277,90,2.904,91,3.932,92,1.976,93,2.142,94,3.386,95,0.773,96,1.07,97,0.773,98,1.901,99,2.39,100,3.386,101,2.39,102,0.976,103,1.07,104,2.39,105,2.39,106,2.39,107,1.018,108,1.018,109,2.39,110,2.39,111,1.182,112,2.39,113,2.39,114,1.395,115,1.395,116,1.622,117,2.73,118,1.213,119,1.927,120,1.927,121,1.505,122,1.927,123,1.622,124,2.299,125,1.395,126,1.927,127,2.39,128,3.449,129,2.39,130,2.39,131,1.321,132,2.39,133,1.622,134,2.39,135,1.213,136,2.39,137,3.932,138,2.39,139,3.932,140,2.39,141,1.927,142,2.39,143,2.39,144,2.39,145,2.39,146,2.39,147,2.39,148,2.39,149,2.39,150,2.39,151,2.39,152,2.39,153,3.386,154,1.927,155,2.39,156,2.39,157,3.171,158,1.927,159,2.39,160,1.927,161,1.927,162,2.39,163,2.39,164,2.39,165,2.73,166,3.386,167,3.386,168,3.386,169,3.386,170,3.386,171,5.188,172,1.901,173,1.669,174,2.904,175,3.449,176,2.73,177,1.976]],["title/components/AppLayoutComponent.html",[0,0.136,45,0.378]],["body/components/AppLayoutComponent.html",[0,0.257,1,0.516,2,0.336,3,0.254,4,0.838,5,0.254,6,1.542,10,1.104,11,0.838,12,1.268,13,0.936,14,1.027,16,1.027,18,0.956,19,0.615,21,0.336,22,0.051,23,0.254,24,0.254,25,0.336,37,1.157,38,0.838,39,0.518,40,0.838,41,0.516,42,0.838,43,0.516,44,0.838,45,0.712,46,0.838,47,0.516,48,0.615,49,0.838,50,0.516,51,0.838,52,0.516,53,0.838,54,0.516,55,0.838,56,0.516,57,0.838,58,0.516,59,0.838,60,0.838,61,0.516,62,0.838,63,0.838,64,0.838,65,0.838,66,0.041,67,0.041,178,3.63,179,3.675,180,4.501,181,4.501,182,4.501,183,3.675]],["title/modules/AppModule.html",[184,1.05,185,1.571]],["body/modules/AppModule.html",[1,0.709,2,0.28,3,0.212,5,0.212,7,2.473,13,0.513,21,0.504,22,0.052,23,0.212,24,0.277,25,0.28,41,0.758,43,0.709,45,0.709,47,0.709,48,0.672,50,0.709,52,0.709,54,0.709,56,0.709,58,0.709,61,0.709,66,0.037,67,0.037,72,2.473,178,2.473,184,1.566,185,3.288,186,1.79,187,2.473,188,3.608,189,3.608,190,2.343,191,2.473,192,2.473,193,2.473,194,2.473,195,2.566,196,3.237,197,2.473,198,2.082,199,3.067,200,4.013,201,2.473,202,2.082,203,3.237,204,3.067,205,3.067,206,5.223,207,3.067,208,3.067,209,2.473,210,3.067,211,3.067,212,2.473,213,4.013,214,3.237,215,1.557,216,3.067,217,2.473,218,2.473,219,3.067,220,2.473,221,3.067,222,2.473,223,3.067,224,2.473,225,3.067,226,3.067]],["title/components/AppMusicListComponent.html",[0,0.136,47,0.378]],["body/components/AppMusicListComponent.html",[0,0.225,1,0.368,2,0.24,3,0.181,4,0.599,5,0.348,6,1.754,9,1.239,10,0.789,11,0.599,12,1.212,13,0.899,14,0.825,16,0.825,18,0.516,19,0.844,21,0.378,22,0.052,23,0.181,24,0.181,25,0.24,37,1.017,38,0.599,39,0.538,40,0.599,41,0.368,42,0.599,43,0.368,44,0.599,45,0.368,46,0.599,47,0.625,48,0.934,49,0.599,50,0.368,51,0.599,52,0.368,53,0.599,54,0.368,55,0.599,56,0.368,57,0.599,58,0.368,59,0.599,60,0.599,61,0.368,62,0.599,63,0.599,64,0.599,65,0.599,66,0.033,67,0.041,75,3.335,76,1.024,79,0.516,80,0.825,82,2.82,85,2.598,86,0.825,92,2.111,93,2.199,95,0.944,96,1.066,97,0.944,102,1.066,103,1.017,111,1.087,114,1.533,115,1.533,117,2.916,118,1.333,121,1.167,122,2.117,125,1.533,131,1.411,154,2.117,160,2.117,161,2.117,165,2.916,222,4.127,227,2.626,228,3.616,229,3.616,230,3.616,231,4.456,232,4.831,233,4.456,234,3.616,235,3.616,236,4.456,237,3.616,238,3.616,239,2.626,240,3.616,241,2.626,242,2.626,243,2.626,244,2.626,245,3.335,246,2.626,247,4.456,248,2.626,249,3.616,250,2.626,251,2.626,252,2.626,253,2.626,254,3.616,255,2.626,256,3.616,257,2.626,258,3.616,259,3.616,260,3.616,261,3.616,262,2.626,263,2.626,264,2.626,265,2.626,266,3.616,267,2.916,268,2.455,269,2.916,270,2.916,271,2.916,272,3.616]],["title/modules/AppRoutingModule.html",[184,1.05,195,1.366]],["body/modules/AppRoutingModule.html",[2,0.377,3,0.285,5,0.285,21,0.482,22,0.051,23,0.285,24,0.333,25,0.377,66,0.044,67,0.044,131,1.61,184,1.61,195,2.449,203,3.891,214,3.891,215,2.095,273,4.127,274,4.127,275,5.113,276,4.825,277,3.328,278,4.127]],["title/components/AppSearchComponent.html",[0,0.136,50,0.378]],["body/components/AppSearchComponent.html",[0,0.236,1,0.41,2,0.267,3,0.202,4,0.667,5,0.335,6,1.662,9,1.333,10,1.313,11,0.667,12,1.231,13,0.912,14,0.887,16,0.887,18,0.575,19,0.78,21,0.355,22,0.051,23,0.202,24,0.202,25,0.267,26,1.299,37,1.063,38,0.667,39,0.558,40,0.667,41,0.41,42,0.667,43,0.41,44,0.667,45,0.41,46,0.667,47,0.41,48,0.489,49,0.667,50,0.654,51,0.667,52,0.41,53,0.667,54,0.41,55,0.667,56,0.41,57,0.667,58,0.41,59,0.667,60,0.667,61,0.41,62,0.667,63,0.667,64,0.667,65,0.667,66,0.052,67,0.036,79,0.575,80,0.887,82,2.911,86,0.887,92,2.27,93,2.261,95,0.997,96,1.063,97,0.997,102,0.887,103,0.887,111,0.879,114,1.707,115,1.707,125,1.707,172,2.41,173,2.182,218,3.911,269,3.136,279,2.924,280,3.889,281,3.889,282,3.889,283,3.136,284,3.889,285,3.889,286,2.924,287,2.924,288,3.136,289,3.524,290,2.924,291,2.924,292,3.889]],["title/components/AppSettingsComponent.html",[0,0.136,52,0.378]],["body/components/AppSettingsComponent.html",[0,0.231,1,0.39,2,0.254,3,0.192,4,0.972,5,0.192,6,1.751,9,1.288,10,1.28,11,0.634,12,1.222,13,0.906,14,0.857,16,0.857,18,0.546,19,0.841,21,0.389,22,0.052,23,0.192,24,0.192,25,0.254,26,1.234,37,1.041,38,0.634,39,0.525,40,0.634,41,0.39,42,0.634,43,0.39,44,0.634,45,0.39,46,0.634,47,0.39,48,0.465,49,0.634,50,0.39,51,0.634,52,0.64,53,0.634,54,0.39,55,0.634,56,0.39,57,0.634,58,0.39,59,0.634,60,0.634,61,0.39,62,0.634,63,0.634,64,0.634,65,0.634,66,0.034,67,0.034,76,1.466,79,0.546,80,0.857,81,2.983,83,2.027,86,0.857,95,0.857,96,1.041,97,0.857,98,1.67,102,0.634,103,0.634,107,1.28,108,1.28,116,1.886,121,1.234,133,1.886,177,2.193,224,4.121,293,2.778,294,3.03,295,3.758,296,3.758,297,4.562,298,3.679,299,4.913,300,4.562,301,3.03,302,1.886,303,2.316,304,4.258,305,2.778,306,2.551,307,3.758,308,4.913,309,2.778,310,2.778,311,2.316,312,2.778,313,2.778,314,2.778,315,2.778,316,2.24,317,1.886,318,2.778,319,2.778,320,2.778,321,4.258,322,4.258,323,4.258,324,4.258,325,4.258,326,4.258,327,2.778,328,2.778,329,3.758,330,2.778,331,2.778,332,2.778,333,2.778,334,2.778,335,2.778,336,3.758,337,3.758,338,3.758,339,3.758,340,3.758,341,3.758,342,3.758]],["title/components/AppTabsComponent.html",[0,0.136,54,0.378]],["body/components/AppTabsComponent.html",[0,0.234,1,0.403,2,0.262,3,0.198,4,0.655,5,0.299,6,1.805,11,0.655,12,1.228,13,0.91,14,0.876,16,0.876,18,0.564,19,0.873,21,0.351,22,0.052,23,0.198,24,0.198,25,0.262,37,1.055,38,0.655,39,0.571,40,0.655,41,0.403,42,0.655,43,0.403,44,0.655,45,0.403,46,0.655,47,0.403,48,0.807,49,0.655,50,0.403,51,0.655,52,0.403,53,0.655,54,0.649,55,0.655,56,0.403,57,0.655,58,0.403,59,0.655,60,0.655,61,0.403,62,0.655,63,0.655,64,0.655,65,0.655,66,0.035,67,0.035,79,0.564,80,0.876,82,2.895,85,1.95,86,0.876,92,2.242,93,2.251,95,1.055,96,1.055,97,1.055,102,0.988,103,0.988,107,1.154,108,1.154,111,0.862,114,1.675,115,1.675,123,3.367,124,3.139,125,1.675,135,1.456,157,2.314,220,4.247,245,3.097,270,3.728,271,3.097,283,3.097,288,3.097,289,3.491,294,3.097,343,2.869,344,3.84,345,3.84,346,3.84,347,3.84,348,3.84,349,3.491,350,4.329,351,3.84,352,2.869,353,2.869,354,2.314,355,2.939,356,2.869,357,2.869,358,3.84,359,2.869,360,2.869,361,3.84,362,2.869,363,2.869,364,2.869,365,2.869,366,3.84,367,3.84,368,2.869,369,4.329,370,2.869,371,2.869,372,2.869,373,2.869,374,3.84]],["title/components/AppVolumeComponent.html",[0,0.136,56,0.378]],["body/components/AppVolumeComponent.html",[0,0.227,1,0.376,2,0.245,3,0.185,4,0.611,5,0.185,6,1.826,9,1.256,10,1.256,11,0.611,12,1.216,13,0.902,14,0.836,16,0.836,18,0.526,19,0.886,21,0.382,22,0.052,23,0.185,24,0.185,25,0.245,37,1.025,38,0.611,39,0.517,40,0.611,41,0.376,42,0.611,43,0.376,44,0.611,45,0.376,46,0.611,47,0.376,48,0.448,49,0.611,50,0.376,51,0.611,52,0.376,53,0.611,54,0.376,55,0.611,56,0.631,57,0.611,58,0.376,59,0.611,60,0.611,61,0.376,62,0.611,63,0.611,64,0.611,65,0.611,66,0.033,67,0.033,76,1.63,79,0.526,80,0.836,83,2.211,86,0.836,95,0.836,96,1.186,97,0.836,98,2.423,102,0.836,103,0.836,107,1.545,108,1.545,111,1.626,116,1.818,121,1.19,172,1.628,209,4.296,302,1.818,303,2.281,306,2.488,316,2.159,317,1.818,375,2.677,376,2.488,377,3.665,378,3.665,379,3.624,380,3.624,381,3.624,382,3.624,383,3.624,384,3.624,385,4.493,386,4.493,387,4.493,388,3.665,389,4.178,390,2.677,391,3.665,392,2.677,393,2.677,394,2.677,395,2.677,396,2.677,397,2.677,398,2.677,399,2.677,400,3.299,401,2.677,402,2.677,403,2.677,404,3.665,405,4.178]],["title/injectables/EffectsService.html",[303,1.366,406,1.05]],["body/injectables/EffectsService.html",[2,0.083,3,0.063,5,0.063,18,0.41,19,0.609,21,0.144,22,0.053,23,0.063,24,0.063,25,0.083,39,0.646,66,0.014,67,0.014,69,0.533,76,0.356,79,0.18,80,0.36,81,3.021,86,0.36,95,0.64,96,1.144,97,0.83,102,0.958,103,0.36,107,0.474,108,1.593,111,1.649,123,2.725,124,2.953,131,1.42,133,1.072,135,1.26,158,1.273,172,2.427,173,0.968,174,1.685,175,3.237,176,2.26,177,0.921,303,0.801,376,0.62,379,1.681,380,2.26,381,2.652,382,2.652,383,2.26,384,2.26,400,2.083,406,0.813,407,0.913,408,2.482,409,1.578,410,1.578,411,1.578,412,1.578,413,2.482,414,1.578,415,0.913,416,1.578,417,0.913,418,1.578,419,0.913,420,0.913,421,1.578,422,0.913,423,1.578,424,2.26,425,0.913,426,0.913,427,1.578,428,0.913,429,3.386,430,4.746,431,1.578,432,4.35,433,3.067,434,3.431,435,3.477,436,2.482,437,3.781,438,2.482,439,3.781,440,3.781,441,3.781,442,3.781,443,2.482,444,2.482,445,2.482,446,3.477,447,3.477,448,2.482,449,3.477,450,3.781,451,2.482,452,2.002,453,2.482,454,1.578,455,3.781,456,3.477,457,1.578,458,3.067,459,3.477,460,1.578,461,1.578,462,1.578,463,1.578,464,2.482,465,1.578,466,4.014,467,1.578,468,3.067,469,1.578,470,3.067,471,2.482,472,1.578,473,3.067,474,2.482,475,4.474,476,0.913,477,3.067,478,4.746,479,4.401,480,4.401,481,4.199,482,2.482,483,1.578,484,1.578,485,1.578,486,3.067,487,2.482,488,1.578,489,3.067,490,2.482,491,3.067,492,1.578,493,1.578,494,1.578,495,1.578,496,3.067,497,1.273,498,1.273,499,1.578,500,4.014,501,1.578,502,1.578,503,1.578,504,2.482,505,1.578,506,1.578,507,1.578,508,1.578,509,3.477,510,1.578,511,1.578,512,1.578,513,2.482,514,1.578,515,1.578,516,1.578,517,2.482,518,2.482,519,4.474,520,1.578,521,1.578,522,3.067,523,1.578,524,3.067,525,1.578,526,1.578,527,1.578,528,1.578,529,1.578,530,1.578,531,1.578,532,1.578,533,1.578,534,2.482,535,2.482,536,2.482,537,2.482,538,1.578,539,1.578,540,1.578,541,1.578,542,1.578,543,1.578,544,1.578,545,0.913,546,1.273,547,0.62,548,0.62,549,0.913,550,0.913,551,0.913,552,0.913,553,0.913,554,0.913,555,0.913,556,2.084,557,2.084,558,0.913,559,0.913,560,0.533,561,0.913,562,1.578,563,0.913,564,0.913,565,0.913,566,0.913,567,4.579,568,1.578,569,2.482,570,1.578,571,1.578,572,1.578,573,3.477,574,3.477,575,1.578,576,1.578,577,1.578,578,1.578,579,1.578,580,2.482,581,1.578,582,1.578,583,0.913,584,0.913,585,1.578,586,1.578,587,1.578,588,1.578,589,1.578,590,1.578,591,1.578,592,1.578,593,0.913,594,0.913,595,0.913,596,0.913]],["title/injectables/MusicLoaderService.html",[93,1.196,406,1.05]],["body/injectables/MusicLoaderService.html",[2,0.27,3,0.204,5,0.366,18,0.582,19,0.894,21,0.402,22,0.052,23,0.204,24,0.204,25,0.27,39,0.539,48,0.868,66,0.036,67,0.036,69,1.727,76,1.154,79,0.582,80,0.894,83,2.402,85,2.54,86,0.894,93,1.742,95,1.068,96,1.165,97,1.068,102,1.003,103,1.003,107,1.504,108,1.504,118,1.502,126,2.386,131,1.154,141,2.386,172,1.315,268,2.662,311,2.376,406,1.715,548,2.009,560,2.979,597,5.375,598,2.959,599,3.774,600,5.183,601,4.68,602,3.92,603,3.92,604,3.92,605,3.92,606,3.92,607,2.959,608,3.92,609,2.959,610,3.161,611,2.959,612,4.116,613,2.959,614,2.959,615,3.161,616,3.161,617,2.959,618,2.959,619,3.92,620,2.959,621,2.959,622,2.959,623,2.959,624,2.959,625,2.959,626,2.959,627,2.959,628,2.959,629,2.959,630,2.959,631,2.959,632,3.92,633,2.959,634,2.959,635,3.92,636,2.959]],["title/injectables/PlayerService.html",[83,1.196,406,1.05]],["body/injectables/PlayerService.html",[2,0.227,3,0.171,5,0.171,18,0.488,19,0.919,21,0.397,22,0.052,23,0.171,24,0.171,25,0.227,39,0.589,66,0.032,67,0.032,69,1.449,76,2.09,79,0.488,80,0.793,81,3.021,83,1.545,85,1.765,86,0.793,87,3.237,88,2.804,95,1.168,96,1.192,97,1.168,98,1.933,102,1.181,103,1.153,107,1.539,108,1.539,111,0.746,118,1.26,119,2.804,173,1.357,177,2.03,268,2.361,298,3.508,302,1.685,303,2.208,306,2.361,311,2.829,317,1.685,355,2.361,376,2.361,406,1.566,424,3.693,546,2.001,547,1.685,548,1.685,560,2.903,599,3.508,610,2.001,612,4.076,615,2.804,616,2.804,637,2.482,638,4.349,639,4.349,640,4.349,641,4.349,642,3.477,643,4.014,644,3.477,645,3.477,646,3.477,647,3.477,648,3.477,649,3.477,650,2.482,651,2.482,652,2.482,653,2.482,654,2.482,655,2.482,656,2.482,657,2.482,658,3.477,659,2.482,660,2.482,661,2.482,662,2.482,663,2.482,664,2.482,665,2.482,666,2.482,667,2.482,668,2.482,669,2.482,670,2.482,671,2.482,672,2.482,673,2.482,674,2.482,675,2.482,676,3.477,677,3.477,678,2.482,679,2.482,680,2.482,681,2.482,682,2.482,683,2.482,684,2.482,685,2.482,686,2.482,687,2.482]],["title/components/RouletteControllerComponent.html",[0,0.136,58,0.378]],["body/components/RouletteControllerComponent.html",[0,0.217,1,0.336,2,0.219,3,0.166,4,0.547,5,0.166,9,1.163,10,1.184,11,0.547,12,1.21,13,0.839,14,0.774,16,0.774,18,0.774,19,0.869,21,0.31,22,0.052,23,0.166,24,0.234,25,0.219,26,1.065,37,0.977,38,0.547,39,0.52,40,0.547,41,0.336,42,0.547,43,0.336,44,0.547,45,0.336,46,0.547,47,0.336,48,0.401,49,0.547,50,0.336,51,0.547,52,0.336,53,0.547,54,0.336,55,0.547,56,0.336,57,0.547,58,0.634,59,1.144,60,0.547,61,0.336,62,0.977,63,0.899,64,0.547,65,0.547,66,0.031,67,0.031,79,0.471,80,0.774,84,3.975,86,0.774,90,2.908,95,0.899,96,1.101,97,0.899,98,2.009,102,1.071,103,1.101,107,1.184,108,1.528,111,1.184,121,1.75,128,2.736,131,1.831,135,2.383,173,0.935,190,2.299,215,1.217,217,4.22,311,1.217,349,3.176,354,1.933,355,2.304,400,1.627,429,1.933,434,2.674,479,1.933,480,1.933,688,5.233,689,1.933,690,3.176,691,3.176,692,2.736,693,2.736,694,4.283,695,4.283,696,2.736,697,2.736,698,4.283,699,2.736,700,3.393,701,1.933,702,2.397,703,2.397,704,3.393,705,2.397,706,2.736,707,2.397,708,3.454,709,2.736,710,2.397,711,2.397,712,2.397,713,2.736,714,2.397,715,1.933,716,1.933,717,1.933,718,2.397,719,2.736,720,2.736,721,2.736,722,3.176,723,1.933,724,1.933,725,1.933,726,1.933,727,1.933,728,2.397,729,3.393,730,1.933,731,1.933,732,3.938,733,3.393,734,3.393,735,1.933,736,1.933,737,3.393,738,3.393,739,2.397,740,2.397,741,2.397,742,2.397,743,3.938,744,2.736,745,1.933,746,1.933,747,1.933,748,2.397,749,2.397,750,2.397,751,4.52,752,2.397,753,2.397,754,2.397,755,2.397,756,2.397,757,2.397,758,2.397,759,2.397,760,2.397,761,2.397,762,2.397,763,2.397]],["title/components/SliderControllerComponent.html",[0,0.136,61,0.378]],["body/components/SliderControllerComponent.html",[0,0.168,1,0.203,2,0.132,3,0.1,4,0.33,5,0.1,9,0.794,10,0.87,11,0.33,12,1.075,13,0.728,14,0.528,16,0.528,19,0.855,21,0.212,22,0.053,23,0.1,24,0.16,25,0.132,26,0.643,37,0.755,38,0.33,39,0.417,40,0.33,41,0.203,42,0.33,43,0.203,44,0.33,45,0.203,46,0.33,47,0.203,48,0.242,49,0.33,50,0.203,51,0.33,52,0.203,53,0.33,54,0.203,55,0.33,56,0.203,57,0.33,58,0.203,59,0.33,60,0.33,61,0.508,62,1.04,63,0.661,64,0.33,65,0.33,66,0.021,67,0.021,79,0.284,80,0.528,86,0.528,90,2.248,95,0.661,96,0.992,97,0.661,98,1.471,102,1.2,103,0.882,107,0.696,108,1.161,111,1.22,121,1.029,131,2.179,135,0.734,172,1.717,173,1.778,190,1.69,212,4.14,215,0.734,311,2.356,434,1.966,452,2.67,689,1.166,690,2.335,691,2.335,692,1.867,693,1.867,696,1.867,697,1.867,699,1.867,701,1.166,706,1.867,708,2.67,709,1.867,713,1.867,715,1.166,716,1.166,717,1.166,719,1.867,720,1.867,721,1.867,722,2.335,723,1.166,724,1.166,725,1.166,726,1.166,727,1.166,730,3.742,731,3.116,735,4.411,736,1.166,744,1.867,745,1.166,746,1.166,747,1.166,764,5.133,765,4.461,766,4.834,767,3.311,768,3.311,769,3.311,770,2.316,771,2.896,772,2.896,773,2.896,774,2.896,775,2.896,776,2.896,777,2.896,778,2.896,779,2.896,780,2.896,781,2.896,782,2.896,783,1.446,784,1.446,785,1.446,786,1.446,787,2.896,788,3.311,789,1.446,790,2.316,791,1.446,792,1.446,793,1.446,794,1.446,795,1.446,796,1.446,797,1.446,798,1.446,799,1.446,800,1.446,801,1.446,802,1.446,803,1.446,804,1.446,805,1.446,806,1.446,807,1.446,808,1.446,809,1.446,810,1.446,811,1.446,812,1.446,813,1.446,814,1.446,815,1.446,816,1.446,817,1.446,818,4.64,819,5.133,820,4.777,821,4.713,822,4.713,823,2.316,824,4.64,825,4.058,826,4.973,827,4.834,828,5.011,829,4.217,830,4.217,831,4.973,832,4.64,833,3.311,834,4.217,835,1.446,836,1.446,837,1.446,838,1.446,839,1.446,840,1.446]],["title/dependencies.html",[186,1.89,841,2.245]],["body/dependencies.html",[22,0.052,23,0.281,66,0.044,67,0.044,118,2.067,120,3.284,186,2.377,201,3.86,202,3.25,215,2.067,277,3.284,547,2.765,842,4.072,843,5.544,844,4.072,845,4.072,846,4.072,847,4.072,848,4.072,849,4.072,850,4.072,851,4.072,852,4.072,853,4.072,854,4.072,855,4.072]],["title/index.html",[79,0.441,267,1.811,856,2.245]],["body/index.html",[0,0.246,3,0.253,5,0.253,13,0.813,22,0.041,39,0.421,66,0.041,67,0.041,198,2.484,301,2.95,497,3.916,498,2.95,560,2.135,857,3.658,858,4.488,859,5.196,860,4.856,861,4.856,862,3.658,863,3.658,864,3.658,865,4.488,866,5.357,867,5.288,868,3.658,869,3.658,870,3.658,871,3.658,872,3.658,873,3.658,874,3.658,875,3.658,876,5.196,877,3.658,878,3.658,879,3.658,880,3.658,881,3.658,882,3.658,883,4.488,884,4.488,885,5.196,886,3.658,887,4.488,888,4.488,889,3.658,890,5.063,891,3.658,892,3.658,893,3.658,894,4.856,895,3.658,896,5.063,897,3.658,898,3.658,899,4.488,900,3.658,901,3.658,902,3.658,903,3.658,904,4.488,905,4.488,906,3.658,907,4.488,908,3.658,909,3.658,910,3.658]],["title/modules.html",[184,1.435]],["body/modules.html",[22,0.045,66,0.045,67,0.045,184,1.693,185,2.533,195,2.203,202,2.946,911,4.339,912,4.339,913,4.967,914,4.339,915,4.339]],["title/overview.html",[916,2.966]],["body/overview.html",[0,0.189,1,0.687,22,0.051,24,0.258,41,0.755,43,0.687,45,0.687,47,0.687,50,0.687,52,0.687,54,0.687,56,0.687,58,0.687,61,0.687,66,0.041,67,0.041,173,1.455,174,2.533,184,1.772,185,3.321,186,2.178,187,3.008,188,3.008,189,3.008,190,2.178,191,3.008,192,3.008,193,3.008,194,3.008,195,2.486,196,3.663,197,3.008,198,2.533,406,1.455,916,3.008,917,3.731]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":111,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["0.001",{"_index":513,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.01",{"_index":458,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.065",{"_index":436,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.1",{"_index":454,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.2",{"_index":467,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.25",{"_index":574,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.3",{"_index":465,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.5",{"_index":741,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["0.8.26",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":172,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/SliderControllerComponent.html":{}}}],["1.0.2",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":457,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1.25",{"_index":836,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["10",{"_index":158,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["100",{"_index":400,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["1000",{"_index":504,"title":{},"body":{"injectables/EffectsService.html":{}}}],["10000",{"_index":486,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1024",{"_index":535,"title":{},"body":{"injectables/EffectsService.html":{}}}],["11",{"_index":917,"title":{},"body":{"overview.html":{}}}],["125",{"_index":571,"title":{},"body":{"injectables/EffectsService.html":{}}}],["135",{"_index":740,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["1500",{"_index":474,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16",{"_index":452,"title":{},"body":{"injectables/EffectsService.html":{},"components/SliderControllerComponent.html":{}}}],["16000",{"_index":579,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16384",{"_index":442,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16x",{"_index":169,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["180",{"_index":470,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2",{"_index":173,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["2.1.1",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":823,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["2.5.4",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":489,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2000",{"_index":575,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2048",{"_index":536,"title":{},"body":{"injectables/EffectsService.html":{}}}],["22050",{"_index":490,"title":{},"body":{"injectables/EffectsService.html":{}}}],["250",{"_index":572,"title":{},"body":{"injectables/EffectsService.html":{}}}],["256",{"_index":441,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2x",{"_index":166,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["3",{"_index":174,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{},"overview.html":{}}}],["3.0",{"_index":35,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["3.5",{"_index":438,"title":{},"body":{"injectables/EffectsService.html":{}}}],["30",{"_index":469,"title":{},"body":{"injectables/EffectsService.html":{}}}],["3000",{"_index":506,"title":{},"body":{"injectables/EffectsService.html":{}}}],["32",{"_index":568,"title":{},"body":{"injectables/EffectsService.html":{}}}],["32x",{"_index":170,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["360",{"_index":159,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["4",{"_index":175,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["40",{"_index":509,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4000",{"_index":576,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4096",{"_index":440,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4x",{"_index":167,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["5",{"_index":176,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["50",{"_index":129,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["500",{"_index":473,"title":{},"body":{"injectables/EffectsService.html":{}}}],["512",{"_index":534,"title":{},"body":{"injectables/EffectsService.html":{}}}],["6",{"_index":177,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["6.0.0",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":863,"title":{},"body":{"index.html":{}}}],["64",{"_index":570,"title":{},"body":{"injectables/EffectsService.html":{}}}],["700",{"_index":472,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8",{"_index":459,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8000",{"_index":577,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8192",{"_index":537,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8x",{"_index":168,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_",{"_index":727,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["_contain",{"_index":763,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["_wave",{"_index":146,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_wave').offsetheight",{"_index":140,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["a.act",{"_index":683,"title":{},"body":{"injectables/PlayerService.html":{}}}],["a.id",{"_index":325,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["about'},{'nam",{"_index":40,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["about.compon",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["about.component.css",{"_index":15,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.t",{"_index":8,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.ts:8",{"_index":20,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about/app",{"_index":7,"title":{},"body":{"components/AppAboutComponent.html":{},"modules/AppModule.html":{}}}],["ac",{"_index":420,"title":{},"body":{"injectables/EffectsService.html":{}}}],["access",{"_index":900,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":770,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["activ",{"_index":123,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["activateeffect",{"_index":642,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activateeffect(deck",{"_index":650,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeeffect",{"_index":638,"title":{},"body":{"injectables/PlayerService.html":{}}}],["actual_compon",{"_index":65,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["addeffect",{"_index":409,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addeffect(effect",{"_index":416,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addsong",{"_index":602,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["addsong(song",{"_index":606,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["adjusteqvalu",{"_index":566,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(0.75",{"_index":573,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(bass0",{"_index":569,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(bass1",{"_index":580,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(trebble0",{"_index":578,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(trebble1",{"_index":581,"title":{},"body":{"injectables/EffectsService.html":{}}}],["advanc",{"_index":565,"title":{},"body":{"injectables/EffectsService.html":{}}}],["afterviewinit",{"_index":74,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["algorithmindex",{"_index":495,"title":{},"body":{"injectables/EffectsService.html":{}}}],["allpass",{"_index":521,"title":{},"body":{"injectables/EffectsService.html":{}}}],["analog",{"_index":538,"title":{},"body":{"injectables/EffectsService.html":{}}}],["angular",{"_index":860,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["appaboutcompon",{"_index":1,"title":{"components/AppAboutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appcompon",{"_index":41,"title":{"components/AppComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appdeckcompon",{"_index":43,"title":{"components/AppDeckComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["applayoutcompon",{"_index":45,"title":{"components/AppLayoutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appli",{"_index":483,"title":{},"body":{"injectables/EffectsService.html":{}}}],["applyeffect",{"_index":87,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["applyeffect(i",{"_index":100,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["appmodul",{"_index":185,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmusiclistcompon",{"_index":47,"title":{"components/AppMusicListComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["approutingmodul",{"_index":195,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsearchcompon",{"_index":50,"title":{"components/AppSearchComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appsettingscompon",{"_index":52,"title":{"components/AppSettingsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["apptabscompon",{"_index":54,"title":{"components/AppTabsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appvolumecompon",{"_index":56,"title":{"components/AppVolumeComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["argument",{"_index":354,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["artifact",{"_index":877,"title":{},"body":{"index.html":{}}}],["artist",{"_index":266,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["attack",{"_index":503,"title":{},"body":{"injectables/EffectsService.html":{}}}],["attribut",{"_index":28,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["auto",{"_index":525,"title":{},"body":{"injectables/EffectsService.html":{}}}],["automakeup",{"_index":510,"title":{},"body":{"injectables/EffectsService.html":{}}}],["automat",{"_index":498,"title":{},"body":{"injectables/EffectsService.html":{},"index.html":{}}}],["automod",{"_index":527,"title":{},"body":{"injectables/EffectsService.html":{}}}],["avail",{"_index":915,"title":{},"body":{"modules.html":{}}}],["availableeffect",{"_index":297,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["availableeffect.nam",{"_index":342,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["b.id).id",{"_index":326,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["band.f",{"_index":591,"title":{},"body":{"injectables/EffectsService.html":{}}}],["band.typ",{"_index":586,"title":{},"body":{"injectables/EffectsService.html":{}}}],["band.valu",{"_index":588,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bandpass",{"_index":516,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basefrequ",{"_index":528,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basemodulationfrequ",{"_index":471,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basic",{"_index":430,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bass0",{"_index":379,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["bass1",{"_index":380,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["between",{"_index":541,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bigval",{"_index":827,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["bit",{"_index":451,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bitcrush",{"_index":450,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bootstrap",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bounc",{"_index":540,"title":{},"body":{"injectables/EffectsService.html":{}}}],["break",{"_index":758,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["brows",{"_index":913,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["buffers",{"_index":439,"title":{},"body":{"injectables/EffectsService.html":{}}}],["build",{"_index":876,"title":{},"body":{"index.html":{}}}],["bypass",{"_index":475,"title":{},"body":{"injectables/EffectsService.html":{}}}],["c.map(a",{"_index":323,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["callback",{"_index":658,"title":{},"body":{"injectables/PlayerService.html":{}}}],["cc",{"_index":34,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["chang",{"_index":301,"title":{},"body":{"components/AppSettingsComponent.html":{},"index.html":{}}}],["change(i",{"_index":307,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["changevolum",{"_index":388,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["changevolume(deck",{"_index":391,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["channel",{"_index":542,"title":{},"body":{"injectables/EffectsService.html":{}}}],["check",{"_index":897,"title":{},"body":{"index.html":{}}}],["choos",{"_index":292,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["choru",{"_index":477,"title":{},"body":{"injectables/EffectsService.html":{}}}],["class",{"_index":25,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["cli",{"_index":861,"title":{},"body":{"index.html":{}}}],["closest",{"_index":750,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["closest(el",{"_index":762,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["cluster_appmodul",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":873,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":901,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":38,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["components/app",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["components/roulett",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["components/slid",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["compressor",{"_index":496,"title":{},"body":{"injectables/EffectsService.html":{}}}],["comput",{"_index":272,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["config",{"_index":434,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["configslid",{"_index":694,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["console.log('error",{"_index":633,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["const",{"_index":131,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{}}}],["constructor(effectserv",{"_index":302,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(musicservic",{"_index":92,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["constructor(playerservic",{"_index":604,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["constructor(priv",{"_index":317,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["contain",{"_index":144,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["content",{"_index":27,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["control",{"_index":63,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller'},{'nam",{"_index":60,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.compon",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["controller.component.css",{"_index":692,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.html",{"_index":693,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.t",{"_index":689,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:104",{"_index":804,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:123",{"_index":806,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:146",{"_index":808,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:158",{"_index":810,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:173",{"_index":812,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:185",{"_index":814,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:196",{"_index":816,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:20",{"_index":702,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:21",{"_index":716,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:216",{"_index":785,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:22",{"_index":718,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:221",{"_index":786,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:226",{"_index":783,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:229",{"_index":784,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":715,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:24",{"_index":717,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:25",{"_index":791,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":701,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:27",{"_index":792,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:29",{"_index":794,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:39",{"_index":796,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:44",{"_index":711,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:49",{"_index":712,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:53",{"_index":798,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:54",{"_index":714,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:59",{"_index":707,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:62",{"_index":710,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:66",{"_index":705,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:70",{"_index":800,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:89",{"_index":802,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller/roulett",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{}}}],["controller/slid",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/SliderControllerComponent.html":{}}}],["controlvalueaccessor",{"_index":690,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["core",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["createeffect",{"_index":410,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeffects(ac",{"_index":418,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeq",{"_index":411,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeq(bass0",{"_index":421,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeqeffect",{"_index":412,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeqeffect(deck",{"_index":423,"title":{},"body":{"injectables/EffectsService.html":{}}}],["cue",{"_index":171,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["curveamount",{"_index":494,"title":{},"body":{"injectables/EffectsService.html":{}}}],["custom_text_input_control_value_accessor",{"_index":691,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["cutoff",{"_index":435,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dark",{"_index":340,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["decent",{"_index":460,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck",{"_index":76,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["deck'},{'nam",{"_index":44,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deck.compon",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["deck.component.css",{"_index":77,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.html",{"_index":78,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.t",{"_index":73,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:14",{"_index":99,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:16",{"_index":109,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:17",{"_index":110,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:18",{"_index":112,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:20",{"_index":113,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:21",{"_index":94,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:56",{"_index":106,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:61",{"_index":105,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:68",{"_index":104,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:72",{"_index":101,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck/app",{"_index":72,"title":{},"body":{"components/AppDeckComponent.html":{},"modules/AppModule.html":{}}}],["deck[0].backend.ac.createbiquadfilt",{"_index":584,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck[1].backend.ac.createbiquadfilt",{"_index":594,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck_",{"_index":145,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deckload",{"_index":599,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["decknum",{"_index":639,"title":{},"body":{"injectables/PlayerService.html":{}}}],["decknumb",{"_index":91,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["decksong",{"_index":600,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["declar",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":789,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["default",{"_index":107,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["defin",{"_index":19,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["delay",{"_index":481,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytim",{"_index":485,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytimeleft",{"_index":543,"title":{},"body":{"injectables/EffectsService.html":{}}}],["delaytimeright",{"_index":544,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deletesong",{"_index":603,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["deletesong(song",{"_index":608,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["depend",{"_index":186,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":464,"title":{},"body":{"injectables/EffectsService.html":{}}}],["descript",{"_index":478,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dev",{"_index":869,"title":{},"body":{"index.html":{}}}],["develop",{"_index":864,"title":{},"body":{"index.html":{}}}],["direct",{"_index":64,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":875,"title":{},"body":{"index.html":{}}}],["directori",{"_index":880,"title":{},"body":{"index.html":{}}}],["dist",{"_index":879,"title":{},"body":{"index.html":{}}}],["document",{"_index":899,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('deck_",{"_index":138,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["document:click",{"_index":700,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["document:click(ev",{"_index":703,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["drag",{"_index":270,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["drive",{"_index":493,"title":{},"body":{"injectables/EffectsService.html":{}}}],["drop",{"_index":374,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drope",{"_index":347,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["droped(ev",{"_index":358,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drylevel",{"_index":488,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dynam",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":891,"title":{},"body":{"index.html":{}}}],["eff",{"_index":132,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["eff.filter(_",{"_index":134,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["effect",{"_index":81,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["effect.id",{"_index":550,"title":{},"body":{"injectables/EffectsService.html":{}}}],["effectload",{"_index":640,"title":{},"body":{"injectables/PlayerService.html":{}}}],["effects.id",{"_index":559,"title":{},"body":{"injectables/EffectsService.html":{}}}],["effects.servic",{"_index":682,"title":{},"body":{"injectables/PlayerService.html":{}}}],["effectscr",{"_index":408,"title":{},"body":{"injectables/EffectsService.html":{}}}],["effectserv",{"_index":306,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["effectsnum",{"_index":298,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["effectsservic",{"_index":303,"title":{"injectables/EffectsService.html":{}},"body":{"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["el",{"_index":751,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.match",{"_index":753,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.mozmatchesselector",{"_index":755,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.msmatchesselector",{"_index":756,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.parentel",{"_index":759,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.webkitmatchesselector",{"_index":754,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["element",{"_index":761,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["elementref",{"_index":788,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["end",{"_index":890,"title":{},"body":{"index.html":{}}}],["english",{"_index":338,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["eq",{"_index":424,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["eq[0].map(band",{"_index":583,"title":{},"body":{"injectables/EffectsService.html":{}}}],["eq[1].map(band",{"_index":593,"title":{},"body":{"injectables/EffectsService.html":{}}}],["eqeffect",{"_index":641,"title":{},"body":{"injectables/PlayerService.html":{}}}],["equal",{"_index":643,"title":{},"body":{"injectables/PlayerService.html":{}}}],["error",{"_index":632,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["event",{"_index":355,"title":{},"body":{"components/AppTabsComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{}}}],["event.preventdefault",{"_index":366,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.stoppropag",{"_index":367,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.target",{"_index":760,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["excursionoctav",{"_index":529,"title":{},"body":{"injectables/EffectsService.html":{}}}],["execut",{"_index":887,"title":{},"body":{"index.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["f",{"_index":567,"title":{},"body":{"injectables/EffectsService.html":{}}}],["fals",{"_index":124,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["feedback",{"_index":466,"title":{},"body":{"injectables/EffectsService.html":{}}}],["fi",{"_index":533,"title":{},"body":{"injectables/EffectsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["filechangeev",{"_index":282,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filechangeevent(fileinput",{"_index":285,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["fileinput",{"_index":287,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filelist",{"_index":289,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["fileread",{"_index":626,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["fill",{"_index":736,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fillheight",{"_index":776,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillleft",{"_index":778,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filloffset",{"_index":834,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillsiz",{"_index":765,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filltop",{"_index":777,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillwidth",{"_index":775,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filter",{"_index":432,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.frequency.valu",{"_index":590,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.gain.valu",{"_index":587,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.q.valu",{"_index":589,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.typ",{"_index":585,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter0",{"_index":582,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter1",{"_index":592,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filtertyp",{"_index":514,"title":{},"body":{"injectables/EffectsService.html":{}}}],["finish",{"_index":152,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["flag",{"_index":882,"title":{},"body":{"index.html":{}}}],["fn",{"_index":708,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fold",{"_index":695,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["formsmodul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["forwardref",{"_index":719,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["frequenc",{"_index":511,"title":{},"body":{"injectables/EffectsService.html":{}}}],["further",{"_index":893,"title":{},"body":{"index.html":{}}}],["gain",{"_index":500,"title":{},"body":{"injectables/EffectsService.html":{}}}],["gener",{"_index":859,"title":{},"body":{"index.html":{}}}],["get",{"_index":856,"title":{"index.html":{}},"body":{}}],["geteffect",{"_index":413,"title":{},"body":{"injectables/EffectsService.html":{}}}],["getfillheight",{"_index":803,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillleft",{"_index":807,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfilltop",{"_index":805,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillwidth",{"_index":801,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbheight",{"_index":795,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbleft",{"_index":799,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbtop",{"_index":797,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbwidth",{"_index":793,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackheight",{"_index":811,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackleft",{"_index":815,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettracktop",{"_index":813,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackwidth",{"_index":809,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["go",{"_index":896,"title":{},"body":{"index.html":{}}}],["graph",{"_index":914,"title":{},"body":{"modules.html":{}}}],["height",{"_index":137,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["help",{"_index":894,"title":{},"body":{"index.html":{}}}],["here",{"_index":271,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["higher",{"_index":462,"title":{},"body":{"injectables/EffectsService.html":{}}}],["highpass",{"_index":515,"title":{},"body":{"injectables/EffectsService.html":{}}}],["highshelf",{"_index":518,"title":{},"body":{"injectables/EffectsService.html":{}}}],["hostlisten",{"_index":349,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["hostlistener('document:click",{"_index":748,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["hostlistener('window:dragleav",{"_index":372,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["hostlistener('window:dragov",{"_index":370,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["htmlelement",{"_index":787,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["http://localhost:4200",{"_index":871,"title":{},"body":{"index.html":{}}}],["http://virtualdj",{"_index":908,"title":{},"body":{"index.html":{}}}],["http://virtualdj.surge.sh",{"_index":910,"title":{},"body":{"index.html":{}}}],["https://clm2609.gitlab.io/tfg",{"_index":902,"title":{},"body":{"index.html":{}}}],["i+1",{"_index":341,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["icon",{"_index":29,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["id",{"_index":429,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["ignor",{"_index":721,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["includes(lowsearch",{"_index":264,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["inject",{"_index":406,"title":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"overview.html":{}}}],["input",{"_index":90,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["intens",{"_index":523,"title":{},"body":{"injectables/EffectsService.html":{}}}],["isplay",{"_index":644,"title":{},"body":{"injectables/PlayerService.html":{}}}],["isplaying(deck",{"_index":654,"title":{},"body":{"injectables/PlayerService.html":{}}}],["j",{"_index":308,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["jest",{"_index":889,"title":{},"body":{"index.html":{}}}],["js",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":299,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(effect",{"_index":329,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.availableeffects.find(a",{"_index":333,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.effect",{"_index":549,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.parse(json.stringify(this.playerserv.effect",{"_index":318,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(localstorage.getitem(\"effect",{"_index":596,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.stringify(this.effect",{"_index":557,"title":{},"body":{"injectables/EffectsService.html":{}}}],["knee",{"_index":508,"title":{},"body":{"injectables/EffectsService.html":{}}}],["languag",{"_index":336,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["latest",{"_index":905,"title":{},"body":{"index.html":{}}}],["layout",{"_index":180,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":46,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["layout.compon",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["layout.component.css",{"_index":181,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.html",{"_index":182,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.t",{"_index":179,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:8",{"_index":183,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout/app",{"_index":178,"title":{},"body":{"components/AppLayoutComponent.html":{},"modules/AppModule.html":{}}}],["left",{"_index":446,"title":{},"body":{"injectables/EffectsService.html":{}}}],["legend",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["licens",{"_index":33,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["light",{"_index":339,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["list",{"_index":228,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list'},{'nam",{"_index":49,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["list.compon",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":229,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.html",{"_index":230,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.t",{"_index":227,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:11",{"_index":244,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:13",{"_index":243,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:14",{"_index":246,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:15",{"_index":237,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:30",{"_index":239,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:33",{"_index":241,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:36",{"_index":242,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list/app",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/AppMusicListComponent.html":{}}}],["lo",{"_index":532,"title":{},"body":{"injectables/EffectsService.html":{}}}],["load",{"_index":268,"title":{},"body":{"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["load(deck",{"_index":610,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["loader.servic",{"_index":115,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["loader.service.t",{"_index":598,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:10",{"_index":618,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:11",{"_index":613,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:12",{"_index":617,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:13",{"_index":614,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:14",{"_index":605,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:18",{"_index":611,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:32",{"_index":607,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:36",{"_index":609,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:8",{"_index":621,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:9",{"_index":620,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loadondeck",{"_index":234,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loadondeck(deck",{"_index":238,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loc",{"_index":832,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["localstorage.getitem(\"effect",{"_index":595,"title":{},"body":{"injectables/EffectsService.html":{}}}],["localstorage.setitem(\"effect",{"_index":556,"title":{},"body":{"injectables/EffectsService.html":{}}}],["lowpass",{"_index":482,"title":{},"body":{"injectables/EffectsService.html":{}}}],["lowsearch",{"_index":257,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["lowshelf",{"_index":517,"title":{},"body":{"injectables/EffectsService.html":{}}}],["made",{"_index":30,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["makeup",{"_index":499,"title":{},"body":{"injectables/EffectsService.html":{}}}],["makeupgain",{"_index":502,"title":{},"body":{"injectables/EffectsService.html":{}}}],["mastermultipli",{"_index":404,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["match",{"_index":67,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchesselector",{"_index":752,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["matchesselector.call(el",{"_index":757,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["math.max(0",{"_index":835,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["math.max(valoranterior",{"_index":553,"title":{},"body":{"injectables/EffectsService.html":{}}}],["max",{"_index":480,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["method",{"_index":86,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["mid0",{"_index":381,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["mid1",{"_index":382,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["min",{"_index":479,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["modul",{"_index":184,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moog",{"_index":431,"title":{},"body":{"injectables/EffectsService.html":{}}}],["moogfilt",{"_index":433,"title":{},"body":{"injectables/EffectsService.html":{}}}],["more",{"_index":895,"title":{},"body":{"index.html":{}}}],["mouseev",{"_index":704,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["multi",{"_index":724,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music",{"_index":48,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music.filter(mu",{"_index":262,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musiclist",{"_index":231,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicload",{"_index":601,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["musicloaderservic",{"_index":93,"title":{"injectables/MusicLoaderService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["musicservic",{"_index":82,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["musicservice.mus",{"_index":248,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicservice.music$.subscribe(a",{"_index":250,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicsubscript",{"_index":122,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["navig",{"_index":870,"title":{},"body":{"index.html":{}}}],["new",{"_index":560,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"index.html":{}}}],["ng",{"_index":867,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":720,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ngafterviewinit",{"_index":136,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["ngmodul",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":160,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["noop",{"_index":722,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["normalize('nfd",{"_index":259,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["normfreq",{"_index":453,"title":{},"body":{"injectables/EffectsService.html":{}}}],["notch",{"_index":520,"title":{},"body":{"injectables/EffectsService.html":{}}}],["npm",{"_index":886,"title":{},"body":{"index.html":{}}}],["null",{"_index":311,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["number",{"_index":98,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["number(a.id",{"_index":334,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["number(this.selectedeffects[i][j",{"_index":335,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["on(deck",{"_index":657,"title":{},"body":{"injectables/PlayerService.html":{}}}],["onchangecallback",{"_index":726,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ondestroy",{"_index":75,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ondocumentclick(ev",{"_index":749,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ondragover(ev",{"_index":371,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ontouchedcallback",{"_index":725,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["option",{"_index":97,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["out",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outputgain",{"_index":492,"title":{},"body":{"injectables/EffectsService.html":{}}}],["overdr",{"_index":491,"title":{},"body":{"injectables/EffectsService.html":{}}}],["overview",{"_index":916,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":841,"title":{"dependencies.html":{}},"body":{}}],["pan",{"_index":448,"title":{},"body":{"injectables/EffectsService.html":{}}}],["panner",{"_index":447,"title":{},"body":{"injectables/EffectsService.html":{}}}],["paramet",{"_index":95,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["pc",{"_index":826,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["peak",{"_index":519,"title":{},"body":{"injectables/EffectsService.html":{}}}],["percent",{"_index":737,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["phaser",{"_index":455,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ping",{"_index":443,"title":{},"body":{"injectables/EffectsService.html":{}}}],["pingpongdelay",{"_index":445,"title":{},"body":{"injectables/EffectsService.html":{}}}],["player.servic",{"_index":622,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["playerserv",{"_index":304,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["playerservic",{"_index":83,"title":{"injectables/PlayerService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["playpaus",{"_index":88,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["playpause(deck",{"_index":660,"title":{},"body":{"injectables/PlayerService.html":{}}}],["pong",{"_index":444,"title":{},"body":{"injectables/EffectsService.html":{}}}],["possibl",{"_index":463,"title":{},"body":{"injectables/EffectsService.html":{}}}],["preparedeffect",{"_index":562,"title":{},"body":{"injectables/EffectsService.html":{}}}],["preparedeffects.push(new",{"_index":563,"title":{},"body":{"injectables/EffectsService.html":{}}}],["privat",{"_index":121,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["prod",{"_index":881,"title":{},"body":{"index.html":{}}}],["product",{"_index":883,"title":{},"body":{"index.html":{}}}],["progresscolor",{"_index":149,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["project",{"_index":858,"title":{},"body":{"index.html":{}}}],["properti",{"_index":80,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["protractor",{"_index":892,"title":{},"body":{"index.html":{}}}],["provid",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["providedin",{"_index":548,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["purpl",{"_index":150,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["q",{"_index":512,"title":{},"body":{"injectables/EffectsService.html":{}}}],["queri",{"_index":232,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["rang",{"_index":461,"title":{},"body":{"injectables/EffectsService.html":{}}}],["rate",{"_index":456,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ratio",{"_index":507,"title":{},"body":{"injectables/EffectsService.html":{}}}],["reader",{"_index":625,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onerror",{"_index":631,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onload",{"_index":628,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.readasdataurl(song",{"_index":627,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.result",{"_index":630,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["readm",{"_index":898,"title":{},"body":{"index.html":{}}}],["recievedfil",{"_index":283,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["recievedfiles(fil",{"_index":288,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["red",{"_index":148,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["registeronchang",{"_index":696,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registeronchange(fn",{"_index":706,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouch",{"_index":697,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouched(fn",{"_index":709,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["releas",{"_index":505,"title":{},"body":{"injectables/EffectsService.html":{}}}],["reload",{"_index":872,"title":{},"body":{"index.html":{}}}],["removeeffect",{"_index":414,"title":{},"body":{"injectables/EffectsService.html":{}}}],["removeeffect(id",{"_index":427,"title":{},"body":{"injectables/EffectsService.html":{}}}],["removesong",{"_index":235,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["removesong(song",{"_index":240,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["replace(/[\\u0300",{"_index":260,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["requestanimationfram",{"_index":141,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["reset",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetdisc",{"_index":89,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["reson",{"_index":437,"title":{},"body":{"injectables/EffectsService.html":{}}}],["result",{"_index":66,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":102,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["right",{"_index":449,"title":{},"body":{"injectables/EffectsService.html":{}}}],["root",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["root'},{'nam",{"_index":42,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["rotat",{"_index":84,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["roulett",{"_index":59,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["roulettecontrollercompon",{"_index":58,"title":{"components/RouletteControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["roundicon",{"_index":36,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["rout",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":866,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":118,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["save",{"_index":645,"title":{},"body":{"injectables/PlayerService.html":{}}}],["save(deck",{"_index":662,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeffect",{"_index":646,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeffects(deck",{"_index":664,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeq",{"_index":647,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeq(eq",{"_index":666,"title":{},"body":{"injectables/PlayerService.html":{}}}],["scaffold",{"_index":874,"title":{},"body":{"index.html":{}}}],["search",{"_index":269,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{}}}],["search'},{'nam",{"_index":51,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["search.compon",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.css",{"_index":280,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.html",{"_index":281,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.t",{"_index":279,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:15",{"_index":286,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:19",{"_index":290,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:9",{"_index":284,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search/app",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/AppSearchComponent.html":{}}}],["searchmus",{"_index":255,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchmusic(this.queri",{"_index":265,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchqueri",{"_index":256,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["see",{"_index":904,"title":{},"body":{"index.html":{}}}],["selectedeffect",{"_index":300,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["sensit",{"_index":531,"title":{},"body":{"injectables/EffectsService.html":{}}}],["serv",{"_index":868,"title":{},"body":{"index.html":{}}}],["server",{"_index":865,"title":{},"body":{"index.html":{}}}],["services/effects.servic",{"_index":316,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["services/mus",{"_index":114,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["services/player.servic",{"_index":116,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["set",{"_index":294,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{}}}],["setact",{"_index":348,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["setactive(act",{"_index":361,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["seteq",{"_index":389,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["setinterv",{"_index":127,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["settings'},{'nam",{"_index":53,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["settings.compon",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["settings.component.css",{"_index":295,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.html",{"_index":296,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.t",{"_index":293,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":314,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:16",{"_index":313,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":312,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":310,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":315,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:30",{"_index":309,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:9",{"_index":305,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings/app",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/AppSettingsComponent.html":{}}}],["setvalu",{"_index":769,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["setvolum",{"_index":648,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setvolume(deck",{"_index":668,"title":{},"body":{"injectables/PlayerService.html":{}}}],["shell",{"_index":766,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetheight",{"_index":822,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetwidth",{"_index":821,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shellview",{"_index":767,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shownmus",{"_index":233,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["signal",{"_index":484,"title":{},"body":{"injectables/EffectsService.html":{}}}],["slider",{"_index":62,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["slidercontrollercompon",{"_index":61,"title":{"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["smallval",{"_index":820,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["smashicon",{"_index":31,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["song",{"_index":85,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["song.nam",{"_index":165,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["sound",{"_index":539,"title":{},"body":{"injectables/EffectsService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["spanish",{"_index":337,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["src/app/app",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/app",{"_index":6,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["src/app/components/roulett",{"_index":688,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["src/app/components/slid",{"_index":764,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["src/app/services/effects.service.t",{"_index":407,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:216",{"_index":426,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:219",{"_index":417,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:225",{"_index":428,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:229",{"_index":419,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:238",{"_index":422,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:353",{"_index":425,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:371",{"_index":415,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:75",{"_index":545,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:8",{"_index":476,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/mus",{"_index":597,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["src/app/services/player.service.t",{"_index":637,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:10",{"_index":672,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:11",{"_index":671,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:12",{"_index":674,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:13",{"_index":678,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:14",{"_index":670,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:15",{"_index":680,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:16",{"_index":681,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:17",{"_index":679,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:18",{"_index":673,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:19",{"_index":675,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:20",{"_index":649,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:27",{"_index":663,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:33",{"_index":669,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:36",{"_index":659,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:39",{"_index":656,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:42",{"_index":661,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:45",{"_index":655,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:48",{"_index":652,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:55",{"_index":653,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:61",{"_index":667,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:66",{"_index":665,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:73",{"_index":651,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stage",{"_index":906,"title":{},"body":{"index.html":{}}}],["stage.surge.sh",{"_index":909,"title":{},"body":{"index.html":{}}}],["start",{"_index":267,"title":{"index.html":{}},"body":{"components/AppMusicListComponent.html":{}}}],["state",{"_index":907,"title":{},"body":{"index.html":{}}}],["stereophas",{"_index":468,"title":{},"body":{"injectables/EffectsService.html":{}}}],["stopdrag",{"_index":373,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["store",{"_index":878,"title":{},"body":{"index.html":{}}}],["string",{"_index":245,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["string(mus.nam",{"_index":263,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["subject",{"_index":612,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["subscript",{"_index":117,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["support",{"_index":911,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":912,"title":{},"body":{"modules.html":{}}}],["sweep",{"_index":530,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tab",{"_index":344,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs'},{'nam",{"_index":55,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tabs.compon",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.component.css",{"_index":345,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.html",{"_index":346,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.t",{"_index":343,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:10",{"_index":363,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:11",{"_index":364,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:12",{"_index":365,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:13",{"_index":362,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:15",{"_index":352,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:20",{"_index":359,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:27",{"_index":357,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:33",{"_index":353,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:36",{"_index":360,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs/app",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/AppTabsComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["test",{"_index":885,"title":{},"body":{"index.html":{}}}],["tfg",{"_index":857,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":157,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.activeeffects[deck",{"_index":684,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.applyeffect",{"_index":686,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.availableeffect",{"_index":319,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.availableeffects.find(b",{"_index":324,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.config.id",{"_index":729,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.config.max",{"_index":731,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.min",{"_index":730,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.vert",{"_index":818,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.config.zindex",{"_index":839,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.configslid",{"_index":728,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.max",{"_index":739,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.min",{"_index":738,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.deckloader[0].asobserv",{"_index":615,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[1].asobserv",{"_index":616,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[deck].next(this.decksongs[deck",{"_index":624,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.decknumb",{"_index":139,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.decksongs[deck",{"_index":623,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.drag",{"_index":369,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.effect",{"_index":133,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{}}}],["this.effectloader[0].asobserv",{"_index":676,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectloader[1].asobserv",{"_index":677,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectloader[deck].next(this.effects[deck",{"_index":687,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effects.filter(effect",{"_index":558,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects.map(c",{"_index":322,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects.push(effect",{"_index":555,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects.reduce((valoranterior",{"_index":551,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects[0",{"_index":328,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects[1",{"_index":331,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effectserv.createeffects(this.deck[deck].backend.ac",{"_index":685,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectserv.geteffect",{"_index":320,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.fills",{"_index":833,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.fold",{"_index":743,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.music.push(song",{"_index":634,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.music.splice(this.music.indexof(song",{"_index":636,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musiclist",{"_index":247,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicloader.asobserv",{"_index":619,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicloader.next(this.mus",{"_index":635,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicservic",{"_index":125,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.musicservice.decksongs$[this.decknumber].subscribe(a",{"_index":155,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.musicservice.deletesong(song",{"_index":252,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicservice.load(deck",{"_index":251,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicsubscript",{"_index":154,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.musicsubscription.unsubscrib",{"_index":161,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.onchangecallback",{"_index":747,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.slid",{"_index":840,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.valu",{"_index":742,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.ontouchedcallback",{"_index":744,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.playerserv.effects$[0].subscribe(effect",{"_index":327,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.effects$[1].subscribe(effect",{"_index":330,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.saveeffect",{"_index":332,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerservic",{"_index":126,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["this.playerservice.activateeffect(this.decknumb",{"_index":164,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.effects$[this.decknumber].subscribe(effect",{"_index":130,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.isplaying(this.decknumb",{"_index":163,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.load(deck",{"_index":629,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.playerservice.on(this.decknumb",{"_index":151,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.playpause(this.decknumb",{"_index":162,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.sav",{"_index":142,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.queri",{"_index":253,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.recievedfiles(event.datatransfer.fil",{"_index":368,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.recievedfiles(fileinput.target.fil",{"_index":291,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["this.resetdisc",{"_index":153,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.rot",{"_index":128,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["this.selectedeffect",{"_index":321,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.shel",{"_index":819,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shellview.nativeel",{"_index":837,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shownmus",{"_index":254,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.slid",{"_index":825,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.song",{"_index":156,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.thumbheight",{"_index":829,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.thumbwidth",{"_index":830,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.updatemus",{"_index":249,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.valu",{"_index":732,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.volumemast",{"_index":405,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["this.zindex",{"_index":838,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["threshold",{"_index":501,"title":{},"body":{"injectables/EffectsService.html":{}}}],["thumb",{"_index":733,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["thumbheight",{"_index":772,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbleft",{"_index":774,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbsiz",{"_index":828,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbtop",{"_index":773,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbwidth",{"_index":771,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tolowercas",{"_index":258,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["track",{"_index":734,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["trackheight",{"_index":780,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackleft",{"_index":782,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracksiz",{"_index":831,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracktop",{"_index":781,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackwidth",{"_index":779,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trebble0",{"_index":383,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["trebble1",{"_index":384,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["tremolo",{"_index":522,"title":{},"body":{"injectables/EffectsService.html":{}}}],["true",{"_index":135,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tuna",{"_index":546,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["tuna(ac",{"_index":561,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tuna[effect.type](effect.config",{"_index":564,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tunaj",{"_index":547,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["type",{"_index":96,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["typeof",{"_index":745,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["u036f]/g",{"_index":261,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["undefin",{"_index":746,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["unfold",{"_index":698,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["unit",{"_index":884,"title":{},"body":{"index.html":{}}}],["updatemus",{"_index":236,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["us",{"_index":497,"title":{},"body":{"injectables/EffectsService.html":{},"index.html":{}}}],["useexist",{"_index":723,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["val",{"_index":824,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["valoractu",{"_index":552,"title":{},"body":{"injectables/EffectsService.html":{}}}],["valoractual.id",{"_index":554,"title":{},"body":{"injectables/EffectsService.html":{}}}],["valu",{"_index":108,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["var",{"_index":37,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["version",{"_index":862,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":735,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["via",{"_index":888,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":790,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["viewchild('slidershel",{"_index":817,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["void",{"_index":103,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volum",{"_index":376,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["volume'},{'nam",{"_index":57,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volume.compon",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["volume.component.css",{"_index":377,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.html",{"_index":378,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.t",{"_index":375,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:10",{"_index":390,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:12",{"_index":401,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:13",{"_index":402,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:14",{"_index":403,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:15",{"_index":394,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:16",{"_index":396,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:17",{"_index":398,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:18",{"_index":395,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:19",{"_index":397,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:20",{"_index":399,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:21",{"_index":392,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:34",{"_index":393,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume/app",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"components/AppVolumeComponent.html":{}}}],["volume0",{"_index":385,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume1",{"_index":386,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volumemast",{"_index":387,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["wah",{"_index":526,"title":{},"body":{"injectables/EffectsService.html":{}}}],["wahwah",{"_index":524,"title":{},"body":{"injectables/EffectsService.html":{}}}],["wavecolor",{"_index":147,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurf",{"_index":119,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["wavesurfer.cr",{"_index":143,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurfer.j",{"_index":120,"title":{},"body":{"components/AppDeckComponent.html":{},"dependencies.html":{}}}],["webapp",{"_index":903,"title":{},"body":{"index.html":{}}}],["wetlevel",{"_index":487,"title":{},"body":{"injectables/EffectsService.html":{}}}],["window:dragleav",{"_index":350,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragov",{"_index":351,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragover(ev",{"_index":356,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["writevalu",{"_index":699,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["writevalue(valu",{"_index":713,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["www.flaticon.com",{"_index":32,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["zindex",{"_index":768,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["zone.j",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppAboutComponent.html":{"url":"components/AppAboutComponent.html","title":"component - AppAboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppAboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-about/app-about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                app-about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-about.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-about/app-about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './app-about.component.html',\n  styleUrls: ['./app-about.component.css']\n})\nexport class AppAboutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  Content attribution:\n\n\n\n  \n  \n  Icons made by\n    Smashicons\n    from\n    www.flaticon.com\n    is licensed by\n    CC 3.0 BY\n  \n\n\n\n  \n  \n  Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Content attribution:      Icons made by    Smashicons    from    www.flaticon.com    is licensed by    CC 3.0 BY        Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppAboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n-->\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppDeckComponent.html":{"url":"components/AppDeckComponent.html","title":"component - AppDeckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppDeckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-deck/app-deck.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deck\n            \n\n            \n                styleUrls\n                app-deck.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-deck.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effects\n                            \n                            \n                                musicService\n                            \n                            \n                                playerService\n                            \n                            \n                                rotation\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyEffect\n                            \n                            \n                                playPause\n                            \n                            \n                                resetDisc\n                            \n                            \n                                rotate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deckNumber\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-deck/app-deck.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deckNumber\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffect(i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetDisc\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetDisc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [{}, {}, {}, {}, {}, {}] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            song\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        song:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { PlayerService } from '../../services/player.service';\nimport { Subscription } from 'rxjs';\nimport * as WaveSurfer from 'wavesurfer.js';\n\n@Component({\n  selector: 'app-deck',\n  templateUrl: './app-deck.component.html',\n  styleUrls: ['./app-deck.component.css']\n})\nexport class AppDeckComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  deckNumber: number;\n  private musicSubscription: Subscription;\n  musicService: MusicLoaderService;\n  playerService: PlayerService;\n  rotation = 0;\n  private active = false;\n  song: any;\n  effects = [{}, {}, {}, {}, {}, {}] as any;\n  constructor(musicService: MusicLoaderService, playerService: PlayerService) {\n    this.musicService = musicService;\n    this.playerService = playerService;\n  }\n  ngOnInit() {\n    setInterval(() => {\n      this.rotate();\n    }, 50);\n    this.playerService.effects$[this.deckNumber].subscribe(effects => {\n      const eff = effects as any;\n      this.effects = eff.filter(_ => true);\n    });\n  }\n  ngAfterViewInit(): void {\n    const height = document.getElementById('deck_' + this.deckNumber + '_wave').offsetHeight;\n    requestAnimationFrame(() => {\n      this.playerService.save(\n        this.deckNumber,\n        WaveSurfer.create({\n          container: '#deck_' + this.deckNumber + '_wave',\n          waveColor: 'red',\n          progressColor: 'purple',\n          height: height\n        })\n      );\n      this.playerService.on(this.deckNumber, 'finish', () => {\n        this.resetDisc();\n      });\n    });\n    this.musicSubscription = this.musicService.decksongs$[this.deckNumber].subscribe(a => {\n      this.resetDisc();\n      this.song = a as File;\n    });\n  }\n  rotate() {\n    if (this.active) {\n      this.rotation = (this.rotation + 10) % 360;\n    }\n  }\n  resetDisc() {\n    this.active = false;\n    this.rotation = 0;\n  }\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n  playPause() {\n    this.playerService.playPause(this.deckNumber);\n    this.active = this.playerService.isPlaying(this.deckNumber);\n  }\n  applyEffect(i) {\n    this.playerService.activateEffect(this.deckNumber, i);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n    \n\n    \n      \n        {{song.name}}\n      \n\n      \n        \n          \n            \n          \n          \n            2x\n            4x\n            8x\n            16x\n            32x\n          \n        \n        \n          \n            \n              CUEs\n              \n                CUE 1\n                CUE 2\n                CUE 3\n                CUE 4\n              \n              Effects\n              \n                \n                  1\n                  2\n                  3\n                \n                \n                  4\n                  5\n                  6\n                \n              \n            \n            \n              \n            \n          \n          \n            CUE\n            \n              \n                \n                \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{song.name}}                                                                          2x            4x            8x            16x            32x                                                              CUEs                              CUE 1                CUE 2                CUE 3                CUE 4                            Effects                                                1                  2                  3                                                  4                  5                  6                                                                                                                CUE                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppDeckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppLayoutComponent.html":{"url":"components/AppLayoutComponent.html","title":"component - AppLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-layout/app-layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                app-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-layout.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-layout/app-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './app-layout.component.html',\n  styleUrls: ['./app-layout.component.css']\n})\nexport class AppLayoutComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppAboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                AppDeckComponent\n                            \n                            \n                                AppLayoutComponent\n                            \n                            \n                                AppMusicListComponent\n                            \n                            \n                                AppSearchComponent\n                            \n                            \n                                AppSettingsComponent\n                            \n                            \n                                AppTabsComponent\n                            \n                            \n                                AppVolumeComponent\n                            \n                            \n                                RouletteControllerComponent\n                            \n                            \n                                SliderControllerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppDeckComponent } from './components/app-deck/app-deck.component';\nimport { AppLayoutComponent } from './components/app-layout/app-layout.component';\nimport { AppVolumeComponent } from './components/app-volume/app-volume.component';\nimport { SliderControllerComponent } from './components/slider-controller/slider-controller.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouletteControllerComponent } from './components/roulette-controller/roulette-controller.component';\nimport { AppSearchComponent } from './components/app-search/app-search.component';\nimport { AppTabsComponent } from './components/app-tabs/app-tabs.component';\nimport { AppMusicListComponent } from './components/app-music-list/app-music-list.component';\nimport { AppSettingsComponent } from './components/app-settings/app-settings.component';\nimport { AppAboutComponent } from './components/app-about/app-about.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppDeckComponent,\n    AppLayoutComponent,\n    AppVolumeComponent,\n    SliderControllerComponent,\n    RouletteControllerComponent,\n    AppSearchComponent,\n    AppTabsComponent,\n    AppMusicListComponent,\n    AppSettingsComponent,\n    AppAboutComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppMusicListComponent.html":{"url":"components/AppMusicListComponent.html","title":"component - AppMusicListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppMusicListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-music-list/app-music-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music-list\n            \n\n            \n                styleUrls\n                app-music-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-music-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicList\n                            \n                            \n                                musicService\n                            \n                            \n                                query\n                            \n                            \n                                shownMusic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadOnDeck\n                            \n                            \n                                removeSong\n                            \n                            \n                                updateMusic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOnDeck\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadOnDeck(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeSong\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateMusic()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicList:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shownMusic:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-music-list',\n  templateUrl: './app-music-list.component.html',\n  styleUrls: ['./app-music-list.component.css']\n})\nexport class AppMusicListComponent implements OnDestroy {\n  musicService: MusicLoaderService;\n  private musicSubscription: Subscription;\n  musicList: File[];\n  shownMusic: File[];\n  query: string;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n    this.musicList = musicService.music;\n    this.updateMusic();\n    this.musicSubscription = musicService.music$.subscribe(a => {\n      this.musicList = a as File[];\n      this.updateMusic();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n\n  loadOnDeck(deck, song) {\n    this.musicService.load(deck, song);\n  }\n  removeSong(song) {\n    this.musicService.deleteSong(song);\n  }\n  updateMusic() {\n    if (!this.query) {\n      this.shownMusic = this.musicList;\n    } else {\n      const searchMusic = (searchQuery, music: any[]) => {\n        const lowSearch = searchQuery\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n        return music.filter(mus => {\n          return String(mus.name)\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .includes(lowSearch);\n        });\n      };\n      this.shownMusic = searchMusic(this.query, this.musicList);\n    }\n  }\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      \n        \n          Song\n          \n            \n            \n          \n        \n      \n      Artist -->\n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      {{song.name}}\n       -->\n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n    \n    \n      No songs match {{query}}\n    \n\n  \n  \n    \n    To start load music from the search or drag music here from your computer.\n  \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                                  Song                                                                Artist -->                                                                        {{song.name}}       -->                                                                                                                                          No songs match {{query}}                To start load music from the search or drag music here from your computer.    '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppMusicListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), FormsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSearchComponent.html":{"url":"components/AppSearchComponent.html","title":"component - AppSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-search/app-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                app-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChangeEvent\n                            \n                            \n                                recievedFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChangeEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChangeEvent(fileInput: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileInput\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n@Component({\n  selector: 'app-search',\n  templateUrl: './app-search.component.html',\n  styleUrls: ['./app-search.component.css']\n})\nexport class AppSearchComponent implements OnInit {\n  musicService: MusicLoaderService;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  ngOnInit() {}\n  fileChangeEvent(fileInput: any) {\n    this.recievedFiles(fileInput.target.files);\n  }\n\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n\n    \n    \n      \n      Choose a\n        file\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                          Choose a        file      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSettingsComponent.html":{"url":"components/AppSettingsComponent.html","title":"component - AppSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-settings/app-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                app-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableEffects\n                            \n                            \n                                effects\n                            \n                            \n                                effectsNum\n                            \n                            \n                                JSON\n                            \n                            \n                                selectedEffects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, playerServ: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-settings/app-settings.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerServ\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(i: , j: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        j\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [null, null] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JSON:     \n\n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EffectsService } from '../../services/effects.service';\nimport { PlayerService } from '../../services/player.service';\n@Component({\n  selector: 'app-settings',\n  templateUrl: './app-settings.component.html',\n  styleUrls: ['./app-settings.component.css']\n})\nexport class AppSettingsComponent implements OnInit {\n  constructor(private effectServ: EffectsService, private playerServ: PlayerService) {\n    this.effects = JSON.parse(JSON.stringify(this.playerServ.effects));\n    this.availableEffects = this.effectServ.getEffects();\n    this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n  }\n  JSON = JSON;\n  effectsNum = 6;\n  effects = [null, null] as any;\n  availableEffects: any;\n  selectedEffects: any;\n  ngOnInit() {\n    this.playerServ.effects$[0].subscribe(effects => {\n      this.effects[0] = JSON.parse(JSON.stringify(effects));\n      this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n    });\n    this.playerServ.effects$[1].subscribe(effects => {\n      this.effects[1] = JSON.parse(JSON.stringify(effects));\n      this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n    });\n  }\n  change(i, j) {\n    this.playerServ.saveEffects(\n      i,\n      j,\n      JSON.parse(JSON.stringify(this.availableEffects.find(a => Number(a.id) === Number(this.selectedEffects[i][j]))))\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Language\n\n      \n        Spanish\n        English\n      \n    \n    \n      Template\n      \n        Light\n        Dark\n      \n    \n  \n  \n    \n      Effects deck {{i+1}}\n      \n        \n          Effect {{j}}\n          \n            \n              {{availableEffect.name}}\n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Language              Spanish        English                    Template              Light        Dark                        Effects deck {{i+1}}                        Effect {{j}}                                    {{availableEffect.name}}                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppTabsComponent.html":{"url":"components/AppTabsComponent.html","title":"component - AppTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-tabs/app-tabs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                app-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                dragging\n                            \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                droped\n                            \n                            \n                                recievedFiles\n                            \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:dragleave\n                            \n                            \n                                window:dragover\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-tabs/app-tabs.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragleave\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:dragleave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:dragover(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            droped\n                            \n                            \n                        \n                    \n                \n                \n                    \ndroped(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActive(active: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'music'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragging\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dragging:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './app-tabs.component.html',\n  styleUrls: ['./app-tabs.component.css']\n})\nexport class AppTabsComponent {\n  active = 'music';\n  dragging = false;\n  musicService: MusicLoaderService;\n  setActive(active) {\n    this.active = active;\n  }\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  droped(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.recievedFiles(event.dataTransfer.files);\n    this.dragging = false;\n  }\n  @HostListener('window:dragover', ['$event'])\n  onDragOver(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.dragging = true;\n  }\n  @HostListener('window:dragleave')\n  stopdrag() {\n    this.dragging = false;\n  }\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n        Music\n      \n      \n        Settings\n      \n      \n        About\n      \n    \n    \n      \n      \n      \n    \n  \n  \n    Drop your song here\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Music                    Settings                    About                                            Drop your song here  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppVolumeComponent.html":{"url":"components/AppVolumeComponent.html","title":"component - AppVolumeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppVolumeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-volume/app-volume.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volume\n            \n\n            \n                styleUrls\n                app-volume.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-volume.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bass0\n                            \n                            \n                                bass1\n                            \n                            \n                                mid0\n                            \n                            \n                                mid1\n                            \n                            \n                                trebble0\n                            \n                            \n                                trebble1\n                            \n                            \n                                volume0\n                            \n                            \n                                volume1\n                            \n                            \n                                volumeMaster\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeVolume\n                            \n                            \n                                setEQ\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-volume/app-volume.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeVolume(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEQ()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volumeMaster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volumeMaster:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PlayerService } from '../../services/player.service';\nimport { EffectsService } from '../../services/effects.service';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './app-volume.component.html',\n  styleUrls: ['./app-volume.component.css']\n})\nexport class AppVolumeComponent implements OnInit {\n  constructor(private effectServ: EffectsService, private playerService: PlayerService) {}\n  volume0 = 100;\n  volume1 = 100;\n  volumeMaster = 0;\n  bass0 = 0;\n  mid0 = 0;\n  trebble0 = 0;\n  bass1 = 0;\n  mid1 = 0;\n  trebble1 = 0;\n  changeVolume(deck) {\n    let masterMultiplier = 1;\n    if (deck === 0 && this.volumeMaster > 0) {\n      masterMultiplier = (100 - this.volumeMaster) / 100;\n    }\n    if (deck === 1 && this.volumeMaster \n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n      \n    \n    \n      \n\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppVolumeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EffectsService.html":{"url":"injectables/EffectsService.html","title":"injectable - EffectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EffectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/effects.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effects\n                            \n                            \n                                effectsCreator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEffect\n                            \n                            \n                                createEffects\n                            \n                            \n                                createEQ\n                            \n                            \n                                createEQEffect\n                            \n                            \n                                getEffects\n                            \n                            \n                                removeEffect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/effects.service.ts:371\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \naddEffect(effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:219\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEffects(ac: , effects: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ac\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        effects\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEQ(bass0: , mid0: , trebble0: , bass1: , mid1: , trebble1: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:238\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bass0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mid0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trebble0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bass1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mid1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trebble1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEQEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEQEffect(deck: , eq: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:353\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        eq\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:216\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveEffect(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:225\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      id: 1,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      id: 2,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      id: 3,\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      id: 4,\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      id: 0,\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      id: 5,\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsCreator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsCreator:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Chorus',\n      effect: 'Chorus',\n      description: 'A basic chorus effect.',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8 },\n        { name: 'feedback', min: 0, max: 1 },\n        { name: 'delay', min: 0, max: 1 },\n        { name: 'bypass', values: [0, 1] }\n      ]\n    },\n    {\n      description: 'A delay effect with feedback and a lowpass filter applied to the delayed signal.',\n      name: 'Delay',\n      effect: 'Delay',\n\n      configs: [\n        { name: 'feedback', min: 0, max: 1 },\n        { name: 'delayTime', min: 1, max: 10000 },\n        { name: 'wetLevel', min: 0, max: 1 },\n        { name: 'dryLevel', min: 0, max: 1 },\n        { name: 'cutoff', min: 20, max: 22050 },\n        { name: 'bypass', value: 0 },\n      ]\n    },\n    {\n      description: 'A basic phaser effect.',\n      name: 'Phaser',\n      effect: 'Phaser',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8 },\n        { name: 'depth', min: 0, max: 1 },\n        { name: 'feedback', min: 0, max: 1 },\n        { name: 'stereoPhase', min: 0, max: 180 },\n        { name: 'baseModulationFrequency', min: 500, max: 1500 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic overdrive effect.',\n      name: 'Overdrive',\n      effect: 'Overdrive',\n      configs: [\n\n        { name: 'outputGain', min: 0, max: 1 },\n        { name: 'drive', min: 0, max: 1 },\n        { name: 'curveAmount', min: 0, max: 1 },\n        { name: 'algorithmIndex', values: [0, 1, 2, 3, 4, 5] },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A compressor with the option to use automatic makeup gain.',\n      name: 'Compressor',\n      effect: 'Compressor',\n      configs: [\n        { name: 'threshold', min: -100, max: 0 },\n        { name: 'makeupGain', min: 0, max: 10 },\n        { name: 'attack', min: 0, max: 1000 },\n        { name: 'release', min: 0, max: 3000 },\n        { name: 'ratio', min: 1, max: 20 },\n        { name: 'knee', min: 0, max: 40 },\n        { name: 'automakeup', values: [true, false] },\n        { name: 'bypass', value: 0 }\n      ]\n    }, {\n      description: 'A basic filter.',\n      name: 'Filter',\n      effect: 'Filter',\n      configs: [{ name: 'frequency', min: 20, max: 22050 },\n      { name: 'Q', min: 0.001, max: 100 },\n      { name: 'gain', min: -40, max: 40 },\n      {\n        name: 'filterType', values: ['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch', 'allpass']\n      },\n      { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic tremolo.',\n      name: 'Tremolo',\n      effect: 'Tremolo',\n      configs: [{ name: 'intensity', min: 0, max: 1 },\n      { name: 'rate', min: 0.001, max: 8 },\n      { name: 'stereoPhase', min: 0, max: 180 },\n      { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A wahwah with an auto wah option.',\n      name: 'WahWah',\n      effect: 'WahWah',\n      configs: [\n        { name: 'automode', values: [true, false] },\n        { name: 'baseFrequency', min: 0, max: 1 },\n        { name: 'excursionOctaves', min: 1, max: 6 },\n        { name: 'sweep', min: 0, max: 1 },\n        { name: 'resonance', min: 1, max: 100 },\n        { name: 'sensitivity', min: -1, max: 1 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A lo- fi bitcrusher effect.',\n      name: 'Bitcrusher',\n      effect: 'Bitcrusher',\n      configs: [\n        { name: 'bits', min: 1, max: 16 },\n        { name: 'normfreq', min: 0, max: 1 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384] }\n      ]\n    },\n    {\n      description: 'A resonant, analog- sounding filter.',\n      name: 'MoogFilter',\n      effect: 'MoogFilter',\n      configs: [\n        { name: 'cutoff', min: 0, max: 1 },\n        { name: 'resonance', min: 0, max: 4 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384] }\n      ]\n    }, {\n      description: 'A delay that bounces between the left and right channel.',\n      name: 'Ping Pong Delay',\n      effect: 'PingPongDelay',\n      configs: [\n        { name: 'wetLevel', min: 0, max: 1 },\n        { name: 'feedback', min: 0, max: 1 },\n        { name: 'delayTimeLeft', min: 1, max: 10000 },\n        { name: 'delayTimeRight', min: 1, max: 10000 },\n      ]\n    }, {\n      description: 'A basic gain.',\n      name: 'Gain',\n      effect: 'Gain',\n      configs: [\n        { name: 'gain', min: 0, max: 40 },\n      ]\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:75\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Tuna from 'tunajs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EffectsService {\n  effects = [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      id: 1,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      id: 2,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      id: 3,\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      id: 4,\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      id: 0,\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      id: 5,\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ];\n  effectsCreator = [\n    {\n      name: 'Chorus',\n      effect: 'Chorus',\n      description: 'A basic chorus effect.',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8 },\n        { name: 'feedback', min: 0, max: 1 },\n        { name: 'delay', min: 0, max: 1 },\n        { name: 'bypass', values: [0, 1] }\n      ]\n    },\n    {\n      description: 'A delay effect with feedback and a lowpass filter applied to the delayed signal.',\n      name: 'Delay',\n      effect: 'Delay',\n\n      configs: [\n        { name: 'feedback', min: 0, max: 1 },\n        { name: 'delayTime', min: 1, max: 10000 },\n        { name: 'wetLevel', min: 0, max: 1 },\n        { name: 'dryLevel', min: 0, max: 1 },\n        { name: 'cutoff', min: 20, max: 22050 },\n        { name: 'bypass', value: 0 },\n      ]\n    },\n    {\n      description: 'A basic phaser effect.',\n      name: 'Phaser',\n      effect: 'Phaser',\n      configs: [\n        { name: 'rate', min: 0.01, max: 8 },\n        { name: 'depth', min: 0, max: 1 },\n        { name: 'feedback', min: 0, max: 1 },\n        { name: 'stereoPhase', min: 0, max: 180 },\n        { name: 'baseModulationFrequency', min: 500, max: 1500 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic overdrive effect.',\n      name: 'Overdrive',\n      effect: 'Overdrive',\n      configs: [\n\n        { name: 'outputGain', min: 0, max: 1 },\n        { name: 'drive', min: 0, max: 1 },\n        { name: 'curveAmount', min: 0, max: 1 },\n        { name: 'algorithmIndex', values: [0, 1, 2, 3, 4, 5] },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A compressor with the option to use automatic makeup gain.',\n      name: 'Compressor',\n      effect: 'Compressor',\n      configs: [\n        { name: 'threshold', min: -100, max: 0 },\n        { name: 'makeupGain', min: 0, max: 10 },\n        { name: 'attack', min: 0, max: 1000 },\n        { name: 'release', min: 0, max: 3000 },\n        { name: 'ratio', min: 1, max: 20 },\n        { name: 'knee', min: 0, max: 40 },\n        { name: 'automakeup', values: [true, false] },\n        { name: 'bypass', value: 0 }\n      ]\n    }, {\n      description: 'A basic filter.',\n      name: 'Filter',\n      effect: 'Filter',\n      configs: [{ name: 'frequency', min: 20, max: 22050 },\n      { name: 'Q', min: 0.001, max: 100 },\n      { name: 'gain', min: -40, max: 40 },\n      {\n        name: 'filterType', values: ['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch', 'allpass']\n      },\n      { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A basic tremolo.',\n      name: 'Tremolo',\n      effect: 'Tremolo',\n      configs: [{ name: 'intensity', min: 0, max: 1 },\n      { name: 'rate', min: 0.001, max: 8 },\n      { name: 'stereoPhase', min: 0, max: 180 },\n      { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A wahwah with an auto wah option.',\n      name: 'WahWah',\n      effect: 'WahWah',\n      configs: [\n        { name: 'automode', values: [true, false] },\n        { name: 'baseFrequency', min: 0, max: 1 },\n        { name: 'excursionOctaves', min: 1, max: 6 },\n        { name: 'sweep', min: 0, max: 1 },\n        { name: 'resonance', min: 1, max: 100 },\n        { name: 'sensitivity', min: -1, max: 1 },\n        { name: 'bypass', value: 0 }\n      ]\n    },\n    {\n      description: 'A lo- fi bitcrusher effect.',\n      name: 'Bitcrusher',\n      effect: 'Bitcrusher',\n      configs: [\n        { name: 'bits', min: 1, max: 16 },\n        { name: 'normfreq', min: 0, max: 1 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384] }\n      ]\n    },\n    {\n      description: 'A resonant, analog- sounding filter.',\n      name: 'MoogFilter',\n      effect: 'MoogFilter',\n      configs: [\n        { name: 'cutoff', min: 0, max: 1 },\n        { name: 'resonance', min: 0, max: 4 },\n        { name: 'bufferSize', values: [256, 512, 1024, 2048, 4096, 8192, 16384] }\n      ]\n    }, {\n      description: 'A delay that bounces between the left and right channel.',\n      name: 'Ping Pong Delay',\n      effect: 'PingPongDelay',\n      configs: [\n        { name: 'wetLevel', min: 0, max: 1 },\n        { name: 'feedback', min: 0, max: 1 },\n        { name: 'delayTimeLeft', min: 1, max: 10000 },\n        { name: 'delayTimeRight', min: 1, max: 10000 },\n      ]\n    }, {\n      description: 'A basic gain.',\n      name: 'Gain',\n      effect: 'Gain',\n      configs: [\n        { name: 'gain', min: 0, max: 40 },\n      ]\n    }\n  ]\n  getEffects() {\n    return JSON.parse(JSON.stringify(this.effects));\n  }\n  addEffect(effect) {\n    effect.id = this.effects.reduce((valorAnterior, valorActual) => Math.max(valorAnterior, valorActual.id), 0) + 1;\n    this.effects.push(effect);\n    localStorage.setItem(\"effects\", JSON.stringify(this.effects))\n  }\n\n  removeEffect(id) {\n    this.effects = this.effects.filter(effects => effects.id !== id);\n    localStorage.setItem(\"effects\", JSON.stringify(this.effects))\n  }\n  createEffects(ac, effects) {\n    const tuna = new Tuna(ac);\n    const preparedEffects = [];\n    for (const effect of effects) {\n      preparedEffects.push(new tuna[effect.type](effect.config));\n    }\n    return preparedEffects;\n  }\n  // Advanced volume\n  createEQ(bass0, mid0, trebble0, bass1, mid1, trebble1) {\n    const adjustEQValue = value => {\n      if (value > 0) {\n        return value / 5;\n      }\n      return value;\n    };\n    const EQ = [\n      [\n        {\n          f: 32,\n          type: 'lowshelf',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 64,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 125,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 250,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 500,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * bass0 + 0.25 * mid0)\n        },\n        {\n          f: 1000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid0 + 0.25 * bass0)\n        },\n        {\n          f: 2000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid0 + 0.25 * trebble0)\n        },\n        {\n          f: 4000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * trebble0 + 0.25 * mid0)\n        },\n        {\n          f: 8000,\n          type: 'peaking',\n          value: adjustEQValue(trebble0)\n        },\n        {\n          f: 16000,\n          type: 'highshelf',\n          value: adjustEQValue(trebble0)\n        }\n      ],\n      [\n        {\n          f: 32,\n          type: 'lowshelf',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 64,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 125,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 250,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 500,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * bass1 + 0.25 * mid1)\n        },\n        {\n          f: 1000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid1 + 0.25 * bass1)\n        },\n        {\n          f: 2000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid1 + 0.25 * trebble1)\n        },\n        {\n          f: 4000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * trebble1 + 0.25 * mid1)\n        },\n        {\n          f: 8000,\n          type: 'peaking',\n          value: adjustEQValue(trebble1)\n        },\n        {\n          f: 16000,\n          type: 'highshelf',\n          value: adjustEQValue(trebble1)\n        }\n      ]\n    ];\n    return EQ;\n  }\n  createEQEffect(deck, eq) {\n    const filter0 = eq[0].map(band => {\n      const filter = deck[0].backend.ac.createBiquadFilter();\n      filter.type = band.type;\n      filter.gain.value = band.value;\n      filter.Q.value = 1;\n      filter.frequency.value = band.f;\n      return filter;\n    });\n    const filter1 = eq[1].map(band => {\n      const filter = deck[1].backend.ac.createBiquadFilter();\n      filter.type = band.type;\n      filter.gain.value = band.value;\n      filter.Q.value = 1;\n      filter.frequency.value = band.f;\n      return filter;\n    });\n    return [filter0, filter1];\n  }\n  constructor() {\n    if (localStorage.getItem(\"effects\")) {\n      this.effects = JSON.parse(localStorage.getItem(\"effects\"))\n    } else {\n      localStorage.setItem(\"effects\", JSON.stringify(this.effects))\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicLoaderService.html":{"url":"injectables/MusicLoaderService.html","title":"injectable - MusicLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MusicLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/music-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deckLoader\n                            \n                            \n                                decksongs\n                            \n                            \n                                decksongs$\n                            \n                            \n                                music\n                            \n                            \n                                music$\n                            \n                            \n                                musicLoader\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSong\n                            \n                            \n                                deleteSong\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSong\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSong(song: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSong\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.musicLoader.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicLoader:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PlayerService } from './player.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicLoaderService {\n  musicLoader = new Subject();\n  music$ = this.musicLoader.asObservable();\n  music: File[] = [];\n  deckLoader = [new Subject(), new Subject()];\n  decksongs$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  decksongs: File[] = [null, null];\n  playerService: PlayerService;\n  constructor(playerService: PlayerService) {\n    this.playerService = playerService;\n  }\n  load(deck, song) {\n    this.decksongs[deck] = song;\n    this.deckLoader[deck].next(this.decksongs[deck]);\n    requestAnimationFrame(() => {\n      const reader = new FileReader();\n      reader.readAsDataURL(song);\n      reader.onload = () => {\n        this.playerService.load(deck, reader.result);\n      };\n      reader.onerror = error => {\n        console.log('Error: ', error);\n      };\n    });\n  }\n  addSong(song: File) {\n    this.music.push(song);\n    this.musicLoader.next(this.music);\n  }\n  deleteSong(song) {\n    this.music.splice(this.music.indexOf(song), 1);\n    this.musicLoader.next(this.music);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/player.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeEffects\n                            \n                            \n                                deck\n                            \n                            \n                                deck$\n                            \n                            \n                                deckLoader\n                            \n                            \n                                deckNum\n                            \n                            \n                                effectLoader\n                            \n                            \n                                effects\n                            \n                            \n                                effects$\n                            \n                            \n                                effectsNum\n                            \n                            \n                                eq\n                            \n                            \n                                eqEffect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateEffect\n                            \n                            \n                                applyEffects\n                            \n                            \n                                equalizer\n                            \n                            \n                                isPlaying\n                            \n                            \n                                load\n                            \n                            \n                                on\n                            \n                            \n                                playPause\n                            \n                            \n                                save\n                            \n                            \n                                saveEffects\n                            \n                            \n                                saveEQ\n                            \n                            \n                                setVolume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activateEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivateEffect(deck: , i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equalizer\n                            \n                            \n                        \n                    \n                \n                \n                    \nequalizer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPlaying(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            on\n                            \n                            \n                        \n                    \n                \n                \n                    \non(deck: , event: , callback: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(deck: , wavesurfer: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        wavesurfer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEffects(deck: , i: , effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEQ(eq: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eq\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetVolume(deck: , volume: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        volume\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeEffects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[], []]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[null, null, null, null, null, null], [null, null, null, null, null, null]]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.effectLoader[0].asObservable(), this.effectLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eq\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eq:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eqEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eqEffect:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport Tuna from 'tunajs';\nimport { EffectsService } from './effects.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  deckLoader = [new Subject(), new Subject()];\n  deck$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  effectLoader = [new Subject(), new Subject()];\n  effects$ = [this.effectLoader[0].asObservable(), this.effectLoader[1].asObservable()];\n  deck: any[] = [null, null];\n  eq = [null, null];\n  eqEffect: any;\n  effectsNum = 6;\n  deckNum = 2;\n  effects = [[null, null, null, null, null, null], [null, null, null, null, null, null]];\n  activeEffects = [[], []];\n  constructor(private effectServ: EffectsService) {\n    for (let i = 0; i  a.active);\n    this.activeEffects[deck] = this.effectServ.createEffects(this.deck[deck].backend.ac, effects);\n    this.applyEffects();\n    this.effectLoader[deck].next(this.effects[deck]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouletteControllerComponent.html":{"url":"components/RouletteControllerComponent.html","title":"component - RouletteControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouletteControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/roulette-controller/roulette-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                roulette-controller\n            \n\n            \n                styleUrls\n                roulette-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./roulette-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSlider\n                            \n                            \n                                folded\n                            \n                            \n                                rotation\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                rotate\n                            \n                            \n                                unfold\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/roulette-controller/roulette-controller.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:66\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unfold\n                            \n                            \n                        \n                    \n                \n                \n                    \nunfold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSlider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSlider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folded:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RouletteControllerComponent),\n  multi: true\n};\n@Component({\n  selector: 'roulette-controller',\n  templateUrl: './roulette-controller.component.html',\n  styleUrls: ['./roulette-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class RouletteControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  folded = true;\n  value = 0;\n  configSlider: any;\n  rotation: number;\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.configSlider = {\n      id: this.config.id + 'slider',\n      min: this.config.min || 0,\n      max: this.config.max || 100,\n      default: this.value,\n      thumb: 'roulette-slider-thumb',\n      track: 'roulette-slider-track',\n      vertical: true,\n      fill: true\n    };\n    this.rotate();\n  }\n\n  rotate() {\n    const percent = (this.value - this.configSlider.min) / (this.configSlider.max - this.configSlider.min);\n    this.rotation = 135 * 2 * (percent - 0.5);\n    this.onChangeCallback(this.value);\n  }\n  unfold() {\n    this.folded = !this.folded;\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.value = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  @HostListener('document:click', ['$event'])\n  private onDocumentClick(event: MouseEvent) {\n    const closest = (el, selector) => {\n      const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\n      while (el) {\n        if (matchesSelector.call(el, selector)) {\n          break;\n        }\n        el = el.parentElement;\n      }\n      return el;\n    };\n    const ele = event.target as Element;\n    if (!closest(ele, '#' + this.config.id + '_container')) {\n      this.folded = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouletteControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderControllerComponent.html":{"url":"components/SliderControllerComponent.html","title":"component - SliderControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/slider-controller/slider-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                slider-controller\n            \n\n            \n                styleUrls\n                slider-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./slider-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fillsize\n                            \n                            \n                                shell\n                            \n                            \n                                shellView\n                            \n                            \n                                slider\n                            \n                            \n                                zindex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbWidth\n                                \n                                \n                                    thumbHeight\n                                \n                                \n                                    thumbTop\n                                \n                                \n                                    thumbLeft\n                                \n                                \n                                    fillWidth\n                                \n                                \n                                    fillHeight\n                                \n                                \n                                    fillTop\n                                \n                                \n                                    fillLeft\n                                \n                                \n                                    trackWidth\n                                \n                                \n                                    trackHeight\n                                \n                                \n                                    trackTop\n                                \n                                \n                                    trackLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:216\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:221\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillsize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillsize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shell\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shell:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shellView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shellView:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zindex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zindex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thumbWidth\n                    \n                \n\n                \n                    \n                        getthumbWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbHeight\n                    \n                \n\n                \n                    \n                        getthumbHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbTop\n                    \n                \n\n                \n                    \n                        getthumbTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbLeft\n                    \n                \n\n                \n                    \n                        getthumbLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillWidth\n                    \n                \n\n                \n                    \n                        getfillWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:89\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillHeight\n                    \n                \n\n                \n                    \n                        getfillHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillTop\n                    \n                \n\n                \n                    \n                        getfillTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:123\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillLeft\n                    \n                \n\n                \n                    \n                        getfillLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:146\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackWidth\n                    \n                \n\n                \n                    \n                        gettrackWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackHeight\n                    \n                \n\n                \n                    \n                        gettrackHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackTop\n                    \n                \n\n                \n                    \n                        gettrackTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:185\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackLeft\n                    \n                \n\n                \n                    \n                        gettrackLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:196\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, ViewChild, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SliderControllerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'slider-controller',\n  templateUrl: './slider-controller.component.html',\n  styleUrls: ['./slider-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class SliderControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  @ViewChild('sliderShell')\n  shellView: ElementRef;\n  shell: HTMLElement;\n  slider: any;\n  fillsize = 16;\n  zindex = 0;\n\n  get thumbWidth(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    if (vertical) {\n      return smallval;\n    } else {\n      return smallval / 2.5;\n    }\n  }\n  get thumbHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      if (!vertical) {\n        return smallval;\n      } else {\n        return smallval / 2.5;\n      }\n    } else {\n      return null;\n    }\n  }\n  get thumbTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? loc : 0;\n    } else {\n      return null;\n    }\n  }\n  get thumbLeft(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? 0 : loc;\n    } else {\n      return null;\n    }\n  }\n\n  get fillWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get fillHeight(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return Math.max(0, vertical ? bigval - filloffset - fillsize - loc : fillsize);\n    } else {\n      return null;\n    }\n  }\n  get fillTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n\n      /* Fill */\n\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return vertical ? loc + thumbsize : filloffset;\n    } else {\n      return null;\n    }\n  }\n  get fillLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  get trackWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return bigval - thumbsize * 1.25;\n    } else {\n      return null;\n    }\n  }\n  get trackTop(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  ngOnInit() {\n    this.shell = this.shellView.nativeElement;\n    this.zindex = this.config.zindex || 0;\n  }\n\n  setValue() {\n    this.onChangeCallback(this.slider);\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.slider = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n\n    \n\n    \n        \n\t\n\t\n\t\n\t\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            tunajs : ^1.0.2\n        \n            wavesurfer.js : ^2.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTFG\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun npm test to execute the unit tests via jest.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nDocumentation\nTo access the compodoc generated documentation go to https://clm2609.gitlab.io/tfg\nWebApp\nTo see the latest stage state of the app go to http://virtualdj-stage.surge.sh/\nTo see the latest production state of the app go to http://virtualdj.surge.sh/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
