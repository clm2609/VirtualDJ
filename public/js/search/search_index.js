var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppAboutComponent.html",[0,0.136,1,0.378]],["body/components/AppAboutComponent.html",[0,0.248,1,0.688,2,0.305,3,0.231,4,0.763,5,0.231,6,1.454,7,3.421,8,3.342,9,1.454,10,1.401,11,0.763,12,1.254,13,0.927,14,0.968,15,4.242,16,0.968,17,4.242,18,0.916,19,0.56,20,3.342,21,0.305,22,0.051,23,0.231,24,0.231,25,0.305,26,1.485,27,4.242,28,4.242,29,4.903,30,4.903,31,4.242,32,4.903,33,4.903,34,4.903,35,4.903,36,4.242,37,1.119,38,0.763,39,0.488,40,0.763,41,0.469,42,0.763,43,0.469,44,0.763,45,0.469,46,0.763,47,0.469,48,0.56,49,0.763,50,0.469,51,0.763,52,0.469,53,0.763,54,0.469,55,0.763,56,0.469,57,0.763,58,0.469,59,0.763,60,0.763,61,0.469,62,0.763,63,0.763,64,0.763,65,0.763,66,0.039,67,0.039]],["title/components/AppComponent.html",[0,0.136,41,0.378]],["body/components/AppComponent.html",[0,0.256,1,0.511,2,0.333,3,0.252,4,0.831,5,0.252,11,0.831,12,1.267,13,0.922,14,1.021,16,1.021,21,0.333,22,0.051,23,0.252,24,0.252,25,0.333,37,1.153,38,0.831,39,0.515,40,0.831,41,0.709,42,0.831,43,0.511,44,0.831,45,0.511,46,0.831,47,0.511,48,0.61,49,0.831,50,0.511,51,0.831,52,0.511,53,0.831,54,0.511,55,0.831,56,0.511,57,0.831,58,0.511,59,0.831,60,0.831,61,0.511,62,0.831,63,0.831,64,0.831,65,0.831,66,0.041,67,0.041,68,3.642,69,2.613,70,4.476,71,4.476]],["title/components/AppDeckComponent.html",[0,0.136,43,0.378]],["body/components/AppDeckComponent.html",[0,0.208,1,0.306,2,0.199,3,0.151,4,0.498,5,0.219,6,1.748,9,1.087,10,1.124,11,0.498,12,1.175,13,0.875,14,0.724,16,0.724,18,0.429,19,0.845,21,0.398,22,0.052,23,0.151,24,0.151,25,0.199,26,0.97,37,0.936,38,0.498,39,0.472,40,0.498,41,0.306,42,0.498,43,0.576,44,0.498,45,0.306,46,0.498,47,0.306,48,0.365,49,0.498,50,0.306,51,0.498,52,0.306,53,0.498,54,0.306,55,0.498,56,0.306,57,0.498,58,0.306,59,0.498,60,0.498,61,0.306,62,0.498,63,0.498,64,0.498,65,0.498,66,0.029,67,0.029,72,4.113,73,2.183,74,3.738,75,3.014,76,1.238,77,3.173,78,3.173,79,0.429,80,0.724,81,2.739,82,2.655,83,2.323,84,3.878,85,2.083,86,0.724,87,2.559,88,3.309,89,4.103,90,2.786,91,3.738,92,1.852,93,2.085,94,3.173,95,0.724,96,1.038,97,0.724,98,1.823,99,2.183,100,3.173,101,2.183,102,0.936,103,1.038,104,2.183,105,2.183,106,2.183,107,0.954,108,0.954,109,2.183,110,2.183,111,1.124,112,2.183,113,2.183,114,1.274,115,1.274,116,1.482,117,2.559,118,1.108,119,1.76,120,1.76,121,1.41,122,1.76,123,1.482,124,2.154,125,1.274,126,1.76,127,2.183,128,3.309,129,2.183,130,2.183,131,1.238,132,2.183,133,1.76,134,2.183,135,1.274,136,2.183,137,3.738,138,2.183,139,3.738,140,2.183,141,1.76,142,2.183,143,2.183,144,2.183,145,2.183,146,2.183,147,2.183,148,2.183,149,2.183,150,2.183,151,2.183,152,2.183,153,3.173,154,1.76,155,2.183,156,2.183,157,3.014,158,2.183,159,2.183,160,1.76,161,1.76,162,2.183,163,2.183,164,2.183,165,2.559,166,3.173,167,3.173,168,3.173,169,3.173,170,3.173,171,5.1,172,1.823,173,1.601,174,2.786,175,3.309,176,2.559,177,2.154]],["title/components/AppLayoutComponent.html",[0,0.136,45,0.378]],["body/components/AppLayoutComponent.html",[0,0.253,1,0.498,2,0.324,3,0.245,4,0.809,5,0.245,6,1.509,10,1.066,11,0.809,12,1.263,13,0.932,14,1.005,16,1.005,18,0.941,19,0.594,21,0.324,22,0.051,23,0.245,24,0.245,25,0.324,37,1.143,38,0.809,39,0.507,40,0.809,41,0.498,42,0.809,43,0.498,44,0.809,45,0.703,46,0.809,47,0.498,48,0.594,49,0.809,50,0.498,51,0.809,52,0.498,53,0.809,54,0.498,55,0.809,56,0.498,57,0.809,58,0.498,59,0.809,60,0.809,61,0.498,62,0.809,63,0.809,64,0.809,65,0.809,66,0.04,67,0.04,178,3.551,179,3.546,180,4.403,181,4.403,182,4.403,183,3.546]],["title/modules/AppModule.html",[184,1.05,185,1.571]],["body/modules/AppModule.html",[1,0.697,2,0.263,3,0.199,5,0.199,7,2.325,13,0.483,21,0.501,22,0.052,23,0.199,24,0.266,25,0.263,41,0.751,43,0.697,45,0.697,47,0.697,48,0.645,50,0.697,52,0.697,54,0.697,56,0.697,58,0.697,61,0.697,66,0.035,67,0.035,72,2.325,178,2.325,184,1.503,185,3.274,186,1.683,187,2.325,188,3.499,189,3.499,190,2.249,191,2.325,192,2.325,193,2.325,194,2.325,195,2.521,196,3.107,197,2.325,198,1.957,199,2.883,200,3.852,201,2.325,202,1.957,203,3.107,204,2.883,205,2.883,206,5.153,207,2.883,208,2.883,209,2.325,210,2.883,211,2.883,212,2.325,213,3.852,214,3.107,215,1.463,216,2.883,217,2.325,218,2.325,219,2.883,220,2.325,221,2.883,222,2.325,223,2.883,224,2.325,225,2.883,226,2.883]],["title/components/AppMusicListComponent.html",[0,0.136,47,0.378]],["body/components/AppMusicListComponent.html",[0,0.218,1,0.34,2,0.221,3,0.167,4,0.553,5,0.341,6,1.722,9,1.172,10,0.728,11,0.553,12,1.196,13,0.889,14,0.78,16,0.78,18,0.476,19,0.828,21,0.362,22,0.052,23,0.167,24,0.167,25,0.221,37,0.982,38,0.553,39,0.522,40,0.553,41,0.34,42,0.553,43,0.34,44,0.553,45,0.34,46,0.553,47,0.604,48,0.929,49,0.553,50,0.34,51,0.553,52,0.34,53,0.553,54,0.34,55,0.553,56,0.34,57,0.553,58,0.34,59,0.553,60,0.553,61,0.34,62,0.553,63,0.553,64,0.553,65,0.553,66,0.031,67,0.039,75,3.195,76,0.945,79,0.476,80,0.78,82,2.749,85,2.551,86,0.78,92,1.995,93,2.151,95,0.904,96,1.035,97,0.904,102,1.035,103,0.982,111,1.027,114,1.414,115,1.414,117,2.757,118,1.23,121,1.076,122,1.953,125,1.414,131,1.334,154,1.953,160,1.953,161,1.953,165,2.757,222,4.053,227,2.422,228,3.418,229,3.418,230,3.418,231,4.303,232,4.709,233,4.303,234,3.418,235,3.418,236,4.303,237,3.418,238,3.418,239,2.422,240,3.418,241,2.422,242,2.422,243,2.422,244,2.422,245,3.195,246,2.422,247,4.303,248,2.422,249,3.418,250,2.422,251,2.422,252,2.422,253,2.422,254,3.418,255,2.422,256,3.418,257,2.422,258,3.418,259,3.418,260,3.418,261,3.418,262,2.422,263,2.422,264,2.422,265,2.422,266,3.418,267,2.757,268,2.321,269,2.757,270,2.757,271,2.757,272,3.418]],["title/modules/AppRoutingModule.html",[184,1.05,195,1.366]],["body/modules/AppRoutingModule.html",[2,0.371,3,0.281,5,0.281,21,0.479,22,0.051,23,0.281,24,0.33,25,0.371,66,0.044,67,0.044,131,1.586,184,1.586,195,2.427,203,3.856,214,3.856,215,2.063,273,4.064,274,4.064,275,5.08,276,4.781,277,3.278,278,4.064]],["title/components/AppSearchComponent.html",[0,0.136,50,0.378]],["body/components/AppSearchComponent.html",[0,0.229,1,0.383,2,0.25,3,0.189,4,0.623,5,0.327,6,1.624,9,1.273,10,1.269,11,0.623,12,1.219,13,0.904,14,0.848,16,0.848,18,0.537,19,0.759,21,0.339,22,0.051,23,0.189,24,0.189,25,0.25,26,1.214,37,1.034,38,0.623,39,0.545,40,0.623,41,0.383,42,0.623,43,0.383,44,0.623,45,0.383,46,0.623,47,0.383,48,0.457,49,0.623,50,0.636,51,0.623,52,0.383,53,0.623,54,0.383,55,0.623,56,0.383,57,0.623,58,0.383,59,0.623,60,0.623,61,0.383,62,0.623,63,0.623,64,0.623,65,0.623,66,0.052,67,0.034,79,0.537,80,0.848,82,2.854,86,0.848,92,2.169,93,2.223,95,0.963,96,1.034,97,0.963,102,0.848,103,0.848,111,0.821,114,1.594,115,1.594,125,1.594,172,2.388,173,2.171,218,3.822,269,2.996,279,2.731,280,3.715,281,3.715,282,3.715,283,2.996,284,3.715,285,3.715,286,2.731,287,2.731,288,2.996,289,3.405,290,2.731,291,2.731,292,3.715]],["title/components/AppSettingsComponent.html",[0,0.136,52,0.378]],["body/components/AppSettingsComponent.html",[0,0.224,1,0.362,2,0.236,3,0.178,4,0.935,5,0.178,6,1.721,9,1.224,10,1.231,11,0.588,12,1.208,13,0.897,14,0.815,16,0.815,18,0.507,19,0.825,21,0.374,22,0.052,23,0.178,24,0.178,25,0.236,26,1.146,37,1.009,38,0.588,39,0.509,40,0.588,41,0.362,42,0.588,43,0.362,44,0.588,45,0.362,46,0.588,47,0.362,48,0.432,49,0.588,50,0.362,51,0.588,52,0.621,53,0.588,54,0.362,55,0.588,56,0.362,57,0.588,58,0.362,59,0.588,60,0.588,61,0.362,62,0.588,63,0.588,64,0.588,65,0.588,66,0.033,67,0.033,76,1.393,79,0.507,80,0.815,81,2.931,83,1.965,86,0.815,95,0.815,96,1.009,97,0.815,98,1.587,102,0.588,103,0.588,107,1.231,108,1.231,116,1.751,121,1.146,133,2.08,177,2.425,224,4.049,293,2.579,294,2.88,295,3.571,296,3.571,297,4.422,298,3.566,299,4.804,300,4.422,301,2.88,302,1.751,303,2.245,304,4.097,305,2.579,306,2.425,307,3.571,308,4.804,309,2.579,310,2.579,311,2.245,312,2.579,313,2.579,314,2.579,315,2.579,316,2.08,317,1.751,318,2.579,319,2.579,320,2.579,321,4.097,322,4.097,323,4.097,324,4.097,325,4.097,326,4.097,327,2.579,328,2.579,329,3.571,330,2.579,331,2.579,332,2.579,333,2.579,334,2.579,335,2.579,336,3.571,337,3.571,338,3.571,339,3.571,340,3.571,341,3.571,342,3.571]],["title/components/AppTabsComponent.html",[0,0.136,54,0.378]],["body/components/AppTabsComponent.html",[0,0.227,1,0.375,2,0.244,3,0.185,4,0.61,5,0.288,6,1.781,11,0.61,12,1.215,13,0.902,14,0.835,16,0.835,18,0.526,19,0.86,21,0.335,22,0.052,23,0.185,24,0.185,25,0.244,37,1.025,38,0.61,39,0.559,40,0.61,41,0.375,42,0.61,43,0.375,44,0.61,45,0.375,46,0.61,47,0.375,48,0.788,49,0.61,50,0.375,51,0.61,52,0.375,53,0.61,54,0.63,55,0.61,56,0.375,57,0.61,58,0.375,59,0.61,60,0.61,61,0.375,62,0.61,63,0.61,64,0.61,65,0.61,66,0.033,67,0.033,79,0.526,80,0.835,82,2.835,85,1.859,86,0.835,92,2.137,93,2.21,95,1.025,96,1.025,97,1.025,102,0.953,103,0.953,107,1.101,108,1.101,111,0.804,114,1.561,115,1.561,123,3.298,124,3.049,125,1.561,135,1.561,157,2.156,220,4.191,245,2.953,270,3.622,271,2.953,283,2.953,288,2.953,289,3.367,294,2.953,343,2.674,344,3.662,345,3.662,346,3.662,347,3.662,348,3.662,349,3.367,350,4.176,351,3.662,352,2.674,353,2.674,354,2.156,355,2.835,356,2.674,357,2.674,358,3.662,359,2.674,360,2.674,361,3.662,362,2.674,363,2.674,364,2.674,365,2.674,366,3.662,367,3.662,368,2.674,369,4.176,370,2.674,371,2.674,372,2.674,373,2.674,374,3.662]],["title/components/AppVolumeComponent.html",[0,0.136,56,0.378]],["body/components/AppVolumeComponent.html",[0,0.22,1,0.347,2,0.226,3,0.171,4,0.565,5,0.171,6,1.803,9,1.19,10,1.205,11,0.565,12,1.201,13,0.892,14,0.792,16,0.792,18,0.487,19,0.874,21,0.366,22,0.052,23,0.171,24,0.171,25,0.226,37,0.991,38,0.565,39,0.5,40,0.565,41,0.347,42,0.565,43,0.347,44,0.565,45,0.347,46,0.565,47,0.347,48,0.414,49,0.565,50,0.347,51,0.565,52,0.347,53,0.565,54,0.347,55,0.565,56,0.61,57,0.565,58,0.347,59,0.565,60,0.565,61,0.347,62,0.565,63,0.565,64,0.565,65,0.565,66,0.032,67,0.032,76,1.564,79,0.487,80,0.792,83,2.164,86,0.792,95,0.792,96,1.168,97,0.792,98,2.401,102,0.792,103,0.792,107,1.518,108,1.518,111,1.61,116,1.681,121,1.1,172,1.542,209,4.243,302,1.681,303,2.206,306,2.356,316,1.996,317,1.681,375,2.475,376,2.356,377,3.471,378,3.471,379,3.504,380,3.504,381,3.504,382,3.504,383,3.504,384,3.504,385,4.344,386,4.344,387,4.344,388,3.471,389,4.008,390,2.475,391,3.471,392,2.475,393,2.475,394,2.475,395,2.475,396,2.475,397,2.475,398,2.475,399,2.475,400,3.824,401,2.475,402,2.475,403,2.475,404,3.471,405,4.008]],["title/injectables/EffectsService.html",[303,1.366,406,1.05]],["body/injectables/EffectsService.html",[2,0.143,3,0.108,5,0.108,18,0.599,19,0.7,21,0.225,22,0.052,23,0.108,24,0.108,25,0.143,39,0.571,66,0.022,67,0.022,69,0.911,76,0.609,79,0.307,80,0.561,81,2.664,86,0.561,95,0.789,96,1.224,97,0.789,102,1.096,103,0.356,107,0.469,108,1.585,111,1.553,123,3.214,124,3.214,131,1.74,172,2.359,173,0.96,174,1.67,175,3.494,176,2.456,303,1.249,376,1.06,379,2.456,380,3.033,381,3.372,382,3.372,383,3.033,384,3.033,406,1.188,407,1.561,408,2.46,409,2.46,410,2.46,411,2.46,412,3.456,413,1.561,414,2.46,415,1.561,416,2.46,417,1.561,418,1.561,419,2.46,420,1.561,421,2.46,422,3.033,423,1.561,424,1.561,425,4.733,426,2.46,427,3.995,428,2.46,429,3.817,430,3.214,431,3.456,432,3.456,433,3.456,434,3.456,435,3.995,436,3.995,437,3.995,438,3.995,439,2.46,440,2.46,441,2.46,442,3.995,443,4.333,444,3.456,445,3.995,446,3.456,447,2.46,448,1.984,449,2.46,450,2.46,451,3.456,452,2.46,453,2.46,454,2.46,455,2.46,456,2.46,457,2.46,458,2.46,459,2.46,460,2.46,461,2.46,462,2.46,463,2.46,464,2.46,465,2.46,466,2.46,467,2.46,468,2.46,469,3.456,470,2.46,471,2.46,472,1.561,473,1.984,474,1.06,475,1.06,476,1.561,477,1.561,478,1.561,479,1.561,480,1.561,481,1.561,482,1.561,483,0.911,484,1.561,485,2.46,486,1.561,487,1.561,488,1.561,489,1.561,490,5.111,491,2.46,492,2.46,493,3.456,494,2.46,495,4.962,496,2.46,497,2.46,498,4.333,499,4.333,500,2.46,501,2.46,502,2.46,503,2.46,504,2.46,505,2.46,506,2.46,507,3.456,508,2.46,509,2.46,510,1.561,511,1.561,512,2.46,513,2.46,514,2.46,515,2.46,516,2.46,517,2.46,518,2.46,519,2.46,520,1.561,521,1.561]],["title/injectables/MusicLoaderService.html",[93,1.196,406,1.05]],["body/injectables/MusicLoaderService.html",[2,0.253,3,0.191,5,0.361,18,0.544,19,0.884,21,0.388,22,0.052,23,0.191,24,0.191,25,0.253,39,0.524,48,0.855,66,0.034,67,0.034,69,1.616,76,1.08,79,0.544,80,0.856,83,2.379,85,2.492,86,0.856,93,1.666,95,1.04,96,1.145,97,1.04,102,0.97,103,0.97,107,1.475,108,1.475,118,1.406,126,2.233,131,1.08,141,2.233,172,1.23,268,2.546,311,2.313,406,1.659,475,1.88,483,2.93,522,5.32,523,2.769,524,3.674,525,5.106,526,4.556,527,3.749,528,3.749,529,3.749,530,3.749,531,3.749,532,2.769,533,3.749,534,2.769,535,3.024,536,2.769,537,4.048,538,2.769,539,2.769,540,3.024,541,3.024,542,2.769,543,2.769,544,3.749,545,2.769,546,2.769,547,2.769,548,2.769,549,2.769,550,2.769,551,2.769,552,2.769,553,2.769,554,2.769,555,2.769,556,2.769,557,3.749,558,2.769,559,2.769,560,3.749,561,2.769]],["title/injectables/PlayerService.html",[83,1.196,406,1.05]],["body/injectables/PlayerService.html",[2,0.208,3,0.157,5,0.157,18,0.447,19,0.911,21,0.382,22,0.052,23,0.157,24,0.157,25,0.208,39,0.578,66,0.03,67,0.03,69,1.328,76,2.065,79,0.447,80,0.746,81,2.97,83,1.453,85,1.66,86,0.746,87,3.086,88,2.637,95,1.147,96,1.173,97,1.147,98,1.859,102,1.161,103,1.13,107,1.511,108,1.511,111,0.684,118,1.155,119,2.637,173,1.276,177,2.22,268,2.22,298,3.374,302,1.545,303,2.124,306,2.22,311,2.811,317,1.545,355,2.22,376,2.22,406,1.493,422,3.573,473,1.835,474,1.545,475,1.545,483,2.839,524,3.374,535,1.835,537,3.994,540,2.637,541,2.637,562,2.276,563,4.184,564,4.184,565,4.184,566,4.184,567,3.27,568,3.827,569,3.27,570,3.27,571,3.27,572,3.27,573,3.27,574,3.27,575,2.276,576,2.276,577,2.276,578,2.276,579,2.276,580,2.276,581,2.276,582,2.276,583,3.27,584,2.276,585,2.276,586,2.276,587,2.276,588,2.276,589,2.276,590,2.276,591,2.276,592,2.276,593,2.276,594,2.276,595,2.276,596,2.276,597,2.276,598,2.276,599,2.276,600,2.276,601,3.27,602,3.27,603,2.276,604,2.276,605,2.276,606,2.276,607,2.276,608,2.276,609,2.276,610,2.276,611,2.276,612,2.276]],["title/components/RouletteControllerComponent.html",[0,0.136,58,0.378]],["body/components/RouletteControllerComponent.html",[0,0.208,1,0.307,2,0.2,3,0.151,4,0.5,5,0.151,9,1.09,10,1.126,11,0.5,12,1.193,13,0.821,14,0.726,16,0.726,18,0.736,19,0.854,21,0.291,22,0.052,23,0.151,24,0.22,25,0.2,26,0.973,37,0.938,38,0.5,39,0.502,40,0.5,41,0.307,42,0.5,43,0.307,44,0.5,45,0.307,46,0.5,47,0.307,48,0.367,49,0.5,50,0.307,51,0.5,52,0.307,53,0.5,54,0.307,55,0.5,56,0.307,57,0.5,58,0.613,59,1.119,60,0.5,61,0.307,62,0.938,63,0.854,64,0.5,65,0.5,66,0.029,67,0.029,79,0.43,80,0.726,84,3.881,86,0.726,90,2.79,95,0.854,96,1.072,97,0.854,98,1.939,102,1.039,103,1.072,107,1.126,108,1.498,111,1.126,121,1.664,128,2.565,131,1.776,135,2.658,173,0.854,190,2.186,215,1.112,217,4.154,311,1.112,349,3.02,354,1.766,355,2.159,400,1.766,429,1.766,430,2.542,613,5.152,614,1.766,615,3.02,616,3.02,617,2.565,618,2.565,619,4.11,620,4.11,621,2.565,622,2.565,623,4.11,624,2.565,625,3.18,626,1.766,627,2.19,628,2.19,629,3.18,630,2.19,631,2.565,632,2.19,633,3.314,634,2.565,635,2.19,636,2.19,637,2.19,638,2.565,639,2.19,640,1.766,641,1.766,642,1.766,643,2.19,644,2.565,645,2.565,646,2.565,647,3.02,648,1.766,649,1.766,650,1.766,651,1.766,652,1.766,653,2.19,654,3.18,655,2.19,656,1.766,657,2.19,658,1.766,659,3.745,660,3.18,661,3.18,662,1.766,663,1.766,664,3.18,665,3.18,666,2.19,667,2.19,668,2.19,669,2.19,670,3.745,671,2.565,672,1.766,673,1.766,674,1.766,675,2.19,676,2.19,677,2.19,678,4.365,679,2.19,680,2.19,681,2.19,682,2.19,683,2.19,684,2.19,685,2.19,686,2.19,687,2.19,688,2.19,689,2.19,690,2.19]],["title/components/SliderControllerComponent.html",[0,0.136,61,0.378]],["body/components/SliderControllerComponent.html",[0,0.155,1,0.178,2,0.116,3,0.088,4,0.29,5,0.088,9,0.715,10,0.797,11,0.29,12,1.039,13,0.696,14,0.476,16,0.476,19,0.836,21,0.191,22,0.052,23,0.088,24,0.144,25,0.116,26,0.565,37,0.7,38,0.29,39,0.39,40,0.29,41,0.178,42,0.29,43,0.178,44,0.29,45,0.178,46,0.29,47,0.178,48,0.213,49,0.29,50,0.178,51,0.29,52,0.178,53,0.29,54,0.178,55,0.29,56,0.178,57,0.29,58,0.178,59,0.29,60,0.29,61,0.476,62,1,63,0.605,64,0.29,65,0.29,66,0.019,67,0.019,79,0.25,80,0.476,86,0.476,90,2.083,95,0.605,96,0.949,97,0.605,98,1.364,102,1.18,103,0.831,107,0.627,108,1.094,111,1.156,121,0.927,131,2.164,135,0.742,172,1.618,173,1.71,190,1.548,212,4.053,215,0.645,311,2.272,430,1.8,448,2.475,614,1.025,615,2.139,616,2.139,617,1.682,618,1.682,621,1.682,622,1.682,624,1.682,626,1.025,631,1.682,633,2.475,634,1.682,638,1.682,640,1.025,641,1.025,642,1.025,644,1.682,645,1.682,646,1.682,647,2.139,648,1.025,649,1.025,650,1.025,651,1.025,652,1.025,656,3.609,658,2.936,662,4.364,663,1.025,671,1.682,672,1.025,673,1.025,674,1.025,691,5.026,692,4.279,693,4.69,694,3.069,695,3.069,696,3.069,697,2.085,698,2.652,699,2.652,700,2.652,701,2.652,702,2.652,703,2.652,704,2.652,705,2.652,706,2.652,707,2.652,708,2.652,709,2.652,710,1.271,711,1.271,712,1.271,713,1.271,714,2.652,715,3.069,716,1.271,717,2.085,718,1.271,719,1.271,720,1.271,721,1.271,722,1.271,723,1.271,724,1.271,725,1.271,726,1.271,727,1.271,728,1.271,729,1.271,730,1.271,731,1.271,732,1.271,733,1.271,734,1.271,735,1.271,736,1.271,737,1.271,738,1.271,739,1.271,740,1.271,741,1.271,742,1.271,743,1.271,744,1.271,745,4.475,746,5.026,747,4.627,748,4.556,749,4.556,750,2.085,751,4.475,752,3.846,753,4.845,754,4.69,755,4.888,756,4.015,757,4.015,758,4.845,759,4.475,760,3.069,761,4.015,762,1.271,763,1.271,764,1.271,765,1.271,766,1.271,767,1.271]],["title/dependencies.html",[186,1.89,768,2.245]],["body/dependencies.html",[22,0.052,23,0.276,66,0.043,67,0.043,118,2.031,120,3.226,186,2.335,201,3.82,202,3.216,215,2.031,277,3.226,474,2.716,769,4,770,5.529,771,4,772,4,773,4,774,4,775,4,776,4,777,4,778,4,779,4,780,4,781,4,782,4]],["title/index.html",[79,0.441,267,1.811,783,2.245]],["body/index.html",[0,0.242,3,0.244,5,0.244,13,0.8,22,0.04,39,0.406,66,0.04,67,0.04,198,2.395,301,2.845,483,2.059,784,3.528,785,4.389,786,5.142,787,4.778,788,4.778,789,3.528,790,3.528,791,3.528,792,4.389,793,5.316,794,5.242,795,3.528,796,3.528,797,3.528,798,3.528,799,3.528,800,3.528,801,3.528,802,3.528,803,4.778,804,3.528,805,5.142,806,3.528,807,3.528,808,3.528,809,3.528,810,3.528,811,3.528,812,4.389,813,4.389,814,5.142,815,3.528,816,4.389,817,4.389,818,3.528,819,4.999,820,3.528,821,3.528,822,3.528,823,4.778,824,3.528,825,4.999,826,3.528,827,3.528,828,4.389,829,3.528,830,3.528,831,3.528,832,3.528,833,4.389,834,4.389,835,3.528,836,4.389,837,3.528,838,3.528,839,3.528]],["title/modules.html",[184,1.435]],["body/modules.html",[22,0.045,66,0.045,67,0.045,184,1.683,185,2.518,195,2.19,202,2.929,840,4.314,841,4.314,842,4.95,843,4.314,844,4.314]],["title/overview.html",[845,2.966]],["body/overview.html",[0,0.183,1,0.677,22,0.051,24,0.249,41,0.75,43,0.677,45,0.677,47,0.677,50,0.677,52,0.677,54,0.677,56,0.677,58,0.677,61,0.677,66,0.041,67,0.041,173,1.408,174,2.451,184,1.737,185,3.314,186,2.107,187,2.911,188,2.911,189,2.911,190,2.107,191,2.911,192,2.911,193,2.911,194,2.911,195,2.45,196,3.59,197,2.911,198,2.451,406,1.408,845,2.911,846,3.609]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":111,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["0.01",{"_index":454,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.065",{"_index":432,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.1",{"_index":450,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.2",{"_index":463,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.25",{"_index":499,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.3",{"_index":461,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.5",{"_index":668,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["0.8.26",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":172,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/SliderControllerComponent.html":{}}}],["1.0.2",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":453,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1.25",{"_index":763,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["10",{"_index":158,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["100",{"_index":400,"title":{},"body":{"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["1000",{"_index":500,"title":{},"body":{"injectables/EffectsService.html":{}}}],["11",{"_index":846,"title":{},"body":{"overview.html":{}}}],["125",{"_index":496,"title":{},"body":{"injectables/EffectsService.html":{}}}],["135",{"_index":667,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["1500",{"_index":470,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16",{"_index":448,"title":{},"body":{"injectables/EffectsService.html":{},"components/SliderControllerComponent.html":{}}}],["16000",{"_index":505,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16384",{"_index":438,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16x",{"_index":169,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["180",{"_index":466,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2",{"_index":173,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["2.1.1",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":750,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["2.5.4",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":501,"title":{},"body":{"injectables/EffectsService.html":{}}}],["250",{"_index":497,"title":{},"body":{"injectables/EffectsService.html":{}}}],["256",{"_index":437,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2x",{"_index":166,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["3",{"_index":174,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{},"overview.html":{}}}],["3.0",{"_index":35,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["3.5",{"_index":434,"title":{},"body":{"injectables/EffectsService.html":{}}}],["30",{"_index":465,"title":{},"body":{"injectables/EffectsService.html":{}}}],["32",{"_index":491,"title":{},"body":{"injectables/EffectsService.html":{}}}],["32x",{"_index":170,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["360",{"_index":159,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["4",{"_index":175,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["4000",{"_index":502,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4096",{"_index":436,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4x",{"_index":167,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["5",{"_index":176,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["50",{"_index":129,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["500",{"_index":469,"title":{},"body":{"injectables/EffectsService.html":{}}}],["6",{"_index":177,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["6.0.0",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":790,"title":{},"body":{"index.html":{}}}],["64",{"_index":494,"title":{},"body":{"injectables/EffectsService.html":{}}}],["700",{"_index":468,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8",{"_index":455,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8000",{"_index":503,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8x",{"_index":168,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_",{"_index":652,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["_contain",{"_index":690,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["_wave",{"_index":146,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_wave').offsetheight",{"_index":140,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["a.act",{"_index":608,"title":{},"body":{"injectables/PlayerService.html":{}}}],["a.id",{"_index":325,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["about'},{'nam",{"_index":40,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["about.compon",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["about.component.css",{"_index":15,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.t",{"_index":8,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.ts:8",{"_index":20,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about/app",{"_index":7,"title":{},"body":{"components/AppAboutComponent.html":{},"modules/AppModule.html":{}}}],["ac",{"_index":418,"title":{},"body":{"injectables/EffectsService.html":{}}}],["access",{"_index":829,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":697,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["activ",{"_index":123,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["activateeffect",{"_index":567,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activateeffect(deck",{"_index":575,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeeffect",{"_index":563,"title":{},"body":{"injectables/PlayerService.html":{}}}],["actual_compon",{"_index":65,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["addeffect",{"_index":408,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addeffect(effect",{"_index":414,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addsong",{"_index":527,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["addsong(song",{"_index":531,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["adjusteqvalu",{"_index":489,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(0.75",{"_index":498,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(bass0",{"_index":493,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(bass1",{"_index":507,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(trebble0",{"_index":504,"title":{},"body":{"injectables/EffectsService.html":{}}}],["adjusteqvalue(trebble1",{"_index":508,"title":{},"body":{"injectables/EffectsService.html":{}}}],["advanc",{"_index":488,"title":{},"body":{"injectables/EffectsService.html":{}}}],["afterviewinit",{"_index":74,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["angular",{"_index":787,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["appaboutcompon",{"_index":1,"title":{"components/AppAboutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appcompon",{"_index":41,"title":{"components/AppComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appdeckcompon",{"_index":43,"title":{"components/AppDeckComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["applayoutcompon",{"_index":45,"title":{"components/AppLayoutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["applyeffect",{"_index":87,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["applyeffect(i",{"_index":100,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["appmodul",{"_index":185,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmusiclistcompon",{"_index":47,"title":{"components/AppMusicListComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["approutingmodul",{"_index":195,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsearchcompon",{"_index":50,"title":{"components/AppSearchComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appsettingscompon",{"_index":52,"title":{"components/AppSettingsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["apptabscompon",{"_index":54,"title":{"components/AppTabsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appvolumecompon",{"_index":56,"title":{"components/AppVolumeComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["argument",{"_index":354,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["artifact",{"_index":806,"title":{},"body":{"index.html":{}}}],["artist",{"_index":266,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["attribut",{"_index":28,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["automat",{"_index":799,"title":{},"body":{"index.html":{}}}],["avail",{"_index":844,"title":{},"body":{"modules.html":{}}}],["availableeffect",{"_index":297,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["availableeffect.nam",{"_index":342,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["b.id).id",{"_index":326,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["band.f",{"_index":518,"title":{},"body":{"injectables/EffectsService.html":{}}}],["band.typ",{"_index":513,"title":{},"body":{"injectables/EffectsService.html":{}}}],["band.valu",{"_index":515,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basemodulationfrequ",{"_index":467,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basic",{"_index":425,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bass0",{"_index":379,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["bass1",{"_index":380,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["bigval",{"_index":754,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["bit",{"_index":447,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bitcrush",{"_index":446,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bootstrap",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["break",{"_index":685,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["brows",{"_index":842,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["buffers",{"_index":435,"title":{},"body":{"injectables/EffectsService.html":{}}}],["build",{"_index":805,"title":{},"body":{"index.html":{}}}],["bypass",{"_index":471,"title":{},"body":{"injectables/EffectsService.html":{}}}],["c.map(a",{"_index":323,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["callback",{"_index":583,"title":{},"body":{"injectables/PlayerService.html":{}}}],["cc",{"_index":34,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["chang",{"_index":301,"title":{},"body":{"components/AppSettingsComponent.html":{},"index.html":{}}}],["change(i",{"_index":307,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["changevolum",{"_index":388,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["changevolume(deck",{"_index":391,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["check",{"_index":826,"title":{},"body":{"index.html":{}}}],["choos",{"_index":292,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["class",{"_index":25,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["cli",{"_index":788,"title":{},"body":{"index.html":{}}}],["closest",{"_index":677,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["closest(el",{"_index":689,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["cluster_appmodul",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":801,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":830,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":38,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["components/app",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["components/roulett",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["components/slid",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["comput",{"_index":272,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["config",{"_index":430,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["configslid",{"_index":619,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["console.log('error",{"_index":558,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["const",{"_index":131,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{}}}],["constructor(effectserv",{"_index":302,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(musicservic",{"_index":92,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["constructor(playerservic",{"_index":529,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["constructor(priv",{"_index":317,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["contain",{"_index":144,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["content",{"_index":27,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["control",{"_index":63,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller'},{'nam",{"_index":60,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.compon",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["controller.component.css",{"_index":617,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.html",{"_index":618,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.t",{"_index":614,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:104",{"_index":731,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:123",{"_index":733,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:146",{"_index":735,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:158",{"_index":737,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:173",{"_index":739,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:185",{"_index":741,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:196",{"_index":743,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:20",{"_index":627,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:21",{"_index":641,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:216",{"_index":712,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:22",{"_index":643,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:221",{"_index":713,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:226",{"_index":710,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:229",{"_index":711,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":640,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:24",{"_index":642,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:25",{"_index":718,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":626,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:27",{"_index":719,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:29",{"_index":721,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:39",{"_index":723,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:44",{"_index":636,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:49",{"_index":637,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:53",{"_index":725,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:54",{"_index":639,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:59",{"_index":632,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:62",{"_index":635,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:66",{"_index":630,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:70",{"_index":727,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:89",{"_index":729,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller/roulett",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{}}}],["controller/slid",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/SliderControllerComponent.html":{}}}],["controlvalueaccessor",{"_index":615,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["core",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["createeffect",{"_index":409,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeffects(ac",{"_index":416,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeq",{"_index":410,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeq(bass0",{"_index":419,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeqeffect",{"_index":411,"title":{},"body":{"injectables/EffectsService.html":{}}}],["createeqeffect(deck",{"_index":421,"title":{},"body":{"injectables/EffectsService.html":{}}}],["cue",{"_index":171,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["custom_text_input_control_value_accessor",{"_index":616,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["cutoff",{"_index":431,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dark",{"_index":340,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["decent",{"_index":456,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck",{"_index":76,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["deck'},{'nam",{"_index":44,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deck.compon",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["deck.component.css",{"_index":77,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.html",{"_index":78,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.t",{"_index":73,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:14",{"_index":99,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:16",{"_index":109,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:17",{"_index":110,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:18",{"_index":112,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:20",{"_index":113,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:21",{"_index":94,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:56",{"_index":106,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:61",{"_index":105,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:68",{"_index":104,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:72",{"_index":101,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck/app",{"_index":72,"title":{},"body":{"components/AppDeckComponent.html":{},"modules/AppModule.html":{}}}],["deck[0].backend.ac.createbiquadfilt",{"_index":511,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck[1].backend.ac.createbiquadfilt",{"_index":521,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck_",{"_index":145,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deckload",{"_index":524,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["decknum",{"_index":564,"title":{},"body":{"injectables/PlayerService.html":{}}}],["decknumb",{"_index":91,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["decksong",{"_index":525,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["declar",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":716,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["default",{"_index":107,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["defin",{"_index":19,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deletesong",{"_index":528,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["deletesong(song",{"_index":533,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["depend",{"_index":186,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":460,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dev",{"_index":796,"title":{},"body":{"index.html":{}}}],["develop",{"_index":791,"title":{},"body":{"index.html":{}}}],["direct",{"_index":64,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":804,"title":{},"body":{"index.html":{}}}],["directori",{"_index":809,"title":{},"body":{"index.html":{}}}],["dist",{"_index":808,"title":{},"body":{"index.html":{}}}],["document",{"_index":828,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('deck_",{"_index":138,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["document:click",{"_index":625,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["document:click(ev",{"_index":628,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["drag",{"_index":270,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["drop",{"_index":374,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drope",{"_index":347,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["droped(ev",{"_index":358,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["dynam",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":820,"title":{},"body":{"index.html":{}}}],["eff",{"_index":132,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["eff.filter(_",{"_index":134,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["effect",{"_index":81,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["effect.id",{"_index":477,"title":{},"body":{"injectables/EffectsService.html":{}}}],["effectload",{"_index":565,"title":{},"body":{"injectables/PlayerService.html":{}}}],["effects.servic",{"_index":607,"title":{},"body":{"injectables/PlayerService.html":{}}}],["effectserv",{"_index":306,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["effectsnum",{"_index":298,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["effectsservic",{"_index":303,"title":{"injectables/EffectsService.html":{}},"body":{"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["el",{"_index":678,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.match",{"_index":680,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.mozmatchesselector",{"_index":682,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.msmatchesselector",{"_index":683,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.parentel",{"_index":686,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.webkitmatchesselector",{"_index":681,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["element",{"_index":688,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["elementref",{"_index":715,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["end",{"_index":819,"title":{},"body":{"index.html":{}}}],["english",{"_index":338,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["eq",{"_index":422,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["eq[0].map(band",{"_index":510,"title":{},"body":{"injectables/EffectsService.html":{}}}],["eq[1].map(band",{"_index":520,"title":{},"body":{"injectables/EffectsService.html":{}}}],["eqeffect",{"_index":566,"title":{},"body":{"injectables/PlayerService.html":{}}}],["equal",{"_index":568,"title":{},"body":{"injectables/PlayerService.html":{}}}],["error",{"_index":557,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["event",{"_index":355,"title":{},"body":{"components/AppTabsComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{}}}],["event.preventdefault",{"_index":366,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.stoppropag",{"_index":367,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.target",{"_index":687,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["execut",{"_index":816,"title":{},"body":{"index.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["f",{"_index":490,"title":{},"body":{"injectables/EffectsService.html":{}}}],["fals",{"_index":124,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["feedback",{"_index":462,"title":{},"body":{"injectables/EffectsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["filechangeev",{"_index":282,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filechangeevent(fileinput",{"_index":285,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["fileinput",{"_index":287,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filelist",{"_index":289,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["fileread",{"_index":551,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["fill",{"_index":663,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fillheight",{"_index":703,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillleft",{"_index":705,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filloffset",{"_index":761,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillsiz",{"_index":692,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filltop",{"_index":704,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillwidth",{"_index":702,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filter",{"_index":427,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.frequency.valu",{"_index":517,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.gain.valu",{"_index":514,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.q.valu",{"_index":516,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter.typ",{"_index":512,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter0",{"_index":509,"title":{},"body":{"injectables/EffectsService.html":{}}}],["filter1",{"_index":519,"title":{},"body":{"injectables/EffectsService.html":{}}}],["finish",{"_index":152,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["flag",{"_index":811,"title":{},"body":{"index.html":{}}}],["fn",{"_index":633,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fold",{"_index":620,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["formsmodul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["forwardref",{"_index":644,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["further",{"_index":822,"title":{},"body":{"index.html":{}}}],["gener",{"_index":786,"title":{},"body":{"index.html":{}}}],["get",{"_index":783,"title":{"index.html":{}},"body":{}}],["geteffect",{"_index":412,"title":{},"body":{"injectables/EffectsService.html":{}}}],["getfillheight",{"_index":730,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillleft",{"_index":734,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfilltop",{"_index":732,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillwidth",{"_index":728,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbheight",{"_index":722,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbleft",{"_index":726,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbtop",{"_index":724,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbwidth",{"_index":720,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackheight",{"_index":738,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackleft",{"_index":742,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettracktop",{"_index":740,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackwidth",{"_index":736,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["go",{"_index":825,"title":{},"body":{"index.html":{}}}],["graph",{"_index":843,"title":{},"body":{"modules.html":{}}}],["height",{"_index":137,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["help",{"_index":823,"title":{},"body":{"index.html":{}}}],["here",{"_index":271,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["higher",{"_index":458,"title":{},"body":{"injectables/EffectsService.html":{}}}],["highshelf",{"_index":506,"title":{},"body":{"injectables/EffectsService.html":{}}}],["hostlisten",{"_index":349,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["hostlistener('document:click",{"_index":675,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["hostlistener('window:dragleav",{"_index":372,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["hostlistener('window:dragov",{"_index":370,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["htmlelement",{"_index":714,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["http://localhost:4200",{"_index":798,"title":{},"body":{"index.html":{}}}],["http://virtualdj",{"_index":837,"title":{},"body":{"index.html":{}}}],["http://virtualdj.surge.sh",{"_index":839,"title":{},"body":{"index.html":{}}}],["https://clm2609.gitlab.io/tfg",{"_index":831,"title":{},"body":{"index.html":{}}}],["i+1",{"_index":341,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["icon",{"_index":29,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["id",{"_index":429,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{}}}],["ignor",{"_index":646,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["includes(lowsearch",{"_index":264,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["inject",{"_index":406,"title":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"overview.html":{}}}],["input",{"_index":90,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["isplay",{"_index":569,"title":{},"body":{"injectables/PlayerService.html":{}}}],["isplaying(deck",{"_index":579,"title":{},"body":{"injectables/PlayerService.html":{}}}],["j",{"_index":308,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["jest",{"_index":818,"title":{},"body":{"index.html":{}}}],["js",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":299,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(effect",{"_index":329,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.availableeffects.find(a",{"_index":333,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.effect",{"_index":476,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.parse(json.stringify(this.playerserv.effect",{"_index":318,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["languag",{"_index":336,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["latest",{"_index":834,"title":{},"body":{"index.html":{}}}],["layout",{"_index":180,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":46,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["layout.compon",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["layout.component.css",{"_index":181,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.html",{"_index":182,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.t",{"_index":179,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:8",{"_index":183,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout/app",{"_index":178,"title":{},"body":{"components/AppLayoutComponent.html":{},"modules/AppModule.html":{}}}],["left",{"_index":442,"title":{},"body":{"injectables/EffectsService.html":{}}}],["legend",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["licens",{"_index":33,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["light",{"_index":339,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["list",{"_index":228,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list'},{'nam",{"_index":49,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["list.compon",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":229,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.html",{"_index":230,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.t",{"_index":227,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:11",{"_index":244,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:13",{"_index":243,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:14",{"_index":246,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:15",{"_index":237,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:30",{"_index":239,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:33",{"_index":241,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:36",{"_index":242,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list/app",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/AppMusicListComponent.html":{}}}],["load",{"_index":268,"title":{},"body":{"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["load(deck",{"_index":535,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["loader.servic",{"_index":115,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["loader.service.t",{"_index":523,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:10",{"_index":543,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:11",{"_index":538,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:12",{"_index":542,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:13",{"_index":539,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:14",{"_index":530,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:18",{"_index":536,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:32",{"_index":532,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:36",{"_index":534,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:8",{"_index":546,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:9",{"_index":545,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loadondeck",{"_index":234,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loadondeck(deck",{"_index":238,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loc",{"_index":759,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["lowsearch",{"_index":257,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["lowshelf",{"_index":492,"title":{},"body":{"injectables/EffectsService.html":{}}}],["made",{"_index":30,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["mastermultipli",{"_index":404,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["match",{"_index":67,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchesselector",{"_index":679,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["matchesselector.call(el",{"_index":684,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["math.max(0",{"_index":762,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["math.max(valoranterior",{"_index":480,"title":{},"body":{"injectables/EffectsService.html":{}}}],["max",{"_index":657,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["method",{"_index":86,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["mid0",{"_index":381,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["mid1",{"_index":382,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["min",{"_index":655,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["modul",{"_index":184,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moog",{"_index":426,"title":{},"body":{"injectables/EffectsService.html":{}}}],["moogfilt",{"_index":428,"title":{},"body":{"injectables/EffectsService.html":{}}}],["more",{"_index":824,"title":{},"body":{"index.html":{}}}],["mouseev",{"_index":629,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["multi",{"_index":649,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music",{"_index":48,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music.filter(mu",{"_index":262,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musiclist",{"_index":231,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicload",{"_index":526,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["musicloaderservic",{"_index":93,"title":{"injectables/MusicLoaderService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["musicservic",{"_index":82,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["musicservice.mus",{"_index":248,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicservice.music$.subscribe(a",{"_index":250,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicsubscript",{"_index":122,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["navig",{"_index":797,"title":{},"body":{"index.html":{}}}],["new",{"_index":483,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"index.html":{}}}],["ng",{"_index":794,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":645,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ngafterviewinit",{"_index":136,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["ngmodul",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":160,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["noop",{"_index":647,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["normalize('nfd",{"_index":259,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["normfreq",{"_index":449,"title":{},"body":{"injectables/EffectsService.html":{}}}],["npm",{"_index":815,"title":{},"body":{"index.html":{}}}],["null",{"_index":311,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["number",{"_index":98,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["number(a.id",{"_index":334,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["number(this.selectedeffects[i][j",{"_index":335,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["on(deck",{"_index":582,"title":{},"body":{"injectables/PlayerService.html":{}}}],["onchangecallback",{"_index":651,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ondestroy",{"_index":75,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ondocumentclick(ev",{"_index":676,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ondragover(ev",{"_index":371,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ontouchedcallback",{"_index":650,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["option",{"_index":97,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["out",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":845,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":768,"title":{"dependencies.html":{}},"body":{}}],["pan",{"_index":444,"title":{},"body":{"injectables/EffectsService.html":{}}}],["panner",{"_index":443,"title":{},"body":{"injectables/EffectsService.html":{}}}],["paramet",{"_index":95,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["pc",{"_index":753,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["peak",{"_index":495,"title":{},"body":{"injectables/EffectsService.html":{}}}],["percent",{"_index":664,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["phaser",{"_index":451,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ping",{"_index":439,"title":{},"body":{"injectables/EffectsService.html":{}}}],["pingpongdelay",{"_index":441,"title":{},"body":{"injectables/EffectsService.html":{}}}],["player.servic",{"_index":547,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["playerserv",{"_index":304,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["playerservic",{"_index":83,"title":{"injectables/PlayerService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["playpaus",{"_index":88,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["playpause(deck",{"_index":585,"title":{},"body":{"injectables/PlayerService.html":{}}}],["pong",{"_index":440,"title":{},"body":{"injectables/EffectsService.html":{}}}],["possibl",{"_index":459,"title":{},"body":{"injectables/EffectsService.html":{}}}],["preparedeffect",{"_index":485,"title":{},"body":{"injectables/EffectsService.html":{}}}],["preparedeffects.push(new",{"_index":486,"title":{},"body":{"injectables/EffectsService.html":{}}}],["privat",{"_index":121,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["prod",{"_index":810,"title":{},"body":{"index.html":{}}}],["product",{"_index":812,"title":{},"body":{"index.html":{}}}],["progresscolor",{"_index":149,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["project",{"_index":785,"title":{},"body":{"index.html":{}}}],["properti",{"_index":80,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["protractor",{"_index":821,"title":{},"body":{"index.html":{}}}],["provid",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["providedin",{"_index":475,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["purpl",{"_index":150,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["queri",{"_index":232,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["rang",{"_index":457,"title":{},"body":{"injectables/EffectsService.html":{}}}],["rate",{"_index":452,"title":{},"body":{"injectables/EffectsService.html":{}}}],["reader",{"_index":550,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onerror",{"_index":556,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onload",{"_index":553,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.readasdataurl(song",{"_index":552,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.result",{"_index":555,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["readm",{"_index":827,"title":{},"body":{"index.html":{}}}],["recievedfil",{"_index":283,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["recievedfiles(fil",{"_index":288,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["red",{"_index":148,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["registeronchang",{"_index":621,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registeronchange(fn",{"_index":631,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouch",{"_index":622,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouched(fn",{"_index":634,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["reload",{"_index":800,"title":{},"body":{"index.html":{}}}],["removesong",{"_index":235,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["removesong(song",{"_index":240,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["replace(/[\\u0300",{"_index":260,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["requestanimationfram",{"_index":141,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["reset",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetdisc",{"_index":89,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["reson",{"_index":433,"title":{},"body":{"injectables/EffectsService.html":{}}}],["result",{"_index":66,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":102,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["right",{"_index":445,"title":{},"body":{"injectables/EffectsService.html":{}}}],["root",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["root'},{'nam",{"_index":42,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["rotat",{"_index":84,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["roulett",{"_index":59,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["roulettecontrollercompon",{"_index":58,"title":{"components/RouletteControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["roundicon",{"_index":36,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["rout",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":793,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":118,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["save",{"_index":570,"title":{},"body":{"injectables/PlayerService.html":{}}}],["save(deck",{"_index":587,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeffect",{"_index":571,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeffects(deck",{"_index":589,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeq",{"_index":572,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeq(eq",{"_index":591,"title":{},"body":{"injectables/PlayerService.html":{}}}],["scaffold",{"_index":802,"title":{},"body":{"index.html":{}}}],["search",{"_index":269,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{}}}],["search'},{'nam",{"_index":51,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["search.compon",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.css",{"_index":280,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.html",{"_index":281,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.t",{"_index":279,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:15",{"_index":286,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:19",{"_index":290,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:9",{"_index":284,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search/app",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/AppSearchComponent.html":{}}}],["searchmus",{"_index":255,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchmusic(this.queri",{"_index":265,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchqueri",{"_index":256,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["see",{"_index":833,"title":{},"body":{"index.html":{}}}],["selectedeffect",{"_index":300,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["serv",{"_index":795,"title":{},"body":{"index.html":{}}}],["server",{"_index":792,"title":{},"body":{"index.html":{}}}],["services/effects.servic",{"_index":316,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["services/mus",{"_index":114,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["services/player.servic",{"_index":116,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["set",{"_index":294,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{}}}],["setact",{"_index":348,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["setactive(act",{"_index":361,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["seteq",{"_index":389,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["setinterv",{"_index":127,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["settings'},{'nam",{"_index":53,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["settings.compon",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["settings.component.css",{"_index":295,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.html",{"_index":296,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.t",{"_index":293,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":314,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:16",{"_index":313,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":312,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":310,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":315,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:30",{"_index":309,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:9",{"_index":305,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings/app",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/AppSettingsComponent.html":{}}}],["setvalu",{"_index":696,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["setvolum",{"_index":573,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setvolume(deck",{"_index":593,"title":{},"body":{"injectables/PlayerService.html":{}}}],["shell",{"_index":693,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetheight",{"_index":749,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetwidth",{"_index":748,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shellview",{"_index":694,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shownmus",{"_index":233,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["slider",{"_index":62,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["slidercontrollercompon",{"_index":61,"title":{"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["smallval",{"_index":747,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["smashicon",{"_index":31,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["song",{"_index":85,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["song.nam",{"_index":165,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["spanish",{"_index":337,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["src/app/app",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/app",{"_index":6,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["src/app/components/roulett",{"_index":613,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["src/app/components/slid",{"_index":691,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["src/app/services/effects.service.t",{"_index":407,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:206",{"_index":423,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:224",{"_index":413,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:75",{"_index":424,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:78",{"_index":415,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:8",{"_index":472,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:82",{"_index":417,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:91",{"_index":420,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/mus",{"_index":522,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["src/app/services/player.service.t",{"_index":562,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:10",{"_index":597,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:11",{"_index":596,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:12",{"_index":599,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:13",{"_index":603,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:14",{"_index":595,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:15",{"_index":605,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:16",{"_index":606,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:17",{"_index":604,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:18",{"_index":598,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:19",{"_index":600,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:20",{"_index":574,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:27",{"_index":588,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:33",{"_index":594,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:36",{"_index":584,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:39",{"_index":581,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:42",{"_index":586,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:45",{"_index":580,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:48",{"_index":577,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:55",{"_index":578,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:61",{"_index":592,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:66",{"_index":590,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:73",{"_index":576,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stage",{"_index":835,"title":{},"body":{"index.html":{}}}],["stage.surge.sh",{"_index":838,"title":{},"body":{"index.html":{}}}],["start",{"_index":267,"title":{"index.html":{}},"body":{"components/AppMusicListComponent.html":{}}}],["state",{"_index":836,"title":{},"body":{"index.html":{}}}],["stereophas",{"_index":464,"title":{},"body":{"injectables/EffectsService.html":{}}}],["stopdrag",{"_index":373,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["store",{"_index":807,"title":{},"body":{"index.html":{}}}],["string",{"_index":245,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["string(mus.nam",{"_index":263,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["subject",{"_index":537,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["subscript",{"_index":117,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["support",{"_index":840,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":841,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":344,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs'},{'nam",{"_index":55,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tabs.compon",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.component.css",{"_index":345,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.html",{"_index":346,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.t",{"_index":343,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:10",{"_index":363,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:11",{"_index":364,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:12",{"_index":365,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:13",{"_index":362,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:15",{"_index":352,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:20",{"_index":359,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:27",{"_index":357,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:33",{"_index":353,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:36",{"_index":360,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs/app",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/AppTabsComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["test",{"_index":814,"title":{},"body":{"index.html":{}}}],["tfg",{"_index":784,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":157,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.activeeffects[deck",{"_index":609,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.applyeffect",{"_index":611,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.availableeffect",{"_index":319,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.availableeffects.find(b",{"_index":324,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.config.id",{"_index":654,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.config.max",{"_index":658,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.min",{"_index":656,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.vert",{"_index":745,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.config.zindex",{"_index":766,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.configslid",{"_index":653,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.max",{"_index":666,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.min",{"_index":665,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.deckloader[0].asobserv",{"_index":540,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[1].asobserv",{"_index":541,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[deck].next(this.decksongs[deck",{"_index":549,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.decknumb",{"_index":139,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.decksongs[deck",{"_index":548,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.drag",{"_index":369,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.effect",{"_index":133,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["this.effectloader[0].asobserv",{"_index":601,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectloader[1].asobserv",{"_index":602,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectloader[deck].next(this.effects[deck",{"_index":612,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effects.map(c",{"_index":322,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects.push(effect",{"_index":482,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects.reduce((valoranterior",{"_index":478,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects[0",{"_index":328,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects[1",{"_index":331,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effectserv.createeffects(this.deck[deck].backend.ac",{"_index":610,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectserv.geteffect",{"_index":320,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.fills",{"_index":760,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.fold",{"_index":670,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.music.push(song",{"_index":559,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.music.splice(this.music.indexof(song",{"_index":561,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musiclist",{"_index":247,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicloader.asobserv",{"_index":544,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicloader.next(this.mus",{"_index":560,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicservic",{"_index":125,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.musicservice.decksongs$[this.decknumber].subscribe(a",{"_index":155,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.musicservice.deletesong(song",{"_index":252,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicservice.load(deck",{"_index":251,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicsubscript",{"_index":154,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.musicsubscription.unsubscrib",{"_index":161,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.onchangecallback",{"_index":674,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.slid",{"_index":767,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.valu",{"_index":669,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.ontouchedcallback",{"_index":671,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.playerserv.effects$[0].subscribe(effect",{"_index":327,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.effects$[1].subscribe(effect",{"_index":330,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.saveeffect",{"_index":332,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerservic",{"_index":126,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["this.playerservice.activateeffect(this.decknumb",{"_index":164,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.effects$[this.decknumber].subscribe(effect",{"_index":130,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.isplaying(this.decknumb",{"_index":163,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.load(deck",{"_index":554,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.playerservice.on(this.decknumb",{"_index":151,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.playpause(this.decknumb",{"_index":162,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.sav",{"_index":142,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.queri",{"_index":253,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.recievedfiles(event.datatransfer.fil",{"_index":368,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.recievedfiles(fileinput.target.fil",{"_index":291,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["this.resetdisc",{"_index":153,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.rot",{"_index":128,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["this.selectedeffect",{"_index":321,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.shel",{"_index":746,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shellview.nativeel",{"_index":764,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shownmus",{"_index":254,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.slid",{"_index":752,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.song",{"_index":156,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.thumbheight",{"_index":756,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.thumbwidth",{"_index":757,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.updatemus",{"_index":249,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.valu",{"_index":659,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.volumemast",{"_index":405,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["this.zindex",{"_index":765,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumb",{"_index":660,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["thumbheight",{"_index":699,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbleft",{"_index":701,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbsiz",{"_index":755,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbtop",{"_index":700,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbwidth",{"_index":698,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tolowercas",{"_index":258,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["track",{"_index":661,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["trackheight",{"_index":707,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackleft",{"_index":709,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracksiz",{"_index":758,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracktop",{"_index":708,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackwidth",{"_index":706,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trebble0",{"_index":383,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["trebble1",{"_index":384,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{}}}],["true",{"_index":135,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tuna",{"_index":473,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["tuna(ac",{"_index":484,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tuna[effect.type](effect.config",{"_index":487,"title":{},"body":{"injectables/EffectsService.html":{}}}],["tunaj",{"_index":474,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["type",{"_index":96,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["typeof",{"_index":672,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["u036f]/g",{"_index":261,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["undefin",{"_index":673,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["unfold",{"_index":623,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["unit",{"_index":813,"title":{},"body":{"index.html":{}}}],["updatemus",{"_index":236,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["us",{"_index":803,"title":{},"body":{"index.html":{}}}],["useexist",{"_index":648,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["val",{"_index":751,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["valoractu",{"_index":479,"title":{},"body":{"injectables/EffectsService.html":{}}}],["valoractual.id",{"_index":481,"title":{},"body":{"injectables/EffectsService.html":{}}}],["valu",{"_index":108,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["var",{"_index":37,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["version",{"_index":789,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":662,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["via",{"_index":817,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":717,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["viewchild('slidershel",{"_index":744,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["void",{"_index":103,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volum",{"_index":376,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["volume'},{'nam",{"_index":57,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volume.compon",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["volume.component.css",{"_index":377,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.html",{"_index":378,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.t",{"_index":375,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:10",{"_index":390,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:12",{"_index":401,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:13",{"_index":402,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:14",{"_index":403,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:15",{"_index":394,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:16",{"_index":396,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:17",{"_index":398,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:18",{"_index":395,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:19",{"_index":397,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:20",{"_index":399,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:21",{"_index":392,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:34",{"_index":393,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume/app",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"components/AppVolumeComponent.html":{}}}],["volume0",{"_index":385,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume1",{"_index":386,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volumemast",{"_index":387,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["wavecolor",{"_index":147,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurf",{"_index":119,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["wavesurfer.cr",{"_index":143,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurfer.j",{"_index":120,"title":{},"body":{"components/AppDeckComponent.html":{},"dependencies.html":{}}}],["webapp",{"_index":832,"title":{},"body":{"index.html":{}}}],["window:dragleav",{"_index":350,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragov",{"_index":351,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragover(ev",{"_index":356,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["writevalu",{"_index":624,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["writevalue(valu",{"_index":638,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["www.flaticon.com",{"_index":32,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["zindex",{"_index":695,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["zone.j",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppAboutComponent.html":{"url":"components/AppAboutComponent.html","title":"component - AppAboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppAboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-about/app-about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                app-about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-about.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-about/app-about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './app-about.component.html',\n  styleUrls: ['./app-about.component.css']\n})\nexport class AppAboutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  Content attribution:\n\n\n\n  \n  \n  Icons made by\n    Smashicons\n    from\n    www.flaticon.com\n    is licensed by\n    CC 3.0 BY\n  \n\n\n\n  \n  \n  Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Content attribution:      Icons made by    Smashicons    from    www.flaticon.com    is licensed by    CC 3.0 BY        Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppAboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n-->\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppDeckComponent.html":{"url":"components/AppDeckComponent.html","title":"component - AppDeckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppDeckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-deck/app-deck.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deck\n            \n\n            \n                styleUrls\n                app-deck.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-deck.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effects\n                            \n                            \n                                musicService\n                            \n                            \n                                playerService\n                            \n                            \n                                rotation\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyEffect\n                            \n                            \n                                playPause\n                            \n                            \n                                resetDisc\n                            \n                            \n                                rotate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deckNumber\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-deck/app-deck.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deckNumber\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffect(i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetDisc\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetDisc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [{}, {}, {}, {}, {}, {}] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            song\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        song:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { PlayerService } from '../../services/player.service';\nimport { Subscription } from 'rxjs';\nimport * as WaveSurfer from 'wavesurfer.js';\n\n@Component({\n  selector: 'app-deck',\n  templateUrl: './app-deck.component.html',\n  styleUrls: ['./app-deck.component.css']\n})\nexport class AppDeckComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  deckNumber: number;\n  private musicSubscription: Subscription;\n  musicService: MusicLoaderService;\n  playerService: PlayerService;\n  rotation = 0;\n  private active = false;\n  song: any;\n  effects = [{}, {}, {}, {}, {}, {}] as any;\n  constructor(musicService: MusicLoaderService, playerService: PlayerService) {\n    this.musicService = musicService;\n    this.playerService = playerService;\n  }\n  ngOnInit() {\n    setInterval(() => {\n      this.rotate();\n    }, 50);\n    this.playerService.effects$[this.deckNumber].subscribe(effects => {\n      const eff = effects as any;\n      this.effects = eff.filter(_ => true);\n    });\n  }\n  ngAfterViewInit(): void {\n    const height = document.getElementById('deck_' + this.deckNumber + '_wave').offsetHeight;\n    requestAnimationFrame(() => {\n      this.playerService.save(\n        this.deckNumber,\n        WaveSurfer.create({\n          container: '#deck_' + this.deckNumber + '_wave',\n          waveColor: 'red',\n          progressColor: 'purple',\n          height: height\n        })\n      );\n      this.playerService.on(this.deckNumber, 'finish', () => {\n        this.resetDisc();\n      });\n    });\n    this.musicSubscription = this.musicService.decksongs$[this.deckNumber].subscribe(a => {\n      this.resetDisc();\n      this.song = a as File;\n    });\n  }\n  rotate() {\n    if (this.active) {\n      this.rotation = (this.rotation + 10) % 360;\n    }\n  }\n  resetDisc() {\n    this.active = false;\n    this.rotation = 0;\n  }\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n  playPause() {\n    this.playerService.playPause(this.deckNumber);\n    this.active = this.playerService.isPlaying(this.deckNumber);\n  }\n  applyEffect(i) {\n    this.playerService.activateEffect(this.deckNumber, i);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n    \n\n    \n      \n        {{song.name}}\n      \n\n      \n        \n          \n            \n          \n          \n            2x\n            4x\n            8x\n            16x\n            32x\n          \n        \n        \n          \n            \n              CUEs\n              \n                CUE 1\n                CUE 2\n                CUE 3\n                CUE 4\n              \n              Effects\n              \n                \n                  1\n                  2\n                  3\n                \n                \n                  4\n                  5\n                  6\n                \n              \n            \n            \n              \n            \n          \n          \n            CUE\n            \n              \n                \n                \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{song.name}}                                                                          2x            4x            8x            16x            32x                                                              CUEs                              CUE 1                CUE 2                CUE 3                CUE 4                            Effects                                                1                  2                  3                                                  4                  5                  6                                                                                                                CUE                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppDeckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppLayoutComponent.html":{"url":"components/AppLayoutComponent.html","title":"component - AppLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-layout/app-layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                app-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-layout.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-layout/app-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './app-layout.component.html',\n  styleUrls: ['./app-layout.component.css']\n})\nexport class AppLayoutComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppAboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                AppDeckComponent\n                            \n                            \n                                AppLayoutComponent\n                            \n                            \n                                AppMusicListComponent\n                            \n                            \n                                AppSearchComponent\n                            \n                            \n                                AppSettingsComponent\n                            \n                            \n                                AppTabsComponent\n                            \n                            \n                                AppVolumeComponent\n                            \n                            \n                                RouletteControllerComponent\n                            \n                            \n                                SliderControllerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppDeckComponent } from './components/app-deck/app-deck.component';\nimport { AppLayoutComponent } from './components/app-layout/app-layout.component';\nimport { AppVolumeComponent } from './components/app-volume/app-volume.component';\nimport { SliderControllerComponent } from './components/slider-controller/slider-controller.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouletteControllerComponent } from './components/roulette-controller/roulette-controller.component';\nimport { AppSearchComponent } from './components/app-search/app-search.component';\nimport { AppTabsComponent } from './components/app-tabs/app-tabs.component';\nimport { AppMusicListComponent } from './components/app-music-list/app-music-list.component';\nimport { AppSettingsComponent } from './components/app-settings/app-settings.component';\nimport { AppAboutComponent } from './components/app-about/app-about.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppDeckComponent,\n    AppLayoutComponent,\n    AppVolumeComponent,\n    SliderControllerComponent,\n    RouletteControllerComponent,\n    AppSearchComponent,\n    AppTabsComponent,\n    AppMusicListComponent,\n    AppSettingsComponent,\n    AppAboutComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppMusicListComponent.html":{"url":"components/AppMusicListComponent.html","title":"component - AppMusicListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppMusicListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-music-list/app-music-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music-list\n            \n\n            \n                styleUrls\n                app-music-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-music-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicList\n                            \n                            \n                                musicService\n                            \n                            \n                                query\n                            \n                            \n                                shownMusic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadOnDeck\n                            \n                            \n                                removeSong\n                            \n                            \n                                updateMusic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOnDeck\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadOnDeck(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeSong\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateMusic()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicList:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shownMusic:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-music-list',\n  templateUrl: './app-music-list.component.html',\n  styleUrls: ['./app-music-list.component.css']\n})\nexport class AppMusicListComponent implements OnDestroy {\n  musicService: MusicLoaderService;\n  private musicSubscription: Subscription;\n  musicList: File[];\n  shownMusic: File[];\n  query: string;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n    this.musicList = musicService.music;\n    this.updateMusic();\n    this.musicSubscription = musicService.music$.subscribe(a => {\n      this.musicList = a as File[];\n      this.updateMusic();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n\n  loadOnDeck(deck, song) {\n    this.musicService.load(deck, song);\n  }\n  removeSong(song) {\n    this.musicService.deleteSong(song);\n  }\n  updateMusic() {\n    if (!this.query) {\n      this.shownMusic = this.musicList;\n    } else {\n      const searchMusic = (searchQuery, music: any[]) => {\n        const lowSearch = searchQuery\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n        return music.filter(mus => {\n          return String(mus.name)\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .includes(lowSearch);\n        });\n      };\n      this.shownMusic = searchMusic(this.query, this.musicList);\n    }\n  }\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      \n        \n          Song\n          \n            \n            \n          \n        \n      \n      Artist -->\n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      {{song.name}}\n       -->\n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n    \n    \n      No songs match {{query}}\n    \n\n  \n  \n    \n    To start load music from the search or drag music here from your computer.\n  \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                                  Song                                                                Artist -->                                                                        {{song.name}}       -->                                                                                                                                          No songs match {{query}}                To start load music from the search or drag music here from your computer.    '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppMusicListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), FormsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSearchComponent.html":{"url":"components/AppSearchComponent.html","title":"component - AppSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-search/app-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                app-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChangeEvent\n                            \n                            \n                                recievedFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChangeEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChangeEvent(fileInput: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileInput\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n@Component({\n  selector: 'app-search',\n  templateUrl: './app-search.component.html',\n  styleUrls: ['./app-search.component.css']\n})\nexport class AppSearchComponent implements OnInit {\n  musicService: MusicLoaderService;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  ngOnInit() {}\n  fileChangeEvent(fileInput: any) {\n    this.recievedFiles(fileInput.target.files);\n  }\n\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n\n    \n    \n      \n      Choose a\n        file\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                          Choose a        file      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSettingsComponent.html":{"url":"components/AppSettingsComponent.html","title":"component - AppSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-settings/app-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                app-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableEffects\n                            \n                            \n                                effects\n                            \n                            \n                                effectsNum\n                            \n                            \n                                JSON\n                            \n                            \n                                selectedEffects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, playerServ: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-settings/app-settings.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerServ\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(i: , j: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        j\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [null, null] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JSON:     \n\n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EffectsService } from '../../services/effects.service';\nimport { PlayerService } from '../../services/player.service';\n@Component({\n  selector: 'app-settings',\n  templateUrl: './app-settings.component.html',\n  styleUrls: ['./app-settings.component.css']\n})\nexport class AppSettingsComponent implements OnInit {\n  constructor(private effectServ: EffectsService, private playerServ: PlayerService) {\n    this.effects = JSON.parse(JSON.stringify(this.playerServ.effects));\n    this.availableEffects = this.effectServ.getEffects();\n    this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n  }\n  JSON = JSON;\n  effectsNum = 6;\n  effects = [null, null] as any;\n  availableEffects: any;\n  selectedEffects: any;\n  ngOnInit() {\n    this.playerServ.effects$[0].subscribe(effects => {\n      this.effects[0] = JSON.parse(JSON.stringify(effects));\n      this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n    });\n    this.playerServ.effects$[1].subscribe(effects => {\n      this.effects[1] = JSON.parse(JSON.stringify(effects));\n      this.selectedEffects = this.effects.map(c => c.map(a => this.availableEffects.find(b => a.id === b.id).id));\n    });\n  }\n  change(i, j) {\n    this.playerServ.saveEffects(\n      i,\n      j,\n      JSON.parse(JSON.stringify(this.availableEffects.find(a => Number(a.id) === Number(this.selectedEffects[i][j]))))\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Language\n\n      \n        Spanish\n        English\n      \n    \n    \n      Template\n      \n        Light\n        Dark\n      \n    \n  \n  \n    \n      Effects deck {{i+1}}\n      \n        \n          Effect {{j}}\n          \n            \n              {{availableEffect.name}}\n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Language              Spanish        English                    Template              Light        Dark                        Effects deck {{i+1}}                        Effect {{j}}                                    {{availableEffect.name}}                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppTabsComponent.html":{"url":"components/AppTabsComponent.html","title":"component - AppTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-tabs/app-tabs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                app-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                dragging\n                            \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                droped\n                            \n                            \n                                recievedFiles\n                            \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:dragleave\n                            \n                            \n                                window:dragover\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-tabs/app-tabs.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragleave\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:dragleave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:dragover(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            droped\n                            \n                            \n                        \n                    \n                \n                \n                    \ndroped(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActive(active: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'music'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragging\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dragging:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './app-tabs.component.html',\n  styleUrls: ['./app-tabs.component.css']\n})\nexport class AppTabsComponent {\n  active = 'music';\n  dragging = false;\n  musicService: MusicLoaderService;\n  setActive(active) {\n    this.active = active;\n  }\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  droped(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.recievedFiles(event.dataTransfer.files);\n    this.dragging = false;\n  }\n  @HostListener('window:dragover', ['$event'])\n  onDragOver(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.dragging = true;\n  }\n  @HostListener('window:dragleave')\n  stopdrag() {\n    this.dragging = false;\n  }\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n        Music\n      \n      \n        Settings\n      \n      \n        About\n      \n    \n    \n      \n      \n      \n    \n  \n  \n    Drop your song here\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Music                    Settings                    About                                            Drop your song here  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppVolumeComponent.html":{"url":"components/AppVolumeComponent.html","title":"component - AppVolumeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppVolumeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-volume/app-volume.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volume\n            \n\n            \n                styleUrls\n                app-volume.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-volume.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bass0\n                            \n                            \n                                bass1\n                            \n                            \n                                mid0\n                            \n                            \n                                mid1\n                            \n                            \n                                trebble0\n                            \n                            \n                                trebble1\n                            \n                            \n                                volume0\n                            \n                            \n                                volume1\n                            \n                            \n                                volumeMaster\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeVolume\n                            \n                            \n                                setEQ\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-volume/app-volume.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeVolume(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEQ()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volumeMaster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volumeMaster:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PlayerService } from '../../services/player.service';\nimport { EffectsService } from '../../services/effects.service';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './app-volume.component.html',\n  styleUrls: ['./app-volume.component.css']\n})\nexport class AppVolumeComponent implements OnInit {\n  constructor(private effectServ: EffectsService, private playerService: PlayerService) {}\n  volume0 = 100;\n  volume1 = 100;\n  volumeMaster = 0;\n  bass0 = 0;\n  mid0 = 0;\n  trebble0 = 0;\n  bass1 = 0;\n  mid1 = 0;\n  trebble1 = 0;\n  changeVolume(deck) {\n    let masterMultiplier = 1;\n    if (deck === 0 && this.volumeMaster > 0) {\n      masterMultiplier = (100 - this.volumeMaster) / 100;\n    }\n    if (deck === 1 && this.volumeMaster \n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n      \n    \n    \n      \n\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppVolumeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EffectsService.html":{"url":"injectables/EffectsService.html","title":"injectable - EffectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EffectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/effects.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEffect\n                            \n                            \n                                createEffects\n                            \n                            \n                                createEQ\n                            \n                            \n                                createEQEffect\n                            \n                            \n                                getEffects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/effects.service.ts:224\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \naddEffect(effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEffects(ac: , effects: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ac\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        effects\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEQ(bass0: , mid0: , trebble0: , bass1: , mid1: , trebble1: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bass0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mid0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trebble0\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bass1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mid1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trebble1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEQEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEQEffect(deck: , eq: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:206\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        eq\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      id: 1,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      id: 2,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      id: 3,\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      id: 4,\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      id: 0,\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      id: 5,\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Tuna from 'tunajs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EffectsService {\n  effects = [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      id: 1,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      id: 2,\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      id: 3,\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      id: 4,\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      id: 0,\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      id: 5,\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ];\n  getEffects() {\n    return JSON.parse(JSON.stringify(this.effects));\n  }\n  addEffect(effect) {\n    effect.id = this.effects.reduce((valorAnterior, valorActual) => Math.max(valorAnterior, valorActual.id), 0) + 1;\n    this.effects.push(effect);\n  }\n  createEffects(ac, effects) {\n    const tuna = new Tuna(ac);\n    const preparedEffects = [];\n    for (const effect of effects) {\n      preparedEffects.push(new tuna[effect.type](effect.config));\n    }\n    return preparedEffects;\n  }\n  // Advanced volume\n  createEQ(bass0, mid0, trebble0, bass1, mid1, trebble1) {\n    const adjustEQValue = value => {\n      if (value > 0) {\n        return value / 5;\n      }\n      return value;\n    };\n    const EQ = [\n      [\n        {\n          f: 32,\n          type: 'lowshelf',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 64,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 125,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 250,\n          type: 'peaking',\n          value: adjustEQValue(bass0)\n        },\n        {\n          f: 500,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * bass0 + 0.25 * mid0)\n        },\n        {\n          f: 1000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid0 + 0.25 * bass0)\n        },\n        {\n          f: 2000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid0 + 0.25 * trebble0)\n        },\n        {\n          f: 4000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * trebble0 + 0.25 * mid0)\n        },\n        {\n          f: 8000,\n          type: 'peaking',\n          value: adjustEQValue(trebble0)\n        },\n        {\n          f: 16000,\n          type: 'highshelf',\n          value: adjustEQValue(trebble0)\n        }\n      ],\n      [\n        {\n          f: 32,\n          type: 'lowshelf',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 64,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 125,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 250,\n          type: 'peaking',\n          value: adjustEQValue(bass1)\n        },\n        {\n          f: 500,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * bass1 + 0.25 * mid1)\n        },\n        {\n          f: 1000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid1 + 0.25 * bass1)\n        },\n        {\n          f: 2000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * mid1 + 0.25 * trebble1)\n        },\n        {\n          f: 4000,\n          type: 'peaking',\n          value: adjustEQValue(0.75 * trebble1 + 0.25 * mid1)\n        },\n        {\n          f: 8000,\n          type: 'peaking',\n          value: adjustEQValue(trebble1)\n        },\n        {\n          f: 16000,\n          type: 'highshelf',\n          value: adjustEQValue(trebble1)\n        }\n      ]\n    ];\n    return EQ;\n  }\n  createEQEffect(deck, eq) {\n    const filter0 = eq[0].map(band => {\n      const filter = deck[0].backend.ac.createBiquadFilter();\n      filter.type = band.type;\n      filter.gain.value = band.value;\n      filter.Q.value = 1;\n      filter.frequency.value = band.f;\n      return filter;\n    });\n    const filter1 = eq[1].map(band => {\n      const filter = deck[1].backend.ac.createBiquadFilter();\n      filter.type = band.type;\n      filter.gain.value = band.value;\n      filter.Q.value = 1;\n      filter.frequency.value = band.f;\n      return filter;\n    });\n    return [filter0, filter1];\n  }\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicLoaderService.html":{"url":"injectables/MusicLoaderService.html","title":"injectable - MusicLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MusicLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/music-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deckLoader\n                            \n                            \n                                decksongs\n                            \n                            \n                                decksongs$\n                            \n                            \n                                music\n                            \n                            \n                                music$\n                            \n                            \n                                musicLoader\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSong\n                            \n                            \n                                deleteSong\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSong\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSong(song: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSong\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.musicLoader.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicLoader:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PlayerService } from './player.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicLoaderService {\n  musicLoader = new Subject();\n  music$ = this.musicLoader.asObservable();\n  music: File[] = [];\n  deckLoader = [new Subject(), new Subject()];\n  decksongs$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  decksongs: File[] = [null, null];\n  playerService: PlayerService;\n  constructor(playerService: PlayerService) {\n    this.playerService = playerService;\n  }\n  load(deck, song) {\n    this.decksongs[deck] = song;\n    this.deckLoader[deck].next(this.decksongs[deck]);\n    requestAnimationFrame(() => {\n      const reader = new FileReader();\n      reader.readAsDataURL(song);\n      reader.onload = () => {\n        this.playerService.load(deck, reader.result);\n      };\n      reader.onerror = error => {\n        console.log('Error: ', error);\n      };\n    });\n  }\n  addSong(song: File) {\n    this.music.push(song);\n    this.musicLoader.next(this.music);\n  }\n  deleteSong(song) {\n    this.music.splice(this.music.indexOf(song), 1);\n    this.musicLoader.next(this.music);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/player.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeEffects\n                            \n                            \n                                deck\n                            \n                            \n                                deck$\n                            \n                            \n                                deckLoader\n                            \n                            \n                                deckNum\n                            \n                            \n                                effectLoader\n                            \n                            \n                                effects\n                            \n                            \n                                effects$\n                            \n                            \n                                effectsNum\n                            \n                            \n                                eq\n                            \n                            \n                                eqEffect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateEffect\n                            \n                            \n                                applyEffects\n                            \n                            \n                                equalizer\n                            \n                            \n                                isPlaying\n                            \n                            \n                                load\n                            \n                            \n                                on\n                            \n                            \n                                playPause\n                            \n                            \n                                save\n                            \n                            \n                                saveEffects\n                            \n                            \n                                saveEQ\n                            \n                            \n                                setVolume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activateEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivateEffect(deck: , i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equalizer\n                            \n                            \n                        \n                    \n                \n                \n                    \nequalizer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPlaying(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            on\n                            \n                            \n                        \n                    \n                \n                \n                    \non(deck: , event: , callback: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(deck: , wavesurfer: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        wavesurfer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEffects(deck: , i: , effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEQ(eq: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eq\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetVolume(deck: , volume: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        volume\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeEffects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[], []]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[null, null, null, null, null, null], [null, null, null, null, null, null]]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.effectLoader[0].asObservable(), this.effectLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eq\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eq:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eqEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eqEffect:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport Tuna from 'tunajs';\nimport { EffectsService } from './effects.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  deckLoader = [new Subject(), new Subject()];\n  deck$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  effectLoader = [new Subject(), new Subject()];\n  effects$ = [this.effectLoader[0].asObservable(), this.effectLoader[1].asObservable()];\n  deck: any[] = [null, null];\n  eq = [null, null];\n  eqEffect: any;\n  effectsNum = 6;\n  deckNum = 2;\n  effects = [[null, null, null, null, null, null], [null, null, null, null, null, null]];\n  activeEffects = [[], []];\n  constructor(private effectServ: EffectsService) {\n    for (let i = 0; i  a.active);\n    this.activeEffects[deck] = this.effectServ.createEffects(this.deck[deck].backend.ac, effects);\n    this.applyEffects();\n    this.effectLoader[deck].next(this.effects[deck]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouletteControllerComponent.html":{"url":"components/RouletteControllerComponent.html","title":"component - RouletteControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouletteControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/roulette-controller/roulette-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                roulette-controller\n            \n\n            \n                styleUrls\n                roulette-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./roulette-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSlider\n                            \n                            \n                                folded\n                            \n                            \n                                rotation\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                rotate\n                            \n                            \n                                unfold\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/roulette-controller/roulette-controller.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:66\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unfold\n                            \n                            \n                        \n                    \n                \n                \n                    \nunfold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSlider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSlider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folded:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RouletteControllerComponent),\n  multi: true\n};\n@Component({\n  selector: 'roulette-controller',\n  templateUrl: './roulette-controller.component.html',\n  styleUrls: ['./roulette-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class RouletteControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  folded = true;\n  value = 0;\n  configSlider: any;\n  rotation: number;\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.configSlider = {\n      id: this.config.id + 'slider',\n      min: this.config.min || 0,\n      max: this.config.max || 100,\n      default: this.value,\n      thumb: 'roulette-slider-thumb',\n      track: 'roulette-slider-track',\n      vertical: true,\n      fill: true\n    };\n    this.rotate();\n  }\n\n  rotate() {\n    const percent = (this.value - this.configSlider.min) / (this.configSlider.max - this.configSlider.min);\n    this.rotation = 135 * 2 * (percent - 0.5);\n    this.onChangeCallback(this.value);\n  }\n  unfold() {\n    this.folded = !this.folded;\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.value = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  @HostListener('document:click', ['$event'])\n  private onDocumentClick(event: MouseEvent) {\n    const closest = (el, selector) => {\n      const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\n      while (el) {\n        if (matchesSelector.call(el, selector)) {\n          break;\n        }\n        el = el.parentElement;\n      }\n      return el;\n    };\n    const ele = event.target as Element;\n    if (!closest(ele, '#' + this.config.id + '_container')) {\n      this.folded = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouletteControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderControllerComponent.html":{"url":"components/SliderControllerComponent.html","title":"component - SliderControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/slider-controller/slider-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                slider-controller\n            \n\n            \n                styleUrls\n                slider-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./slider-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fillsize\n                            \n                            \n                                shell\n                            \n                            \n                                shellView\n                            \n                            \n                                slider\n                            \n                            \n                                zindex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbWidth\n                                \n                                \n                                    thumbHeight\n                                \n                                \n                                    thumbTop\n                                \n                                \n                                    thumbLeft\n                                \n                                \n                                    fillWidth\n                                \n                                \n                                    fillHeight\n                                \n                                \n                                    fillTop\n                                \n                                \n                                    fillLeft\n                                \n                                \n                                    trackWidth\n                                \n                                \n                                    trackHeight\n                                \n                                \n                                    trackTop\n                                \n                                \n                                    trackLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:216\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:221\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillsize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillsize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shell\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shell:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shellView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shellView:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zindex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zindex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thumbWidth\n                    \n                \n\n                \n                    \n                        getthumbWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbHeight\n                    \n                \n\n                \n                    \n                        getthumbHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbTop\n                    \n                \n\n                \n                    \n                        getthumbTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbLeft\n                    \n                \n\n                \n                    \n                        getthumbLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillWidth\n                    \n                \n\n                \n                    \n                        getfillWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:89\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillHeight\n                    \n                \n\n                \n                    \n                        getfillHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillTop\n                    \n                \n\n                \n                    \n                        getfillTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:123\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillLeft\n                    \n                \n\n                \n                    \n                        getfillLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:146\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackWidth\n                    \n                \n\n                \n                    \n                        gettrackWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackHeight\n                    \n                \n\n                \n                    \n                        gettrackHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackTop\n                    \n                \n\n                \n                    \n                        gettrackTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:185\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackLeft\n                    \n                \n\n                \n                    \n                        gettrackLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:196\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, ViewChild, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SliderControllerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'slider-controller',\n  templateUrl: './slider-controller.component.html',\n  styleUrls: ['./slider-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class SliderControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  @ViewChild('sliderShell')\n  shellView: ElementRef;\n  shell: HTMLElement;\n  slider: any;\n  fillsize = 16;\n  zindex = 0;\n\n  get thumbWidth(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    if (vertical) {\n      return smallval;\n    } else {\n      return smallval / 2.5;\n    }\n  }\n  get thumbHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      if (!vertical) {\n        return smallval;\n      } else {\n        return smallval / 2.5;\n      }\n    } else {\n      return null;\n    }\n  }\n  get thumbTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? loc : 0;\n    } else {\n      return null;\n    }\n  }\n  get thumbLeft(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? 0 : loc;\n    } else {\n      return null;\n    }\n  }\n\n  get fillWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get fillHeight(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return Math.max(0, vertical ? bigval - filloffset - fillsize - loc : fillsize);\n    } else {\n      return null;\n    }\n  }\n  get fillTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n\n      /* Fill */\n\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return vertical ? loc + thumbsize : filloffset;\n    } else {\n      return null;\n    }\n  }\n  get fillLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  get trackWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return bigval - thumbsize * 1.25;\n    } else {\n      return null;\n    }\n  }\n  get trackTop(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  ngOnInit() {\n    this.shell = this.shellView.nativeElement;\n    this.zindex = this.config.zindex || 0;\n  }\n\n  setValue() {\n    this.onChangeCallback(this.slider);\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.slider = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n\n    \n\n    \n        \n\t\n\t\n\t\n\t\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            tunajs : ^1.0.2\n        \n            wavesurfer.js : ^2.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTFG\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun npm test to execute the unit tests via jest.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nDocumentation\nTo access the compodoc generated documentation go to https://clm2609.gitlab.io/tfg\nWebApp\nTo see the latest stage state of the app go to http://virtualdj-stage.surge.sh/\nTo see the latest production state of the app go to http://virtualdj.surge.sh/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
