var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppAboutComponent.html",[0,0.136,1,0.378]],["body/components/AppAboutComponent.html",[0,0.247,1,0.685,2,0.302,3,0.228,4,0.755,5,0.228,6,1.444,7,3.398,8,3.307,9,1.444,10,1.394,11,0.755,12,1.252,13,0.925,14,0.962,15,4.214,16,0.962,17,4.214,18,0.912,19,0.554,20,3.307,21,0.302,22,0.05,23,0.228,24,0.228,25,0.302,26,1.47,27,4.214,28,4.214,29,4.884,30,4.884,31,4.214,32,4.884,33,4.884,34,4.884,35,4.884,36,4.214,37,1.114,38,0.755,39,0.485,40,0.755,41,0.464,42,0.755,43,0.464,44,0.755,45,0.464,46,0.755,47,0.464,48,0.554,49,0.755,50,0.464,51,0.755,52,0.464,53,0.755,54,0.464,55,0.755,56,0.464,57,0.755,58,0.464,59,0.755,60,0.755,61,0.464,62,0.755,63,0.755,64,0.755,65,0.755,66,0.038,67,0.038]],["title/components/AppComponent.html",[0,0.136,41,0.378]],["body/components/AppComponent.html",[0,0.255,1,0.507,2,0.33,3,0.25,4,0.825,5,0.25,11,0.825,12,1.266,13,0.921,14,1.016,16,1.016,21,0.33,22,0.051,23,0.25,24,0.25,25,0.33,37,1.15,38,0.825,39,0.513,40,0.825,41,0.708,42,0.825,43,0.507,44,0.825,45,0.507,46,0.825,47,0.507,48,0.605,49,0.825,50,0.507,51,0.825,52,0.507,53,0.825,54,0.507,55,0.825,56,0.507,57,0.825,58,0.507,59,0.825,60,0.825,61,0.507,62,0.825,63,0.825,64,0.825,65,0.825,66,0.041,67,0.041,68,3.614,69,2.6,70,4.455,71,4.455]],["title/components/AppDeckComponent.html",[0,0.136,43,0.378]],["body/components/AppDeckComponent.html",[0,0.206,1,0.3,2,0.195,3,0.148,4,0.488,5,0.216,6,1.741,9,1.071,10,1.11,11,0.488,12,1.17,13,0.872,14,0.713,16,0.713,18,0.42,19,0.841,21,0.395,22,0.052,23,0.148,24,0.148,25,0.195,26,0.95,37,0.927,38,0.488,39,0.467,40,0.488,41,0.3,42,0.488,43,0.57,44,0.488,45,0.3,46,0.488,47,0.3,48,0.358,49,0.488,50,0.3,51,0.488,52,0.3,53,0.488,54,0.3,55,0.488,56,0.3,57,0.488,58,0.3,59,0.488,60,0.488,61,0.3,62,0.488,63,0.488,64,0.488,65,0.488,66,0.029,67,0.029,72,4.096,73,2.137,74,3.692,75,2.978,76,1.388,77,3.124,78,3.124,79,0.42,80,0.713,81,2.721,82,2.635,83,2.315,84,3.855,85,2.062,86,0.713,87,2.519,88,3.276,89,4.062,90,2.758,91,3.692,92,1.823,93,2.072,94,3.124,95,0.713,96,1.03,97,0.713,98,1.805,99,2.137,100,3.124,101,2.137,102,0.927,103,1.03,104,2.137,105,2.137,106,2.137,107,0.939,108,0.939,109,2.137,110,2.137,111,1.11,112,2.137,113,2.137,114,1.247,115,1.247,116,1.451,117,2.519,118,1.085,119,1.723,120,1.723,121,1.586,122,1.723,123,1.451,124,1.823,125,1.247,126,1.451,127,2.137,128,3.276,129,2.137,130,2.137,131,1.219,132,2.137,133,2.137,134,2.137,135,1.247,136,2.137,137,3.692,138,2.137,139,3.692,140,2.137,141,1.723,142,2.137,143,2.137,144,2.137,145,2.137,146,2.137,147,2.137,148,2.137,149,2.137,150,2.137,151,2.137,152,2.137,153,3.124,154,1.723,155,2.137,156,2.137,157,2.978,158,2.137,159,2.137,160,1.723,161,1.723,162,2.137,163,2.137,164,2.137,165,2.519,166,3.124,167,3.124,168,3.124,169,3.124,170,3.124,171,5.079,172,1.585,173,1.805,174,3.276,175,3.276,176,2.519,177,2.121]],["title/components/AppLayoutComponent.html",[0,0.136,45,0.378]],["body/components/AppLayoutComponent.html",[0,0.253,1,0.493,2,0.321,3,0.243,4,0.802,5,0.243,6,1.501,10,1.057,11,0.802,12,1.262,13,0.932,14,0.999,16,0.999,18,0.938,19,0.589,21,0.321,22,0.051,23,0.243,24,0.243,25,0.321,37,1.139,38,0.802,39,0.504,40,0.802,41,0.493,42,0.802,43,0.493,44,0.802,45,0.701,46,0.802,47,0.493,48,0.589,49,0.802,50,0.493,51,0.802,52,0.493,53,0.802,54,0.493,55,0.802,56,0.493,57,0.802,58,0.493,59,0.802,60,0.802,61,0.493,62,0.802,63,0.802,64,0.802,65,0.802,66,0.04,67,0.04,178,3.532,179,3.516,180,4.38,181,4.38,182,4.38,183,3.516]],["title/modules/AppModule.html",[184,1.05,185,1.571]],["body/modules/AppModule.html",[1,0.694,2,0.26,3,0.196,5,0.196,7,2.29,13,0.475,21,0.5,22,0.052,23,0.196,24,0.264,25,0.26,41,0.75,43,0.694,45,0.694,47,0.694,48,0.639,50,0.694,52,0.694,54,0.694,56,0.694,58,0.694,61,0.694,66,0.035,67,0.035,72,2.29,178,2.29,184,1.488,185,3.271,186,1.658,187,2.29,188,3.473,189,3.473,190,2.226,191,2.29,192,2.29,193,2.29,194,2.29,195,2.511,196,3.076,197,2.29,198,1.928,199,2.84,200,3.814,201,2.29,202,1.928,203,3.076,204,2.84,205,2.84,206,5.136,207,2.84,208,2.84,209,2.29,210,2.84,211,2.84,212,2.29,213,3.814,214,3.076,215,1.442,216,2.84,217,2.29,218,2.29,219,2.84,220,2.29,221,2.84,222,2.29,223,2.84,224,2.29,225,2.84,226,2.84]],["title/components/AppMusicListComponent.html",[0,0.136,47,0.378]],["body/components/AppMusicListComponent.html",[0,0.216,1,0.334,2,0.217,3,0.164,4,0.542,5,0.34,6,1.715,9,1.156,10,0.714,11,0.542,12,1.192,13,0.887,14,0.77,16,0.77,18,0.467,19,0.823,21,0.358,22,0.052,23,0.164,24,0.164,25,0.217,37,0.974,38,0.542,39,0.518,40,0.542,41,0.334,42,0.542,43,0.334,44,0.542,45,0.334,46,0.542,47,0.599,48,0.927,49,0.542,50,0.334,51,0.542,52,0.334,53,0.542,54,0.334,55,0.542,56,0.334,57,0.542,58,0.334,59,0.542,60,0.542,61,0.334,62,0.542,63,0.542,64,0.542,65,0.542,66,0.031,67,0.039,75,3.161,76,1.056,79,0.467,80,0.77,82,2.732,85,2.54,86,0.77,92,1.968,93,2.139,95,0.894,96,1.028,97,0.894,102,1.028,103,0.974,111,1.014,114,1.387,115,1.387,117,2.72,118,1.206,121,1.206,122,1.916,125,1.387,131,1.316,154,1.916,160,1.916,161,1.916,165,2.72,222,4.035,227,2.376,228,3.372,229,3.372,230,3.372,231,4.267,232,4.68,233,4.267,234,3.372,235,3.372,236,4.267,237,3.372,238,3.372,239,2.376,240,3.372,241,2.376,242,2.376,243,2.376,244,2.376,245,3.161,246,2.376,247,4.267,248,2.376,249,3.372,250,2.376,251,2.376,252,2.376,253,2.376,254,3.372,255,2.376,256,3.372,257,2.376,258,3.372,259,3.372,260,3.372,261,3.372,262,2.376,263,2.376,264,2.376,265,2.376,266,3.372,267,2.72,268,2.29,269,2.72,270,2.72,271,2.72,272,3.372]],["title/modules/AppRoutingModule.html",[184,1.05,195,1.366]],["body/modules/AppRoutingModule.html",[2,0.37,3,0.28,5,0.28,21,0.479,22,0.051,23,0.28,24,0.33,25,0.37,66,0.044,67,0.044,131,1.58,184,1.58,195,2.422,203,3.847,214,3.847,215,2.055,273,4.049,274,4.049,275,5.072,276,4.771,277,3.265,278,4.049]],["title/components/AppSearchComponent.html",[0,0.136,50,0.378]],["body/components/AppSearchComponent.html",[0,0.228,1,0.377,2,0.246,3,0.186,4,0.613,5,0.326,6,1.615,9,1.259,10,1.258,11,0.613,12,1.216,13,0.902,14,0.838,16,0.838,18,0.528,19,0.753,21,0.336,22,0.051,23,0.186,24,0.186,25,0.246,26,1.194,37,1.027,38,0.613,39,0.542,40,0.613,41,0.377,42,0.613,43,0.377,44,0.613,45,0.377,46,0.613,47,0.377,48,0.45,49,0.613,50,0.632,51,0.613,52,0.377,53,0.613,54,0.377,55,0.613,56,0.377,57,0.613,58,0.377,59,0.613,60,0.613,61,0.377,62,0.613,63,0.613,64,0.613,65,0.613,66,0.052,67,0.034,79,0.528,80,0.838,82,2.84,86,0.838,92,2.145,93,2.213,95,0.955,96,1.027,97,0.955,102,0.838,103,0.838,111,0.808,114,1.569,115,1.569,125,1.569,172,2.092,173,2.47,218,3.8,269,2.963,279,2.687,280,3.674,281,3.674,282,3.674,283,2.963,284,3.674,285,3.674,286,2.687,287,2.687,288,2.963,289,3.376,290,2.687,291,2.687,292,3.674]],["title/components/AppSettingsComponent.html",[0,0.136,52,0.378]],["body/components/AppSettingsComponent.html",[0,0.217,1,0.336,2,0.219,3,0.166,4,0.899,5,0.166,6,1.689,9,1.163,10,1.184,11,0.547,12,1.194,13,0.888,14,0.774,16,0.774,18,0.471,19,0.808,21,0.36,22,0.052,23,0.166,24,0.166,25,0.219,26,1.065,37,0.977,38,0.547,39,0.493,40,0.547,41,0.336,42,0.547,43,0.336,44,0.547,45,0.336,46,0.547,47,0.336,48,0.401,49,0.547,50,0.336,51,0.547,52,0.601,53,0.547,54,0.336,55,0.547,56,0.336,57,0.547,58,0.336,59,0.547,60,0.547,61,0.336,62,0.547,63,0.547,64,0.547,65,0.547,66,0.031,67,0.031,76,1.508,79,0.471,80,0.774,81,2.877,83,1.903,86,0.774,95,0.774,96,0.977,97,0.774,98,1.508,102,1.101,103,0.547,107,1.184,108,1.184,116,1.627,121,1.217,124,2.299,177,2.304,224,3.975,293,2.397,294,2.736,295,3.393,296,3.393,297,4.283,298,3.454,299,4.693,300,4.283,301,2.736,302,1.933,303,2.5,304,3.939,305,2.397,306,2.736,307,3.393,308,4.693,309,2.397,310,2.397,311,2.174,312,2.397,313,2.397,314,2.397,315,2.397,316,2.397,317,1.933,318,3.393,319,2.397,320,3.393,321,2.397,322,3.939,323,3.939,324,3.939,325,3.939,326,3.939,327,3.939,328,3.939,329,3.176,330,3.939,331,3.939,332,2.397,333,3.393,334,2.397,335,2.397,336,2.397,337,2.397,338,2.397,339,3.393,340,3.393,341,3.393,342,3.393,343,3.393,344,3.393,345,3.393]],["title/components/AppTabsComponent.html",[0,0.136,54,0.378]],["body/components/AppTabsComponent.html",[0,0.226,1,0.369,2,0.24,3,0.182,4,0.6,5,0.286,6,1.775,11,0.6,12,1.212,13,0.9,14,0.826,16,0.826,18,0.517,19,0.857,21,0.331,22,0.052,23,0.182,24,0.182,25,0.24,37,1.017,38,0.6,39,0.556,40,0.6,41,0.369,42,0.6,43,0.369,44,0.6,45,0.369,46,0.6,47,0.369,48,0.783,49,0.6,50,0.369,51,0.6,52,0.369,53,0.6,54,0.626,55,0.6,56,0.369,57,0.6,58,0.369,59,0.6,60,0.6,61,0.369,62,0.6,63,0.6,64,0.6,65,0.6,66,0.033,67,0.033,79,0.517,80,0.826,82,2.821,85,1.838,86,0.826,92,2.113,93,2.2,95,1.017,96,1.017,97,1.017,102,0.944,103,0.944,107,1.088,108,1.088,111,0.79,114,1.535,115,1.535,123,3.281,124,2.603,125,1.535,135,1.535,157,2.12,220,4.177,245,2.919,270,3.596,271,2.919,283,2.919,288,2.919,289,3.338,294,2.919,346,2.629,347,3.62,348,3.62,349,3.62,350,3.62,351,3.62,352,3.338,353,4.139,354,3.62,355,2.629,356,2.629,357,2.12,358,2.81,359,2.629,360,2.629,361,3.62,362,2.629,363,2.629,364,3.62,365,2.629,366,2.629,367,2.629,368,2.629,369,3.62,370,3.62,371,2.629,372,4.139,373,2.629,374,2.629,375,2.629,376,2.629,377,3.62]],["title/components/AppVolumeComponent.html",[0,0.136,56,0.378]],["body/components/AppVolumeComponent.html",[0,0.214,1,0.329,2,0.214,3,0.162,4,0.534,5,0.162,6,1.811,9,1.144,10,1.169,11,0.534,12,1.189,13,0.885,14,0.762,16,0.762,18,0.46,19,0.879,21,0.305,22,0.052,23,0.162,24,0.162,25,0.214,37,0.967,38,0.534,39,0.516,40,0.534,41,0.329,42,0.534,43,0.329,44,0.534,45,0.329,46,0.534,47,0.329,48,0.392,49,0.534,50,0.329,51,0.534,52,0.329,53,0.534,54,0.329,55,0.534,56,0.595,57,0.534,58,0.329,59,0.534,60,0.534,61,0.329,62,0.534,63,0.534,64,0.534,65,0.534,66,0.03,67,0.03,76,1.728,79,0.46,80,0.762,83,2.316,86,0.762,95,0.887,96,1.168,97,0.887,98,2.384,102,1.022,103,0.762,107,1.499,108,1.554,111,1.605,116,1.59,126,1.59,172,1.302,176,1.889,209,4.262,378,2.342,379,2.692,380,3.338,381,3.338,382,4.239,383,4.239,384,4.239,385,4.239,386,4.239,387,4.239,388,4.239,389,4.239,390,4.239,391,3.338,392,3.338,393,3.889,394,2.692,395,2.342,396,2.342,397,2.342,398,3.338,399,2.342,400,2.342,401,2.342,402,2.342,403,2.342,404,2.342,405,2.342,406,2.342,407,2.342,408,3.756,409,2.342,410,2.342,411,2.342,412,3.338,413,3.889]],["title/injectables/EffectsService.html",[303,1.571,414,1.05]],["body/injectables/EffectsService.html",[2,0.208,3,0.157,5,0.157,18,0.751,19,0.7,21,0.298,22,0.052,23,0.157,24,0.157,25,0.208,39,0.597,66,0.03,67,0.03,69,1.326,79,0.446,80,0.745,81,2.584,86,0.745,95,0.518,96,1.183,97,0.518,102,0.872,103,0.518,107,0.683,108,1.149,111,1.606,123,3.489,124,3,172,2.127,175,3.718,303,1.906,414,1.491,415,2.271,416,3.265,417,4.18,418,2.271,419,3.265,420,2.271,421,2.271,422,5.139,423,3.265,424,2.633,425,3.265,426,3.489,427,4.18,428,4.18,429,4.18,430,4.18,431,4.61,432,4.61,433,4.61,434,4.61,435,3.265,436,3.265,437,3.265,438,4.61,439,4.86,440,4.18,441,4.61,442,4.18,443,3.265,444,2.633,445,3.265,446,3.265,447,4.18,448,3.265,449,3.265,450,3.265,451,3.265,452,3.265,453,3.265,454,3.265,455,3.265,456,3.265,457,3.265,458,3.265,459,3.265,460,3.265,461,3.265,462,3.265,463,3.265,464,3.265,465,3.265,466,3.265,467,3.265,468,2.271,469,1.832,470,1.542,471,1.542,472,2.271,473,2.271]],["title/injectables/MusicLoaderService.html",[93,1.196,414,1.05]],["body/injectables/MusicLoaderService.html",[2,0.249,3,0.188,5,0.36,18,0.536,19,0.881,21,0.385,22,0.052,23,0.188,24,0.188,25,0.249,39,0.521,48,0.852,66,0.034,67,0.034,69,1.591,76,1.211,79,0.536,80,0.846,83,2.374,85,2.48,86,0.846,93,1.648,95,1.033,96,1.141,97,1.033,102,0.962,103,0.962,107,1.468,108,1.468,118,1.383,126,1.85,131,1.063,141,2.198,172,1.063,268,2.518,311,2.298,394,2.991,414,1.645,471,1.85,474,5.306,475,2.725,476,3.65,477,5.087,478,4.526,479,3.709,480,3.709,481,3.709,482,3.709,483,2.725,484,3.709,485,2.725,486,2.991,487,2.725,488,3.394,489,4.031,490,2.725,491,2.725,492,2.991,493,2.991,494,2.725,495,2.725,496,3.709,497,2.725,498,2.725,499,2.725,500,2.725,501,2.725,502,2.725,503,2.725,504,2.725,505,2.725,506,2.725,507,2.725,508,2.725,509,3.709,510,2.725,511,2.725,512,3.709,513,2.725]],["title/injectables/PlayerService.html",[83,1.196,414,1.05]],["body/injectables/PlayerService.html",[2,0.184,3,0.139,5,0.139,18,0.395,19,0.898,21,0.36,22,0.052,23,0.139,24,0.139,25,0.184,39,0.562,66,0.027,67,0.027,69,1.173,76,2.307,79,0.395,80,0.681,81,3.01,83,1.327,85,1.515,86,0.681,87,2.873,88,2.407,95,1.114,96,1.145,97,1.114,98,1.752,102,1.167,103,1.095,107,1.468,108,1.468,111,0.604,118,1.02,119,2.407,131,1.723,172,1.165,173,1.327,177,2.027,268,2.027,298,3.18,302,1.62,303,2.302,306,2.407,311,2.783,317,1.62,329,1.62,358,2.027,379,2.407,414,1.39,424,3.18,469,2.407,470,1.364,471,1.364,476,3.18,486,1.62,488,3.258,489,3.87,492,2.407,493,2.407,514,2.009,515,3.943,516,3.943,517,3.943,518,4.415,519,3.943,520,2.985,521,3.562,522,2.985,523,2.985,524,2.985,525,2.985,526,2.985,527,2.985,528,2.985,529,2.009,530,2.009,531,2.009,532,2.009,533,2.009,534,2.009,535,2.009,536,2.985,537,2.009,538,2.009,539,2.009,540,2.009,541,2.009,542,2.985,543,2.009,544,2.985,545,2.009,546,2.009,547,2.009,548,2.009,549,2.009,550,2.009,551,2.009,552,2.009,553,2.009,554,2.985,555,2.985,556,2.009,557,2.009,558,2.009,559,2.009,560,2.009,561,2.009,562,2.985,563,2.985,564,2.985,565,2.985,566,2.985,567,2.985,568,2.985,569,2.985,570,2.009,571,2.009,572,2.009,573,2.009,574,2.009,575,2.009,576,2.985,577,2.985,578,3.562,579,2.009,580,2.985,581,2.009,582,2.009,583,2.009,584,2.009,585,2.009]],["title/components/RouletteControllerComponent.html",[0,0.136,58,0.378]],["body/components/RouletteControllerComponent.html",[0,0.206,1,0.301,2,0.196,3,0.148,4,0.489,5,0.148,9,1.073,10,1.112,11,0.489,12,1.189,13,0.817,14,0.715,16,0.715,18,0.727,19,0.851,21,0.286,22,0.052,23,0.148,24,0.216,25,0.196,26,0.953,37,0.928,38,0.489,39,0.498,40,0.489,41,0.301,42,0.489,43,0.301,44,0.489,45,0.301,46,0.489,47,0.301,48,0.359,49,0.489,50,0.301,51,0.489,52,0.301,53,0.489,54,0.301,55,0.489,56,0.301,57,0.489,58,0.607,59,1.113,60,0.489,61,0.301,62,0.928,63,0.844,64,0.489,65,0.489,66,0.029,67,0.029,79,0.421,80,0.715,84,3.858,86,0.715,90,2.762,95,0.844,96,1.065,97,0.844,98,1.923,102,1.031,103,1.065,107,1.112,108,1.49,111,1.112,121,1.878,128,2.525,131,1.763,135,2.638,173,0.953,190,2.159,215,1.088,217,4.138,311,1.088,352,2.983,357,1.729,358,2.126,408,1.729,426,2.512,586,5.132,587,1.729,588,2.983,589,2.983,590,2.525,591,2.525,592,4.068,593,4.068,594,2.525,595,2.525,596,4.068,597,2.525,598,3.131,599,1.729,600,2.144,601,2.144,602,3.131,603,2.144,604,2.525,605,2.144,606,3.281,607,2.525,608,2.144,609,2.144,610,2.144,611,2.525,612,2.144,613,1.729,614,1.729,615,1.729,616,2.144,617,2.525,618,2.525,619,2.525,620,2.983,621,1.729,622,1.729,623,1.729,624,1.729,625,1.729,626,2.144,627,2.144,628,3.131,629,2.144,630,1.729,631,2.144,632,1.729,633,3.699,634,3.131,635,3.131,636,1.729,637,1.729,638,3.131,639,3.131,640,2.144,641,2.144,642,2.144,643,2.144,644,3.699,645,2.525,646,1.729,647,1.729,648,1.729,649,2.144,650,2.144,651,2.144,652,4.327,653,2.144,654,2.144,655,2.144,656,2.144,657,2.144,658,2.144,659,2.144,660,2.144,661,2.144,662,2.144,663,2.144,664,2.144]],["title/components/SliderControllerComponent.html",[0,0.136,61,0.378]],["body/components/SliderControllerComponent.html",[0,0.152,1,0.173,2,0.113,3,0.085,4,0.282,5,0.085,9,0.697,10,0.781,11,0.282,12,1.031,13,0.689,14,0.464,16,0.464,19,0.832,21,0.186,22,0.052,23,0.085,24,0.141,25,0.113,26,0.548,37,0.688,38,0.282,39,0.384,40,0.282,41,0.173,42,0.282,43,0.173,44,0.282,45,0.173,46,0.282,47,0.173,48,0.207,49,0.282,50,0.173,51,0.282,52,0.173,53,0.282,54,0.173,55,0.282,56,0.173,57,0.282,58,0.173,59,0.282,60,0.282,61,0.468,62,0.991,63,0.593,64,0.282,65,0.282,66,0.019,67,0.019,79,0.243,80,0.464,86,0.464,90,2.046,95,0.593,96,0.938,97,0.593,98,1.339,102,1.175,103,0.819,107,0.612,108,1.079,111,1.141,121,1.033,131,2.16,135,0.72,172,1.4,173,1.93,190,1.516,212,4.032,215,0.626,311,2.252,426,1.763,444,2.43,587,0.995,588,2.095,589,2.095,590,1.641,591,1.641,594,1.641,595,1.641,597,1.641,599,0.995,604,1.641,606,2.43,607,1.641,611,1.641,613,0.995,614,0.995,615,0.995,617,1.641,618,1.641,619,1.641,620,2.095,621,0.995,622,0.995,623,0.995,624,0.995,625,0.995,630,3.577,632,2.894,636,4.353,637,0.995,645,1.641,646,0.995,647,0.995,648,0.995,665,5,666,4.236,667,4.656,668,3.014,669,3.014,670,3.014,671,2.035,672,2.597,673,2.597,674,2.597,675,2.597,676,2.597,677,2.597,678,2.597,679,2.597,680,2.597,681,2.597,682,2.597,683,2.597,684,1.234,685,1.234,686,1.234,687,1.234,688,2.597,689,3.014,690,1.234,691,2.035,692,1.234,693,1.234,694,1.234,695,1.234,696,1.234,697,1.234,698,1.234,699,1.234,700,1.234,701,1.234,702,1.234,703,1.234,704,1.234,705,1.234,706,1.234,707,1.234,708,1.234,709,1.234,710,1.234,711,1.234,712,1.234,713,1.234,714,1.234,715,1.234,716,1.234,717,1.234,718,1.234,719,4.436,720,5,721,4.591,722,4.518,723,4.518,724,2.035,725,4.436,726,3.796,727,4.815,728,4.656,729,4.858,730,3.968,731,3.968,732,4.815,733,4.436,734,3.014,735,3.968,736,1.234,737,1.234,738,1.234,739,1.234,740,1.234,741,1.234]],["title/dependencies.html",[186,1.89,742,2.245]],["body/dependencies.html",[22,0.052,23,0.275,66,0.043,67,0.043,118,2.022,120,3.212,186,2.325,201,3.81,202,3.208,215,2.022,277,3.212,470,2.704,743,3.983,744,5.525,745,3.983,746,3.983,747,3.983,748,3.983,749,3.983,750,3.983,751,3.983,752,3.983,753,3.983,754,3.983,755,3.983,756,3.983]],["title/index.html",[79,0.441,267,1.811,757,2.245]],["body/index.html",[0,0.241,3,0.242,5,0.242,13,0.797,22,0.04,39,0.402,66,0.04,67,0.04,198,2.374,301,2.82,488,2.374,758,3.497,759,4.365,760,5.129,761,4.759,762,4.759,763,3.497,764,3.497,765,3.497,766,4.365,767,5.306,768,5.23,769,3.497,770,3.497,771,3.497,772,3.497,773,3.497,774,3.497,775,3.497,776,3.497,777,4.759,778,3.497,779,5.129,780,3.497,781,3.497,782,3.497,783,3.497,784,3.497,785,3.497,786,4.365,787,4.365,788,5.129,789,3.497,790,4.365,791,4.365,792,3.497,793,4.983,794,3.497,795,3.497,796,3.497,797,4.759,798,3.497,799,4.983,800,3.497,801,3.497,802,4.365,803,3.497,804,3.497,805,3.497,806,3.497,807,4.365,808,4.365,809,3.497,810,4.365,811,3.497,812,3.497,813,3.497]],["title/modules.html",[184,1.435]],["body/modules.html",[22,0.045,66,0.045,67,0.045,184,1.681,185,2.515,195,2.187,202,2.925,814,4.308,815,4.308,816,4.946,817,4.308,818,4.308]],["title/overview.html",[819,2.966]],["body/overview.html",[0,0.181,1,0.675,22,0.051,24,0.247,41,0.748,43,0.675,45,0.675,47,0.675,50,0.675,52,0.675,54,0.675,56,0.675,58,0.675,61,0.675,66,0.04,67,0.04,173,1.591,174,2.887,184,1.728,185,3.313,186,2.09,187,2.887,188,2.887,189,2.887,190,2.09,191,2.887,192,2.887,193,2.887,194,2.887,195,2.442,196,3.572,197,2.887,198,2.431,414,1.397,819,2.887,820,3.581]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":111,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["0.01",{"_index":450,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.065",{"_index":428,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.1",{"_index":446,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.2",{"_index":459,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.3",{"_index":457,"title":{},"body":{"injectables/EffectsService.html":{}}}],["0.5",{"_index":642,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["0.8.26",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":172,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/SliderControllerComponent.html":{}}}],["1.0.2",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":449,"title":{},"body":{"injectables/EffectsService.html":{}}}],["1.25",{"_index":737,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["10",{"_index":158,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["100",{"_index":408,"title":{},"body":{"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["11",{"_index":820,"title":{},"body":{"overview.html":{}}}],["135",{"_index":641,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["1500",{"_index":466,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16",{"_index":444,"title":{},"body":{"injectables/EffectsService.html":{},"components/SliderControllerComponent.html":{}}}],["16384",{"_index":434,"title":{},"body":{"injectables/EffectsService.html":{}}}],["16x",{"_index":169,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["180",{"_index":462,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2",{"_index":173,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["2.1.1",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":724,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["2.5.4",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["256",{"_index":433,"title":{},"body":{"injectables/EffectsService.html":{}}}],["2x",{"_index":166,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["3",{"_index":174,"title":{},"body":{"components/AppDeckComponent.html":{},"overview.html":{}}}],["3.0",{"_index":35,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["3.5",{"_index":430,"title":{},"body":{"injectables/EffectsService.html":{}}}],["30",{"_index":461,"title":{},"body":{"injectables/EffectsService.html":{}}}],["32x",{"_index":170,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["360",{"_index":159,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["4",{"_index":175,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/EffectsService.html":{}}}],["4096",{"_index":432,"title":{},"body":{"injectables/EffectsService.html":{}}}],["4x",{"_index":167,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["5",{"_index":176,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppVolumeComponent.html":{}}}],["50",{"_index":129,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["500",{"_index":465,"title":{},"body":{"injectables/EffectsService.html":{}}}],["6",{"_index":177,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["6.0.0",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":764,"title":{},"body":{"index.html":{}}}],["700",{"_index":464,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8",{"_index":451,"title":{},"body":{"injectables/EffectsService.html":{}}}],["8x",{"_index":168,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_",{"_index":625,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["_contain",{"_index":664,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["_wave",{"_index":146,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_wave').offsetheight",{"_index":140,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["a.act",{"_index":329,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["a.map(b",{"_index":337,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["about'},{'nam",{"_index":40,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["about.compon",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["about.component.css",{"_index":15,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.t",{"_index":8,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.ts:8",{"_index":20,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about/app",{"_index":7,"title":{},"body":{"components/AppAboutComponent.html":{},"modules/AppModule.html":{}}}],["access",{"_index":803,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":671,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["activ",{"_index":123,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["activateeffect",{"_index":520,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activateeffect(deck",{"_index":528,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeeffect",{"_index":515,"title":{},"body":{"injectables/PlayerService.html":{}}}],["actual_compon",{"_index":65,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["addeffect",{"_index":416,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addeffect(effect",{"_index":419,"title":{},"body":{"injectables/EffectsService.html":{}}}],["addsong",{"_index":479,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["addsong(song",{"_index":482,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["adjusteqvalu",{"_index":391,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["adjusteqvalue(valu",{"_index":396,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["afterviewinit",{"_index":74,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["angular",{"_index":761,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["appaboutcompon",{"_index":1,"title":{"components/AppAboutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appcompon",{"_index":41,"title":{"components/AppComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appdeckcompon",{"_index":43,"title":{"components/AppDeckComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["applayoutcompon",{"_index":45,"title":{"components/AppLayoutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["applyeffect",{"_index":87,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["applyeffect(i",{"_index":100,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["appmodul",{"_index":185,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmusiclistcompon",{"_index":47,"title":{"components/AppMusicListComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["approutingmodul",{"_index":195,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsearchcompon",{"_index":50,"title":{"components/AppSearchComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appsettingscompon",{"_index":52,"title":{"components/AppSettingsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["apptabscompon",{"_index":54,"title":{"components/AppTabsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appvolumecompon",{"_index":56,"title":{"components/AppVolumeComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["argument",{"_index":357,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["artifact",{"_index":780,"title":{},"body":{"index.html":{}}}],["artist",{"_index":266,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["attribut",{"_index":28,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["automat",{"_index":773,"title":{},"body":{"index.html":{}}}],["avail",{"_index":818,"title":{},"body":{"modules.html":{}}}],["availableeffect",{"_index":297,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["availableeffect.nam",{"_index":345,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["band.f",{"_index":568,"title":{},"body":{"injectables/PlayerService.html":{}}}],["band.typ",{"_index":563,"title":{},"body":{"injectables/PlayerService.html":{}}}],["band.valu",{"_index":565,"title":{},"body":{"injectables/PlayerService.html":{}}}],["basemodulationfrequ",{"_index":463,"title":{},"body":{"injectables/EffectsService.html":{}}}],["basic",{"_index":422,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bass0",{"_index":382,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["bass1",{"_index":383,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["bigval",{"_index":728,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["bit",{"_index":443,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bitcrush",{"_index":442,"title":{},"body":{"injectables/EffectsService.html":{}}}],["bootstrap",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["break",{"_index":659,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["brows",{"_index":816,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["buffers",{"_index":431,"title":{},"body":{"injectables/EffectsService.html":{}}}],["build",{"_index":779,"title":{},"body":{"index.html":{}}}],["bypass",{"_index":467,"title":{},"body":{"injectables/EffectsService.html":{}}}],["c.map(a",{"_index":326,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["callback",{"_index":536,"title":{},"body":{"injectables/PlayerService.html":{}}}],["cc",{"_index":34,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["chang",{"_index":301,"title":{},"body":{"components/AppSettingsComponent.html":{},"index.html":{}}}],["change(i",{"_index":307,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["changevolum",{"_index":392,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["changevolume(deck",{"_index":398,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["check",{"_index":800,"title":{},"body":{"index.html":{}}}],["choos",{"_index":292,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["class",{"_index":25,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["cli",{"_index":762,"title":{},"body":{"index.html":{}}}],["closest",{"_index":651,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["closest(el",{"_index":663,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["cluster_appmodul",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":775,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":804,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":38,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["components/app",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["components/roulett",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["components/slid",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["comput",{"_index":272,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["config",{"_index":426,"title":{},"body":{"injectables/EffectsService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["configslid",{"_index":592,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["console.log('error",{"_index":510,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["const",{"_index":131,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{}}}],["constructor(effectserv",{"_index":302,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(musicservic",{"_index":92,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["constructor(playerservic",{"_index":394,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["constructor(priv",{"_index":317,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["contain",{"_index":144,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["content",{"_index":27,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["control",{"_index":63,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller'},{'nam",{"_index":60,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.compon",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["controller.component.css",{"_index":590,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.html",{"_index":591,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.t",{"_index":587,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:104",{"_index":705,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:123",{"_index":707,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:146",{"_index":709,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:158",{"_index":711,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:173",{"_index":713,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:185",{"_index":715,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:196",{"_index":717,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:20",{"_index":600,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:21",{"_index":614,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:216",{"_index":686,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:22",{"_index":616,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:221",{"_index":687,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:226",{"_index":684,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:229",{"_index":685,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":613,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:24",{"_index":615,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:25",{"_index":692,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":599,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:27",{"_index":693,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:29",{"_index":695,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:39",{"_index":697,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:44",{"_index":609,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:49",{"_index":610,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:53",{"_index":699,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:54",{"_index":612,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:59",{"_index":605,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:62",{"_index":608,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:66",{"_index":603,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:70",{"_index":701,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:89",{"_index":703,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller/roulett",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{}}}],["controller/slid",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/SliderControllerComponent.html":{}}}],["controlvalueaccessor",{"_index":588,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["core",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["cue",{"_index":171,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["custom_text_input_control_value_accessor",{"_index":589,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["cutoff",{"_index":427,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dark",{"_index":343,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["decent",{"_index":452,"title":{},"body":{"injectables/EffectsService.html":{}}}],["deck",{"_index":76,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["deck'},{'nam",{"_index":44,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deck.compon",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["deck.component.css",{"_index":77,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.html",{"_index":78,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.t",{"_index":73,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:14",{"_index":99,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:16",{"_index":109,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:17",{"_index":110,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:18",{"_index":112,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:20",{"_index":113,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:21",{"_index":94,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:56",{"_index":106,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:61",{"_index":105,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:68",{"_index":104,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:72",{"_index":101,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck/app",{"_index":72,"title":{},"body":{"components/AppDeckComponent.html":{},"modules/AppModule.html":{}}}],["deck_",{"_index":145,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deckload",{"_index":476,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["decknum",{"_index":516,"title":{},"body":{"injectables/PlayerService.html":{}}}],["decknumb",{"_index":91,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["decksong",{"_index":477,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["declar",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":690,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["default",{"_index":107,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["defin",{"_index":19,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deletesong",{"_index":480,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["deletesong(song",{"_index":484,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["depend",{"_index":186,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":456,"title":{},"body":{"injectables/EffectsService.html":{}}}],["dev",{"_index":770,"title":{},"body":{"index.html":{}}}],["develop",{"_index":765,"title":{},"body":{"index.html":{}}}],["direct",{"_index":64,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":778,"title":{},"body":{"index.html":{}}}],["directori",{"_index":783,"title":{},"body":{"index.html":{}}}],["dist",{"_index":782,"title":{},"body":{"index.html":{}}}],["document",{"_index":802,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('deck_",{"_index":138,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["document:click",{"_index":598,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["document:click(ev",{"_index":601,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["drag",{"_index":270,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["drop",{"_index":377,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drope",{"_index":350,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["droped(ev",{"_index":361,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["dynam",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":794,"title":{},"body":{"index.html":{}}}],["eff",{"_index":132,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["eff.filter(_",{"_index":134,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["effect",{"_index":81,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["effectload",{"_index":517,"title":{},"body":{"injectables/PlayerService.html":{}}}],["effects.servic",{"_index":560,"title":{},"body":{"injectables/PlayerService.html":{}}}],["effectserv",{"_index":306,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["effectsnum",{"_index":298,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["effectsservic",{"_index":303,"title":{"injectables/EffectsService.html":{}},"body":{"components/AppSettingsComponent.html":{},"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["el",{"_index":652,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.match",{"_index":654,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.mozmatchesselector",{"_index":656,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.msmatchesselector",{"_index":657,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.parentel",{"_index":660,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.webkitmatchesselector",{"_index":655,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["element",{"_index":662,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["elementref",{"_index":689,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["end",{"_index":793,"title":{},"body":{"index.html":{}}}],["english",{"_index":341,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["eq",{"_index":518,"title":{},"body":{"injectables/PlayerService.html":{}}}],["eqeffect",{"_index":519,"title":{},"body":{"injectables/PlayerService.html":{}}}],["equal",{"_index":521,"title":{},"body":{"injectables/PlayerService.html":{}}}],["error",{"_index":509,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["event",{"_index":358,"title":{},"body":{"components/AppTabsComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{}}}],["event.preventdefault",{"_index":369,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.stoppropag",{"_index":370,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.target",{"_index":661,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["execut",{"_index":790,"title":{},"body":{"index.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["fals",{"_index":124,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"injectables/EffectsService.html":{}}}],["feedback",{"_index":458,"title":{},"body":{"injectables/EffectsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["filechangeev",{"_index":282,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filechangeevent(fileinput",{"_index":285,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["fileinput",{"_index":287,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filelist",{"_index":289,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["fileread",{"_index":503,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["fill",{"_index":637,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fillheight",{"_index":677,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillleft",{"_index":679,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filloffset",{"_index":735,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillsiz",{"_index":666,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filltop",{"_index":678,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillwidth",{"_index":676,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filter",{"_index":424,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["filter.frequency.valu",{"_index":567,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filter.gain.valu",{"_index":564,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filter.q.valu",{"_index":566,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filter.typ",{"_index":562,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filter0",{"_index":572,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filter1",{"_index":569,"title":{},"body":{"injectables/PlayerService.html":{}}}],["finish",{"_index":152,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["flag",{"_index":785,"title":{},"body":{"index.html":{}}}],["fn",{"_index":606,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fold",{"_index":593,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["formsmodul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["forwardref",{"_index":617,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["further",{"_index":796,"title":{},"body":{"index.html":{}}}],["gener",{"_index":760,"title":{},"body":{"index.html":{}}}],["get",{"_index":757,"title":{"index.html":{}},"body":{}}],["geteffect",{"_index":417,"title":{},"body":{"injectables/EffectsService.html":{}}}],["getfillheight",{"_index":704,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillleft",{"_index":708,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfilltop",{"_index":706,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillwidth",{"_index":702,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbheight",{"_index":696,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbleft",{"_index":700,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbtop",{"_index":698,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbwidth",{"_index":694,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackheight",{"_index":712,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackleft",{"_index":716,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettracktop",{"_index":714,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackwidth",{"_index":710,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["go",{"_index":799,"title":{},"body":{"index.html":{}}}],["graph",{"_index":817,"title":{},"body":{"modules.html":{}}}],["height",{"_index":137,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["help",{"_index":797,"title":{},"body":{"index.html":{}}}],["here",{"_index":271,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["higher",{"_index":454,"title":{},"body":{"injectables/EffectsService.html":{}}}],["hostlisten",{"_index":352,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["hostlistener('document:click",{"_index":649,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["hostlistener('window:dragleav",{"_index":375,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["hostlistener('window:dragov",{"_index":373,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["htmlelement",{"_index":688,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["http://localhost:4200",{"_index":772,"title":{},"body":{"index.html":{}}}],["http://virtualdj",{"_index":811,"title":{},"body":{"index.html":{}}}],["http://virtualdj.surge.sh",{"_index":813,"title":{},"body":{"index.html":{}}}],["https://clm2609.gitlab.io/tfg",{"_index":805,"title":{},"body":{"index.html":{}}}],["i+1",{"_index":344,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["icon",{"_index":29,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["id",{"_index":627,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ignor",{"_index":619,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["includes(lowsearch",{"_index":264,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["inject",{"_index":414,"title":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"overview.html":{}}}],["input",{"_index":90,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["isplay",{"_index":522,"title":{},"body":{"injectables/PlayerService.html":{}}}],["isplaying(deck",{"_index":532,"title":{},"body":{"injectables/PlayerService.html":{}}}],["j",{"_index":308,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["jest",{"_index":792,"title":{},"body":{"index.html":{}}}],["js",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":299,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(effect",{"_index":333,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.effect",{"_index":472,"title":{},"body":{"injectables/EffectsService.html":{}}}],["json.parse(json.stringify(this.playerserv.effects[0",{"_index":319,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.parse(json.stringify(this.playerserv.effects[1",{"_index":321,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.stringifi",{"_index":327,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.stringify(a",{"_index":330,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["json.stringify(b",{"_index":331,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["languag",{"_index":339,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["latest",{"_index":808,"title":{},"body":{"index.html":{}}}],["layout",{"_index":180,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":46,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["layout.compon",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["layout.component.css",{"_index":181,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.html",{"_index":182,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.t",{"_index":179,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:8",{"_index":183,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout/app",{"_index":178,"title":{},"body":{"components/AppLayoutComponent.html":{},"modules/AppModule.html":{}}}],["left",{"_index":438,"title":{},"body":{"injectables/EffectsService.html":{}}}],["legend",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["licens",{"_index":33,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["light",{"_index":342,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["list",{"_index":228,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list'},{'nam",{"_index":49,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["list.compon",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":229,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.html",{"_index":230,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.t",{"_index":227,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:11",{"_index":244,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:13",{"_index":243,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:14",{"_index":246,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:15",{"_index":237,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:30",{"_index":239,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:33",{"_index":241,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:36",{"_index":242,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list/app",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/AppMusicListComponent.html":{}}}],["load",{"_index":268,"title":{},"body":{"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["load(deck",{"_index":486,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["loader.servic",{"_index":115,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["loader.service.t",{"_index":475,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:10",{"_index":495,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:11",{"_index":490,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:12",{"_index":494,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:13",{"_index":491,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:14",{"_index":481,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:18",{"_index":487,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:32",{"_index":483,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:36",{"_index":485,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:8",{"_index":498,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:9",{"_index":497,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loadondeck",{"_index":234,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loadondeck(deck",{"_index":238,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loc",{"_index":733,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["lowsearch",{"_index":257,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["made",{"_index":30,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["mastermultipli",{"_index":412,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["match",{"_index":67,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchesselector",{"_index":653,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["matchesselector.call(el",{"_index":658,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["math.max(0",{"_index":736,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["max",{"_index":631,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["method",{"_index":86,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["mid0",{"_index":384,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["mid1",{"_index":385,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["min",{"_index":629,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["modul",{"_index":184,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moog",{"_index":423,"title":{},"body":{"injectables/EffectsService.html":{}}}],["moogfilt",{"_index":425,"title":{},"body":{"injectables/EffectsService.html":{}}}],["more",{"_index":798,"title":{},"body":{"index.html":{}}}],["mouseev",{"_index":602,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["multi",{"_index":622,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music",{"_index":48,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music.filter(mu",{"_index":262,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musiclist",{"_index":231,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicload",{"_index":478,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["musicloaderservic",{"_index":93,"title":{"injectables/MusicLoaderService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["musicservic",{"_index":82,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["musicservice.mus",{"_index":248,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicservice.music$.subscribe(a",{"_index":250,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicsubscript",{"_index":122,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["navig",{"_index":771,"title":{},"body":{"index.html":{}}}],["new",{"_index":488,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"index.html":{}}}],["ng",{"_index":768,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":618,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ngafterviewinit",{"_index":136,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["ngmodul",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":160,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["noop",{"_index":620,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["normalize('nfd",{"_index":259,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["normfreq",{"_index":445,"title":{},"body":{"injectables/EffectsService.html":{}}}],["npm",{"_index":789,"title":{},"body":{"index.html":{}}}],["null",{"_index":311,"title":{},"body":{"components/AppSettingsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["number",{"_index":98,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["on(deck",{"_index":535,"title":{},"body":{"injectables/PlayerService.html":{}}}],["onchangecallback",{"_index":624,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ondestroy",{"_index":75,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ondocumentclick(ev",{"_index":650,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ondragover(ev",{"_index":374,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ontouchedcallback",{"_index":623,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["option",{"_index":97,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["out",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":819,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":742,"title":{"dependencies.html":{}},"body":{}}],["pan",{"_index":440,"title":{},"body":{"injectables/EffectsService.html":{}}}],["panner",{"_index":439,"title":{},"body":{"injectables/EffectsService.html":{}}}],["paramet",{"_index":95,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["pc",{"_index":727,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["percent",{"_index":638,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["phaser",{"_index":447,"title":{},"body":{"injectables/EffectsService.html":{}}}],["ping",{"_index":435,"title":{},"body":{"injectables/EffectsService.html":{}}}],["pingpongdelay",{"_index":437,"title":{},"body":{"injectables/EffectsService.html":{}}}],["player.servic",{"_index":499,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["playerserv",{"_index":304,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["playerservic",{"_index":83,"title":{"injectables/PlayerService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["playpaus",{"_index":88,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["playpause(deck",{"_index":538,"title":{},"body":{"injectables/PlayerService.html":{}}}],["pong",{"_index":436,"title":{},"body":{"injectables/EffectsService.html":{}}}],["possibl",{"_index":455,"title":{},"body":{"injectables/EffectsService.html":{}}}],["privat",{"_index":121,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["prod",{"_index":784,"title":{},"body":{"index.html":{}}}],["product",{"_index":786,"title":{},"body":{"index.html":{}}}],["progresscolor",{"_index":149,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["project",{"_index":759,"title":{},"body":{"index.html":{}}}],["properti",{"_index":80,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["protractor",{"_index":795,"title":{},"body":{"index.html":{}}}],["provid",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["providedin",{"_index":471,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["purpl",{"_index":150,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["queri",{"_index":232,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["rang",{"_index":453,"title":{},"body":{"injectables/EffectsService.html":{}}}],["rate",{"_index":448,"title":{},"body":{"injectables/EffectsService.html":{}}}],["reader",{"_index":502,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onerror",{"_index":508,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onload",{"_index":505,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.readasdataurl(song",{"_index":504,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.result",{"_index":507,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["readm",{"_index":801,"title":{},"body":{"index.html":{}}}],["recievedfil",{"_index":283,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["recievedfiles(fil",{"_index":288,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["red",{"_index":148,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["registeronchang",{"_index":594,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registeronchange(fn",{"_index":604,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouch",{"_index":595,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouched(fn",{"_index":607,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["reload",{"_index":774,"title":{},"body":{"index.html":{}}}],["removesong",{"_index":235,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["removesong(song",{"_index":240,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["replace(/[\\u0300",{"_index":260,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["requestanimationfram",{"_index":141,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["reset",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetdisc",{"_index":89,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["reson",{"_index":429,"title":{},"body":{"injectables/EffectsService.html":{}}}],["result",{"_index":66,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":102,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["right",{"_index":441,"title":{},"body":{"injectables/EffectsService.html":{}}}],["root",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["root'},{'nam",{"_index":42,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["rotat",{"_index":84,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["roulett",{"_index":59,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["roulettecontrollercompon",{"_index":58,"title":{"components/RouletteControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["roundicon",{"_index":36,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["rout",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":767,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":118,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["save",{"_index":523,"title":{},"body":{"injectables/PlayerService.html":{}}}],["save(deck",{"_index":540,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeffect",{"_index":524,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeffects(deck",{"_index":542,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeq",{"_index":525,"title":{},"body":{"injectables/PlayerService.html":{}}}],["saveeq(eq",{"_index":544,"title":{},"body":{"injectables/PlayerService.html":{}}}],["scaffold",{"_index":776,"title":{},"body":{"index.html":{}}}],["search",{"_index":269,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{}}}],["search'},{'nam",{"_index":51,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["search.compon",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.css",{"_index":280,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.html",{"_index":281,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.t",{"_index":279,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:15",{"_index":286,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:19",{"_index":290,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:9",{"_index":284,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search/app",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/AppSearchComponent.html":{}}}],["searchmus",{"_index":255,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchmusic(this.queri",{"_index":265,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchqueri",{"_index":256,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["see",{"_index":807,"title":{},"body":{"index.html":{}}}],["selectedeffect",{"_index":300,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["serv",{"_index":769,"title":{},"body":{"index.html":{}}}],["server",{"_index":766,"title":{},"body":{"index.html":{}}}],["services/effects.servic",{"_index":316,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["services/mus",{"_index":114,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["services/player.servic",{"_index":116,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["set",{"_index":294,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{}}}],["setact",{"_index":351,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["setactive(act",{"_index":364,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["seteq",{"_index":393,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["setinterv",{"_index":127,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["settings'},{'nam",{"_index":53,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["settings.compon",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["settings.component.css",{"_index":295,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.html",{"_index":296,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.t",{"_index":293,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":314,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:26",{"_index":313,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:27",{"_index":312,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:28",{"_index":310,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":315,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:60",{"_index":309,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:9",{"_index":305,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings/app",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/AppSettingsComponent.html":{}}}],["setvalu",{"_index":670,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["setvolum",{"_index":526,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setvolume(deck",{"_index":546,"title":{},"body":{"injectables/PlayerService.html":{}}}],["shell",{"_index":667,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetheight",{"_index":723,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetwidth",{"_index":722,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shellview",{"_index":668,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shownmus",{"_index":233,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["slider",{"_index":62,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["slidercontrollercompon",{"_index":61,"title":{"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["smallval",{"_index":721,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["smashicon",{"_index":31,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["song",{"_index":85,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["song.nam",{"_index":165,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["spanish",{"_index":340,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["src/app/app",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/app",{"_index":6,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["src/app/components/roulett",{"_index":586,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["src/app/components/slid",{"_index":665,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["src/app/services/effects.service.t",{"_index":415,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:69",{"_index":421,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:72",{"_index":420,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:74",{"_index":418,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/effects.service.ts:8",{"_index":468,"title":{},"body":{"injectables/EffectsService.html":{}}}],["src/app/services/mus",{"_index":474,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["src/app/services/player.service.t",{"_index":514,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:10",{"_index":550,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:11",{"_index":549,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:12",{"_index":552,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:13",{"_index":556,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:14",{"_index":548,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:15",{"_index":558,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:16",{"_index":559,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:17",{"_index":557,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:18",{"_index":551,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:19",{"_index":553,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:20",{"_index":527,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:27",{"_index":541,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:33",{"_index":547,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:36",{"_index":537,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:39",{"_index":534,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:42",{"_index":539,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:45",{"_index":533,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:48",{"_index":530,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:55",{"_index":531,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:77",{"_index":545,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:82",{"_index":543,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:89",{"_index":529,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stage",{"_index":809,"title":{},"body":{"index.html":{}}}],["stage.surge.sh",{"_index":812,"title":{},"body":{"index.html":{}}}],["start",{"_index":267,"title":{"index.html":{}},"body":{"components/AppMusicListComponent.html":{}}}],["state",{"_index":810,"title":{},"body":{"index.html":{}}}],["stereophas",{"_index":460,"title":{},"body":{"injectables/EffectsService.html":{}}}],["stopdrag",{"_index":376,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["store",{"_index":781,"title":{},"body":{"index.html":{}}}],["string",{"_index":245,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["string(mus.nam",{"_index":263,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["subject",{"_index":489,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["subscript",{"_index":117,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["support",{"_index":814,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":815,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":347,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs'},{'nam",{"_index":55,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tabs.compon",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.component.css",{"_index":348,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.html",{"_index":349,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.t",{"_index":346,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:10",{"_index":366,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:11",{"_index":367,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:12",{"_index":368,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:13",{"_index":365,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:15",{"_index":355,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:20",{"_index":362,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:27",{"_index":360,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:33",{"_index":356,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:36",{"_index":363,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs/app",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/AppTabsComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["test",{"_index":788,"title":{},"body":{"index.html":{}}}],["tfg",{"_index":758,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":157,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.activateeffect(deck",{"_index":579,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.activeeffects[deck",{"_index":583,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.activeeffects[deck].push(new",{"_index":584,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.applyeffect",{"_index":576,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.availableeffect",{"_index":322,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.availableeffects.find(b",{"_index":328,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.config.id",{"_index":628,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.config.max",{"_index":632,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.min",{"_index":630,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.config.vert",{"_index":719,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.config.zindex",{"_index":740,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.configslid",{"_index":626,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.max",{"_index":640,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.min",{"_index":639,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.deck[0].backend.ac.createbiquadfilt",{"_index":561,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deck[1].backend.ac.createbiquadfilt",{"_index":571,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deckloader[0].asobserv",{"_index":492,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[1].asobserv",{"_index":493,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[deck].next(this.decksongs[deck",{"_index":501,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.decknumb",{"_index":139,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.decksongs[deck",{"_index":500,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.drag",{"_index":372,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.effect",{"_index":133,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.effectloader[0].asobserv",{"_index":554,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectloader[1].asobserv",{"_index":555,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectloader[deck].next(this.effects[deck",{"_index":580,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effects.map(c",{"_index":325,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects.push(effect",{"_index":473,"title":{},"body":{"injectables/EffectsService.html":{}}}],["this.effects[0",{"_index":318,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects[1",{"_index":320,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.effects[deck].filter(a",{"_index":581,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effects[deck][i",{"_index":577,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effects[deck][i].act",{"_index":578,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.effectserv.geteffect",{"_index":323,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.eq",{"_index":573,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.eq[1].map(band",{"_index":570,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.eqeffect",{"_index":574,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.equ",{"_index":575,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.fills",{"_index":734,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.fold",{"_index":644,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.json.parse(b)))[i][j",{"_index":338,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.music.push(song",{"_index":511,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.music.splice(this.music.indexof(song",{"_index":513,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musiclist",{"_index":247,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicloader.asobserv",{"_index":496,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicloader.next(this.mus",{"_index":512,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicservic",{"_index":125,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.musicservice.decksongs$[this.decknumber].subscribe(a",{"_index":155,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.musicservice.deletesong(song",{"_index":252,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicservice.load(deck",{"_index":251,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicsubscript",{"_index":154,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.musicsubscription.unsubscrib",{"_index":161,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.onchangecallback",{"_index":648,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.slid",{"_index":741,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.valu",{"_index":643,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.ontouchedcallback",{"_index":645,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.playerserv.effects$[0].subscribe(effect",{"_index":332,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.effects$[1].subscribe(effect",{"_index":334,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerserv.saveeffects(i",{"_index":335,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.playerservic",{"_index":126,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["this.playerservice.activateeffect(this.decknumb",{"_index":164,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.effects$[this.decknumber].subscribe(effect",{"_index":130,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.isplaying(this.decknumb",{"_index":163,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.load(deck",{"_index":506,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.playerservice.on(this.decknumb",{"_index":151,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.playpause(this.decknumb",{"_index":162,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.sav",{"_index":142,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.queri",{"_index":253,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.recievedfiles(event.datatransfer.fil",{"_index":371,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.recievedfiles(fileinput.target.fil",{"_index":291,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["this.resetdisc",{"_index":153,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.rot",{"_index":128,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["this.selectedeffect",{"_index":324,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.selectedeffects.map(a",{"_index":336,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["this.shel",{"_index":720,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shellview.nativeel",{"_index":738,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shownmus",{"_index":254,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.slid",{"_index":726,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.song",{"_index":156,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.thumbheight",{"_index":730,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.thumbwidth",{"_index":731,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.updatemus",{"_index":249,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.valu",{"_index":633,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.volumemast",{"_index":413,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["this.zindex",{"_index":739,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumb",{"_index":634,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["thumbheight",{"_index":673,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbleft",{"_index":675,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbsiz",{"_index":729,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbtop",{"_index":674,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbwidth",{"_index":672,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tolowercas",{"_index":258,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["track",{"_index":635,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["trackheight",{"_index":681,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackleft",{"_index":683,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracksiz",{"_index":732,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracktop",{"_index":682,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackwidth",{"_index":680,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trebble0",{"_index":386,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["trebble1",{"_index":387,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["true",{"_index":135,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tuna",{"_index":469,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{}}}],["tuna(this.deck[deck].backend.ac",{"_index":582,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tuna[effect.type](effect.config",{"_index":585,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tunaj",{"_index":470,"title":{},"body":{"injectables/EffectsService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["type",{"_index":96,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["typeof",{"_index":646,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["u036f]/g",{"_index":261,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["undefin",{"_index":647,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["unfold",{"_index":596,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["unit",{"_index":787,"title":{},"body":{"index.html":{}}}],["updatemus",{"_index":236,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["us",{"_index":777,"title":{},"body":{"index.html":{}}}],["useexist",{"_index":621,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["val",{"_index":725,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["valu",{"_index":108,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["var",{"_index":37,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["version",{"_index":763,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":636,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["via",{"_index":791,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":691,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["viewchild('slidershel",{"_index":718,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["void",{"_index":103,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/EffectsService.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volum",{"_index":379,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["volume'},{'nam",{"_index":57,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volume.compon",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["volume.component.css",{"_index":380,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.html",{"_index":381,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.t",{"_index":378,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:13",{"_index":409,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:14",{"_index":410,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:145",{"_index":397,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:15",{"_index":411,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:16",{"_index":401,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:17",{"_index":403,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:18",{"_index":406,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:19",{"_index":402,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:20",{"_index":404,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:21",{"_index":407,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:22",{"_index":405,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:23",{"_index":399,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:36",{"_index":400,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:9",{"_index":395,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume/app",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"components/AppVolumeComponent.html":{}}}],["volume0",{"_index":388,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume1",{"_index":389,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volumemast",{"_index":390,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["wavecolor",{"_index":147,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurf",{"_index":119,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["wavesurfer.cr",{"_index":143,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurfer.j",{"_index":120,"title":{},"body":{"components/AppDeckComponent.html":{},"dependencies.html":{}}}],["webapp",{"_index":806,"title":{},"body":{"index.html":{}}}],["window:dragleav",{"_index":353,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragov",{"_index":354,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragover(ev",{"_index":359,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["writevalu",{"_index":597,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["writevalue(valu",{"_index":611,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["www.flaticon.com",{"_index":32,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["zindex",{"_index":669,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["zone.j",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppAboutComponent.html":{"url":"components/AppAboutComponent.html","title":"component - AppAboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppAboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-about/app-about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                app-about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-about.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-about/app-about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './app-about.component.html',\n  styleUrls: ['./app-about.component.css']\n})\nexport class AppAboutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  Content attribution:\n\n\n\n  \n  \n  Icons made by\n    Smashicons\n    from\n    www.flaticon.com\n    is licensed by\n    CC 3.0 BY\n  \n\n\n\n  \n  \n  Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Content attribution:      Icons made by    Smashicons    from    www.flaticon.com    is licensed by    CC 3.0 BY        Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppAboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n-->\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppDeckComponent.html":{"url":"components/AppDeckComponent.html","title":"component - AppDeckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppDeckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-deck/app-deck.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deck\n            \n\n            \n                styleUrls\n                app-deck.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-deck.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effects\n                            \n                            \n                                musicService\n                            \n                            \n                                playerService\n                            \n                            \n                                rotation\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyEffect\n                            \n                            \n                                playPause\n                            \n                            \n                                resetDisc\n                            \n                            \n                                rotate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deckNumber\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-deck/app-deck.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deckNumber\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffect(i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetDisc\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetDisc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [{}, {}, {}, {}, {}, {}] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            song\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        song:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { PlayerService } from '../../services/player.service';\nimport { Subscription } from 'rxjs';\nimport * as WaveSurfer from 'wavesurfer.js';\n\n@Component({\n  selector: 'app-deck',\n  templateUrl: './app-deck.component.html',\n  styleUrls: ['./app-deck.component.css']\n})\nexport class AppDeckComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  deckNumber: number;\n  private musicSubscription: Subscription;\n  musicService: MusicLoaderService;\n  playerService: PlayerService;\n  rotation = 0;\n  private active = false;\n  song: any;\n  effects = [{}, {}, {}, {}, {}, {}] as any;\n  constructor(musicService: MusicLoaderService, playerService: PlayerService) {\n    this.musicService = musicService;\n    this.playerService = playerService;\n  }\n  ngOnInit() {\n    setInterval(() => {\n      this.rotate();\n    }, 50);\n    this.playerService.effects$[this.deckNumber].subscribe(effects => {\n      const eff = effects as any;\n      this.effects = eff.filter(_ => true);\n    });\n  }\n  ngAfterViewInit(): void {\n    const height = document.getElementById('deck_' + this.deckNumber + '_wave').offsetHeight;\n    requestAnimationFrame(() => {\n      this.playerService.save(\n        this.deckNumber,\n        WaveSurfer.create({\n          container: '#deck_' + this.deckNumber + '_wave',\n          waveColor: 'red',\n          progressColor: 'purple',\n          height: height\n        })\n      );\n      this.playerService.on(this.deckNumber, 'finish', () => {\n        this.resetDisc();\n      });\n    });\n    this.musicSubscription = this.musicService.decksongs$[this.deckNumber].subscribe(a => {\n      this.resetDisc();\n      this.song = a as File;\n    });\n  }\n  rotate() {\n    if (this.active) {\n      this.rotation = (this.rotation + 10) % 360;\n    }\n  }\n  resetDisc() {\n    this.active = false;\n    this.rotation = 0;\n  }\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n  playPause() {\n    this.playerService.playPause(this.deckNumber);\n    this.active = this.playerService.isPlaying(this.deckNumber);\n  }\n  applyEffect(i) {\n    this.playerService.activateEffect(this.deckNumber, i);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n    \n\n    \n      \n        {{song.name}}\n      \n\n      \n        \n          \n            \n          \n          \n            2x\n            4x\n            8x\n            16x\n            32x\n          \n        \n        \n          \n            \n              CUEs\n              \n                CUE 1\n                CUE 2\n                CUE 3\n                CUE 4\n              \n              Effects\n              \n                \n                  1\n                  2\n                  3\n                \n                \n                  4\n                  5\n                  6\n                \n              \n            \n            \n              \n            \n          \n          \n            CUE\n            \n              \n                \n                \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{song.name}}                                                                          2x            4x            8x            16x            32x                                                              CUEs                              CUE 1                CUE 2                CUE 3                CUE 4                            Effects                                                1                  2                  3                                                  4                  5                  6                                                                                                                CUE                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppDeckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppLayoutComponent.html":{"url":"components/AppLayoutComponent.html","title":"component - AppLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-layout/app-layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                app-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-layout.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-layout/app-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './app-layout.component.html',\n  styleUrls: ['./app-layout.component.css']\n})\nexport class AppLayoutComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppAboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                AppDeckComponent\n                            \n                            \n                                AppLayoutComponent\n                            \n                            \n                                AppMusicListComponent\n                            \n                            \n                                AppSearchComponent\n                            \n                            \n                                AppSettingsComponent\n                            \n                            \n                                AppTabsComponent\n                            \n                            \n                                AppVolumeComponent\n                            \n                            \n                                RouletteControllerComponent\n                            \n                            \n                                SliderControllerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppDeckComponent } from './components/app-deck/app-deck.component';\nimport { AppLayoutComponent } from './components/app-layout/app-layout.component';\nimport { AppVolumeComponent } from './components/app-volume/app-volume.component';\nimport { SliderControllerComponent } from './components/slider-controller/slider-controller.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouletteControllerComponent } from './components/roulette-controller/roulette-controller.component';\nimport { AppSearchComponent } from './components/app-search/app-search.component';\nimport { AppTabsComponent } from './components/app-tabs/app-tabs.component';\nimport { AppMusicListComponent } from './components/app-music-list/app-music-list.component';\nimport { AppSettingsComponent } from './components/app-settings/app-settings.component';\nimport { AppAboutComponent } from './components/app-about/app-about.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppDeckComponent,\n    AppLayoutComponent,\n    AppVolumeComponent,\n    SliderControllerComponent,\n    RouletteControllerComponent,\n    AppSearchComponent,\n    AppTabsComponent,\n    AppMusicListComponent,\n    AppSettingsComponent,\n    AppAboutComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppMusicListComponent.html":{"url":"components/AppMusicListComponent.html","title":"component - AppMusicListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppMusicListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-music-list/app-music-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music-list\n            \n\n            \n                styleUrls\n                app-music-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-music-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicList\n                            \n                            \n                                musicService\n                            \n                            \n                                query\n                            \n                            \n                                shownMusic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadOnDeck\n                            \n                            \n                                removeSong\n                            \n                            \n                                updateMusic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOnDeck\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadOnDeck(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeSong\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateMusic()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicList:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shownMusic:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-music-list',\n  templateUrl: './app-music-list.component.html',\n  styleUrls: ['./app-music-list.component.css']\n})\nexport class AppMusicListComponent implements OnDestroy {\n  musicService: MusicLoaderService;\n  private musicSubscription: Subscription;\n  musicList: File[];\n  shownMusic: File[];\n  query: string;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n    this.musicList = musicService.music;\n    this.updateMusic();\n    this.musicSubscription = musicService.music$.subscribe(a => {\n      this.musicList = a as File[];\n      this.updateMusic();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n\n  loadOnDeck(deck, song) {\n    this.musicService.load(deck, song);\n  }\n  removeSong(song) {\n    this.musicService.deleteSong(song);\n  }\n  updateMusic() {\n    if (!this.query) {\n      this.shownMusic = this.musicList;\n    } else {\n      const searchMusic = (searchQuery, music: any[]) => {\n        const lowSearch = searchQuery\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n        return music.filter(mus => {\n          return String(mus.name)\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .includes(lowSearch);\n        });\n      };\n      this.shownMusic = searchMusic(this.query, this.musicList);\n    }\n  }\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      \n        \n          Song\n          \n            \n            \n          \n        \n      \n      Artist -->\n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      {{song.name}}\n       -->\n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n    \n    \n      No songs match {{query}}\n    \n\n  \n  \n    \n    To start load music from the search or drag music here from your computer.\n  \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                                  Song                                                                Artist -->                                                                        {{song.name}}       -->                                                                                                                                          No songs match {{query}}                To start load music from the search or drag music here from your computer.    '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppMusicListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), FormsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSearchComponent.html":{"url":"components/AppSearchComponent.html","title":"component - AppSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-search/app-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                app-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChangeEvent\n                            \n                            \n                                recievedFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChangeEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChangeEvent(fileInput: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileInput\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n@Component({\n  selector: 'app-search',\n  templateUrl: './app-search.component.html',\n  styleUrls: ['./app-search.component.css']\n})\nexport class AppSearchComponent implements OnInit {\n  musicService: MusicLoaderService;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  ngOnInit() {}\n  fileChangeEvent(fileInput: any) {\n    this.recievedFiles(fileInput.target.files);\n  }\n\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n\n    \n    \n      \n      Choose a\n        file\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                          Choose a        file      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSettingsComponent.html":{"url":"components/AppSettingsComponent.html","title":"component - AppSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-settings/app-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                app-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableEffects\n                            \n                            \n                                effects\n                            \n                            \n                                effectsNum\n                            \n                            \n                                JSON\n                            \n                            \n                                selectedEffects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService, playerServ: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-settings/app-settings.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerServ\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(i: , j: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        j\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     \n\n                    \n                \n                    \n                        \n                            Default value : [null, null] as any\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JSON:     \n\n                    \n                \n                    \n                        \n                            Default value : JSON\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEffects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-settings/app-settings.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EffectsService } from '../../services/effects.service';\nimport { PlayerService } from '../../services/player.service';\n@Component({\n  selector: 'app-settings',\n  templateUrl: './app-settings.component.html',\n  styleUrls: ['./app-settings.component.css']\n})\nexport class AppSettingsComponent implements OnInit {\n  constructor(private effectServ: EffectsService, private playerServ: PlayerService) {\n    this.effects[0] = JSON.parse(JSON.stringify(this.playerServ.effects[0]));\n    this.effects[1] = JSON.parse(JSON.stringify(this.playerServ.effects[1]));\n    this.availableEffects = this.effectServ.getEffects();\n    this.selectedEffects = this.effects.map(c =>\n      c.map(a => {\n        return JSON.stringify(\n          this.availableEffects.find(b => {\n            a.active = false;\n            return JSON.stringify(a) === JSON.stringify(b);\n          })\n        );\n      })\n    );\n  }\n  JSON = JSON;\n  effectsNum = 6;\n  effects = [null, null] as any;\n  availableEffects: any;\n  selectedEffects: any;\n  ngOnInit() {\n    this.playerServ.effects$[0].subscribe(effects => {\n      this.effects[0] = JSON.parse(JSON.stringify(effects));\n      this.availableEffects = this.effectServ.getEffects();\n      this.selectedEffects = this.effects.map(c =>\n        c.map(a => {\n          return JSON.stringify(\n            this.availableEffects.find(b => {\n              a.active = false;\n              return JSON.stringify(a) === JSON.stringify(b);\n            })\n          );\n        })\n      );\n    });\n    this.playerServ.effects$[1].subscribe(effects => {\n      this.effects[1] = JSON.parse(JSON.stringify(effects));\n      this.availableEffects = this.effectServ.getEffects();\n      this.selectedEffects = this.effects.map(c =>\n        c.map(a => {\n          return JSON.stringify(\n            this.availableEffects.find(b => {\n              a.active = false;\n              return JSON.stringify(a) === JSON.stringify(b);\n            })\n          );\n        })\n      );\n    });\n  }\n  change(i, j) {\n    this.playerServ.saveEffects(i, j, this.selectedEffects.map(a => a.map(b => this.JSON.parse(b)))[i][j]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Language\n\n      \n        Spanish\n        English\n      \n    \n    \n      Template\n      \n        Light\n        Dark\n      \n    \n  \n  \n    \n      Effects deck {{i+1}}\n      \n        \n          Effect {{j}}\n          \n            \n              {{availableEffect.name}}\n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Language              Spanish        English                    Template              Light        Dark                        Effects deck {{i+1}}                        Effect {{j}}                                    {{availableEffect.name}}                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppTabsComponent.html":{"url":"components/AppTabsComponent.html","title":"component - AppTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-tabs/app-tabs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                app-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                dragging\n                            \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                droped\n                            \n                            \n                                recievedFiles\n                            \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:dragleave\n                            \n                            \n                                window:dragover\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-tabs/app-tabs.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragleave\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:dragleave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:dragover(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            droped\n                            \n                            \n                        \n                    \n                \n                \n                    \ndroped(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActive(active: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'music'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragging\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dragging:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './app-tabs.component.html',\n  styleUrls: ['./app-tabs.component.css']\n})\nexport class AppTabsComponent {\n  active = 'music';\n  dragging = false;\n  musicService: MusicLoaderService;\n  setActive(active) {\n    this.active = active;\n  }\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  droped(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.recievedFiles(event.dataTransfer.files);\n    this.dragging = false;\n  }\n  @HostListener('window:dragover', ['$event'])\n  onDragOver(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.dragging = true;\n  }\n  @HostListener('window:dragleave')\n  stopdrag() {\n    this.dragging = false;\n  }\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n        Music\n      \n      \n        Settings\n      \n      \n        About\n      \n    \n    \n      \n      \n      \n    \n  \n  \n    Drop your song here\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Music                    Settings                    About                                            Drop your song here  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppVolumeComponent.html":{"url":"components/AppVolumeComponent.html","title":"component - AppVolumeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppVolumeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-volume/app-volume.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volume\n            \n\n            \n                styleUrls\n                app-volume.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-volume.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bass0\n                            \n                            \n                                bass1\n                            \n                            \n                                mid0\n                            \n                            \n                                mid1\n                            \n                            \n                                playerService\n                            \n                            \n                                trebble0\n                            \n                            \n                                trebble1\n                            \n                            \n                                volume0\n                            \n                            \n                                volume1\n                            \n                            \n                                volumeMaster\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                adjustEQValue\n                            \n                            \n                                changeVolume\n                            \n                            \n                                setEQ\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-volume/app-volume.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adjustEQValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nadjustEQValue(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeVolume(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEQ()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bass1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bass1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mid1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mid1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trebble1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trebble1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volumeMaster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volumeMaster:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PlayerService } from '../../services/player.service';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './app-volume.component.html',\n  styleUrls: ['./app-volume.component.css']\n})\nexport class AppVolumeComponent implements OnInit {\n  constructor(playerService: PlayerService) {\n    this.playerService = playerService;\n  }\n  volume0 = 100;\n  volume1 = 100;\n  volumeMaster = 0;\n  bass0 = 0;\n  mid0 = 0;\n  trebble0 = 0;\n  bass1 = 0;\n  mid1 = 0;\n  trebble1 = 0;\n  playerService: PlayerService;\n  changeVolume(deck) {\n    let masterMultiplier = 1;\n    if (deck === 0 && this.volumeMaster > 0) {\n      masterMultiplier = (100 - this.volumeMaster) / 100;\n    }\n    if (deck === 1 && this.volumeMaster  0) {\n      return value / 5;\n    }\n    return value;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n      \n    \n    \n      \n\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppVolumeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EffectsService.html":{"url":"injectables/EffectsService.html","title":"injectable - EffectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EffectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/effects.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEffect\n                            \n                            \n                                getEffects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/effects.service.ts:74\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \naddEffect(effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/effects.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Tuna from 'tunajs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EffectsService {\n  effects = [\n    {\n      name: 'Basic moog filter',\n      type: 'MoogFilter',\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic ping pong',\n      type: 'PingPongDelay',\n      active: false,\n      config: {\n        cutoff: 0.065, // 0 to 1\n        resonance: 3.5, // 0 to 4\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic left panner',\n      type: 'Panner',\n      active: false,\n      config: {\n        pan: -1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic right panner',\n      type: 'Panner',\n      active: false,\n      config: {\n        pan: 1 // -1 (left) to 1 (right)\n      }\n    },\n    {\n      name: 'Basic bitcrusher',\n      type: 'Bitcrusher',\n      active: false,\n      config: {\n        bits: 4, // 1 to 16\n        normfreq: 0.1, // 0 to 1\n        bufferSize: 4096 // 256 to 16384\n      }\n    },\n    {\n      name: 'Basic phaser',\n      type: 'Phaser',\n      active: false,\n      config: {\n        rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible\n        depth: 0.3, // 0 to 1\n        feedback: 0.2, // 0 to 1+\n        stereoPhase: 30, // 0 to 180\n        baseModulationFrequency: 700, // 500 to 1500\n        bypass: 0\n      }\n    }\n  ];\n  getEffects() {\n    return JSON.parse(JSON.stringify(this.effects));\n  }\n  addEffect(effect) {\n    this.effects.push(effect);\n  }\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicLoaderService.html":{"url":"injectables/MusicLoaderService.html","title":"injectable - MusicLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MusicLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/music-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deckLoader\n                            \n                            \n                                decksongs\n                            \n                            \n                                decksongs$\n                            \n                            \n                                music\n                            \n                            \n                                music$\n                            \n                            \n                                musicLoader\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSong\n                            \n                            \n                                deleteSong\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSong\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSong(song: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSong\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.musicLoader.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicLoader:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PlayerService } from './player.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicLoaderService {\n  musicLoader = new Subject();\n  music$ = this.musicLoader.asObservable();\n  music: File[] = [];\n  deckLoader = [new Subject(), new Subject()];\n  decksongs$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  decksongs: File[] = [null, null];\n  playerService: PlayerService;\n  constructor(playerService: PlayerService) {\n    this.playerService = playerService;\n  }\n  load(deck, song) {\n    this.decksongs[deck] = song;\n    this.deckLoader[deck].next(this.decksongs[deck]);\n    requestAnimationFrame(() => {\n      const reader = new FileReader();\n      reader.readAsDataURL(song);\n      reader.onload = () => {\n        this.playerService.load(deck, reader.result);\n      };\n      reader.onerror = error => {\n        console.log('Error: ', error);\n      };\n    });\n  }\n  addSong(song: File) {\n    this.music.push(song);\n    this.musicLoader.next(this.music);\n  }\n  deleteSong(song) {\n    this.music.splice(this.music.indexOf(song), 1);\n    this.musicLoader.next(this.music);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/player.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeEffects\n                            \n                            \n                                deck\n                            \n                            \n                                deck$\n                            \n                            \n                                deckLoader\n                            \n                            \n                                deckNum\n                            \n                            \n                                effectLoader\n                            \n                            \n                                effects\n                            \n                            \n                                effects$\n                            \n                            \n                                effectsNum\n                            \n                            \n                                eq\n                            \n                            \n                                eqEffect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateEffect\n                            \n                            \n                                applyEffects\n                            \n                            \n                                equalizer\n                            \n                            \n                                isPlaying\n                            \n                            \n                                load\n                            \n                            \n                                on\n                            \n                            \n                                playPause\n                            \n                            \n                                save\n                            \n                            \n                                saveEffects\n                            \n                            \n                                saveEQ\n                            \n                            \n                                setVolume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(effectServ: EffectsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        effectServ\n                                                  \n                                                        \n                                                                    EffectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activateEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivateEffect(deck: , i: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyEffects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equalizer\n                            \n                            \n                        \n                    \n                \n                \n                    \nequalizer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPlaying(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            on\n                            \n                            \n                        \n                    \n                \n                \n                    \non(deck: , event: , callback: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(deck: , wavesurfer: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        wavesurfer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEffects(deck: , i: , effect: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        effect\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEQ\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEQ(eq: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eq\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetVolume(deck: , volume: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        volume\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeEffects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeEffects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[], []]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[null, null, null, null, null, null], [null, null, null, null, null, null]]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effects$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effects$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.effectLoader[0].asObservable(), this.effectLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectsNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effectsNum:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eq\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eq:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eqEffect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eqEffect:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport Tuna from 'tunajs';\nimport { EffectsService } from './effects.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  deckLoader = [new Subject(), new Subject()];\n  deck$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  effectLoader = [new Subject(), new Subject()];\n  effects$ = [this.effectLoader[0].asObservable(), this.effectLoader[1].asObservable()];\n  deck: any[] = [null, null];\n  eq = [null, null];\n  eqEffect: any;\n  effectsNum = 6;\n  deckNum = 2;\n  effects = [[null, null, null, null, null, null], [null, null, null, null, null, null]];\n  activeEffects = [[], []];\n  constructor(private effectServ: EffectsService) {\n    for (let i = 0; i  {\n        const filter = this.deck[0].backend.ac.createBiquadFilter();\n        filter.type = band.type;\n        filter.gain.value = band.value;\n        filter.Q.value = 1;\n        filter.frequency.value = band.f;\n        return filter;\n      });\n      const filter1 = this.eq[1].map(band => {\n        const filter = this.deck[1].backend.ac.createBiquadFilter();\n        filter.type = band.type;\n        filter.gain.value = band.value;\n        filter.Q.value = 1;\n        filter.frequency.value = band.f;\n        return filter;\n      });\n      return [filter0, filter1];\n    }\n  }\n\n  saveEQ(eq) {\n    this.eq = eq;\n    this.eqEffect = this.equalizer();\n    this.applyEffects();\n  }\n  saveEffects(deck, i, effect) {\n    if (this.effects[deck][i] && this.effects[deck][i].active) {\n      this.activateEffect(deck, i);\n    }\n    this.effects[deck][i] = effect;\n    this.effectLoader[deck].next(this.effects[deck]);\n  }\n  activateEffect(deck, i) {\n    this.effects[deck][i].active = !this.effects[deck][i].active;\n    const effects = this.effects[deck].filter(a => a.active);\n    const tuna = new Tuna(this.deck[deck].backend.ac);\n    this.activeEffects[deck] = [];\n    for (const effect of effects) {\n      this.activeEffects[deck].push(new tuna[effect.type](effect.config));\n    }\n    this.applyEffects();\n    this.effectLoader[deck].next(this.effects[deck]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouletteControllerComponent.html":{"url":"components/RouletteControllerComponent.html","title":"component - RouletteControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouletteControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/roulette-controller/roulette-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                roulette-controller\n            \n\n            \n                styleUrls\n                roulette-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./roulette-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSlider\n                            \n                            \n                                folded\n                            \n                            \n                                rotation\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                rotate\n                            \n                            \n                                unfold\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/roulette-controller/roulette-controller.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:66\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unfold\n                            \n                            \n                        \n                    \n                \n                \n                    \nunfold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSlider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSlider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folded:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RouletteControllerComponent),\n  multi: true\n};\n@Component({\n  selector: 'roulette-controller',\n  templateUrl: './roulette-controller.component.html',\n  styleUrls: ['./roulette-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class RouletteControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  folded = true;\n  value = 0;\n  configSlider: any;\n  rotation: number;\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.configSlider = {\n      id: this.config.id + 'slider',\n      min: this.config.min || 0,\n      max: this.config.max || 100,\n      default: this.value,\n      thumb: 'roulette-slider-thumb',\n      track: 'roulette-slider-track',\n      vertical: true,\n      fill: true\n    };\n    this.rotate();\n  }\n\n  rotate() {\n    const percent = (this.value - this.configSlider.min) / (this.configSlider.max - this.configSlider.min);\n    this.rotation = 135 * 2 * (percent - 0.5);\n    this.onChangeCallback(this.value);\n  }\n  unfold() {\n    this.folded = !this.folded;\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.value = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  @HostListener('document:click', ['$event'])\n  private onDocumentClick(event: MouseEvent) {\n    const closest = (el, selector) => {\n      const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\n      while (el) {\n        if (matchesSelector.call(el, selector)) {\n          break;\n        }\n        el = el.parentElement;\n      }\n      return el;\n    };\n    const ele = event.target as Element;\n    if (!closest(ele, '#' + this.config.id + '_container')) {\n      this.folded = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouletteControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderControllerComponent.html":{"url":"components/SliderControllerComponent.html","title":"component - SliderControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/slider-controller/slider-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                slider-controller\n            \n\n            \n                styleUrls\n                slider-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./slider-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fillsize\n                            \n                            \n                                shell\n                            \n                            \n                                shellView\n                            \n                            \n                                slider\n                            \n                            \n                                zindex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbWidth\n                                \n                                \n                                    thumbHeight\n                                \n                                \n                                    thumbTop\n                                \n                                \n                                    thumbLeft\n                                \n                                \n                                    fillWidth\n                                \n                                \n                                    fillHeight\n                                \n                                \n                                    fillTop\n                                \n                                \n                                    fillLeft\n                                \n                                \n                                    trackWidth\n                                \n                                \n                                    trackHeight\n                                \n                                \n                                    trackTop\n                                \n                                \n                                    trackLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:216\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:221\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillsize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillsize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shell\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shell:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shellView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shellView:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zindex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zindex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thumbWidth\n                    \n                \n\n                \n                    \n                        getthumbWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbHeight\n                    \n                \n\n                \n                    \n                        getthumbHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbTop\n                    \n                \n\n                \n                    \n                        getthumbTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbLeft\n                    \n                \n\n                \n                    \n                        getthumbLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillWidth\n                    \n                \n\n                \n                    \n                        getfillWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:89\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillHeight\n                    \n                \n\n                \n                    \n                        getfillHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillTop\n                    \n                \n\n                \n                    \n                        getfillTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:123\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillLeft\n                    \n                \n\n                \n                    \n                        getfillLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:146\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackWidth\n                    \n                \n\n                \n                    \n                        gettrackWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackHeight\n                    \n                \n\n                \n                    \n                        gettrackHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackTop\n                    \n                \n\n                \n                    \n                        gettrackTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:185\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackLeft\n                    \n                \n\n                \n                    \n                        gettrackLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:196\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, ViewChild, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SliderControllerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'slider-controller',\n  templateUrl: './slider-controller.component.html',\n  styleUrls: ['./slider-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class SliderControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  @ViewChild('sliderShell')\n  shellView: ElementRef;\n  shell: HTMLElement;\n  slider: any;\n  fillsize = 16;\n  zindex = 0;\n\n  get thumbWidth(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    if (vertical) {\n      return smallval;\n    } else {\n      return smallval / 2.5;\n    }\n  }\n  get thumbHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      if (!vertical) {\n        return smallval;\n      } else {\n        return smallval / 2.5;\n      }\n    } else {\n      return null;\n    }\n  }\n  get thumbTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? loc : 0;\n    } else {\n      return null;\n    }\n  }\n  get thumbLeft(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? 0 : loc;\n    } else {\n      return null;\n    }\n  }\n\n  get fillWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get fillHeight(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return Math.max(0, vertical ? bigval - filloffset - fillsize - loc : fillsize);\n    } else {\n      return null;\n    }\n  }\n  get fillTop(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n\n      /* Fill */\n\n      const fillsize = 16;\n      const filloffset = smallval / 2 - fillsize / 2;\n      return vertical ? loc + thumbsize : filloffset;\n    } else {\n      return null;\n    }\n  }\n  get fillLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  get trackWidth(): any {\n    if (this.shell) {\n      const val = this.slider;\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const pc = (val - this.config.min) / (this.config.max - this.config.min);\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n      const tracksize = bigval - thumbsize;\n      const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n      return vertical ? this.fillsize : loc + thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackHeight(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return bigval - thumbsize * 1.25;\n    } else {\n      return null;\n    }\n  }\n  get trackTop(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n\n      const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n      return thumbsize / 2;\n    } else {\n      return null;\n    }\n  }\n  get trackLeft(): any {\n    if (this.shell) {\n      const vertical = !!this.config.vertical;\n      const shell = this.shell;\n      const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n      const filloffset = smallval / 2 - this.fillsize / 2;\n      return vertical ? filloffset : 0;\n    } else {\n      return null;\n    }\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  ngOnInit() {\n    this.shell = this.shellView.nativeElement;\n    this.zindex = this.config.zindex || 0;\n  }\n\n  setValue() {\n    this.onChangeCallback(this.slider);\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.slider = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n\n    \n\n    \n        \n\t\n\t\n\t\n\t\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            tunajs : ^1.0.2\n        \n            wavesurfer.js : ^2.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTFG\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun npm test to execute the unit tests via jest.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nDocumentation\nTo access the compodoc generated documentation go to https://clm2609.gitlab.io/tfg\nWebApp\nTo see the latest stage state of the app go to http://virtualdj-stage.surge.sh/\nTo see the latest production state of the app go to http://virtualdj.surge.sh/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
