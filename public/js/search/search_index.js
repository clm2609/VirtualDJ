var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppAboutComponent.html",[0,0.137,1,0.381]],["body/components/AppAboutComponent.html",[0,0.242,1,0.67,2,0.359,3,0.285,4,0.711,5,0.285,6,1.39,7,3.271,8,3.117,9,1.39,10,1.355,11,0.711,12,1.07,13,0.919,14,0.926,15,4.056,16,0.926,17,4.056,18,1.184,19,0.613,20,3.117,21,0.359,22,0.05,23,0.285,24,0.285,25,0.359,26,1.216,27,4.056,28,4.056,29,4.776,30,4.776,31,4.056,32,4.776,33,4.776,34,4.776,35,4.776,36,4.056,37,1.09,38,0.711,39,0.467,40,0.711,41,0.437,42,0.711,43,0.437,44,0.711,45,0.437,46,0.711,47,0.437,48,0.522,49,0.711,50,0.437,51,0.711,52,0.437,53,0.711,54,0.437,55,0.711,56,0.437,57,0.711,58,0.437,59,0.711,60,0.711,61,0.437,62,0.711,63,0.711,64,0.711,65,0.711,66,0.037,67,0.037]],["title/components/AppComponent.html",[0,0.137,41,0.381]],["body/components/AppComponent.html",[0,0.251,1,0.485,2,0.398,3,0.316,4,0.789,5,0.316,11,0.789,12,1.085,13,0.916,14,0.989,16,0.989,21,0.398,22,0.051,23,0.316,24,0.316,25,0.398,37,1.133,38,0.789,39,0.499,40,0.789,41,0.697,42,0.789,43,0.485,44,0.789,45,0.485,46,0.789,47,0.485,48,0.579,49,0.789,50,0.485,51,0.789,52,0.485,53,0.789,54,0.485,55,0.789,56,0.485,57,0.789,58,0.485,59,0.789,60,0.789,61,0.485,62,0.789,63,0.789,64,0.789,65,0.789,66,0.04,67,0.04,68,3.458,69,2.943,70,4.335,71,4.335]],["title/components/AppDeckComponent.html",[0,0.137,43,0.381]],["body/components/AppDeckComponent.html",[0,0.201,1,0.286,2,0.235,3,0.187,4,0.466,5,0.276,6,1.68,9,1.035,10,1.081,11,0.466,12,1,13,0.866,14,0.689,16,0.689,18,0.536,19,0.947,21,0.488,22,0.052,23,0.187,24,0.187,25,0.235,26,0.796,37,0.907,38,0.466,39,0.414,40,0.466,41,0.286,42,0.466,43,0.558,44,0.466,45,0.286,46,0.466,47,0.286,48,0.342,49,0.466,50,0.286,51,0.466,52,0.286,53,0.466,54,0.286,55,0.466,56,0.286,57,0.466,58,0.286,59,0.466,60,0.466,61,0.286,62,0.466,63,0.466,64,0.466,65,0.466,66,0.028,67,0.028,72,3.953,73,2.041,74,3.595,75,2.899,76,1.342,77,3.02,78,3.02,79,0.466,80,0.908,81,2.592,82,2.625,83,3.805,84,2.017,85,0.908,86,3.204,87,3.973,88,2.698,89,3.595,90,1.763,91,2.042,92,3.02,93,0.536,94,1.335,95,0.536,96,2.319,97,2.041,98,2.041,99,1.081,100,1.275,101,2.041,102,2.041,103,2.041,104,2.041,105,0.796,106,0.796,107,1.403,108,2.041,109,1.191,110,1.191,111,1.646,112,2.051,113,0.907,114,1.646,115,1.646,116,1.763,117,1.646,118,1.646,119,2.436,120,1.191,121,1.386,122,2.041,123,3.204,124,2.041,125,2.041,126,0.907,127,3.595,128,2.041,129,3.595,130,2.041,131,1.646,132,2.041,133,2.041,134,2.041,135,2.041,136,2.041,137,2.041,138,2.041,139,2.041,140,2.041,141,2.041,142,2.041,143,3.02,144,1.646,145,2.041,146,2.041,147,2.899,148,2.041,149,2.041,150,1.646,151,1.646,152,2.041,153,2.041,154,2.436,155,4.441,156,4.441,157,4.441,158,3.02,159,3.02,160,5.032,161,1.342,162,1.342,163,2.436,164,2.436,165,2.436]],["title/components/AppLayoutComponent.html",[0,0.137,45,0.381]],["body/components/AppLayoutComponent.html",[0,0.247,1,0.464,2,0.38,3,0.302,4,0.754,5,0.302,6,1.444,9,1.444,10,1.394,11,0.754,12,1.079,13,0.925,14,0.961,16,0.961,18,1.218,19,0.65,21,0.38,22,0.051,23,0.302,24,0.302,25,0.38,26,1.29,37,1.114,38,0.754,39,0.485,40,0.754,41,0.464,42,0.754,43,0.464,44,0.754,45,0.685,46,0.754,47,0.464,48,0.554,49,0.754,50,0.464,51,0.754,52,0.464,53,0.754,54,0.464,55,0.754,56,0.464,57,0.754,58,0.464,59,0.754,60,0.754,61,0.464,62,0.754,63,0.754,64,0.754,65,0.754,66,0.038,67,0.038,166,3.398,167,3.306,168,4.213,169,4.213,170,4.213,171,3.306]],["title/modules/AppModule.html",[172,1.06,173,1.586]],["body/modules/AppModule.html",[1,0.677,2,0.301,3,0.239,5,0.239,7,2.11,13,0.438,21,0.623,22,0.052,23,0.239,24,0.33,25,0.301,41,0.74,43,0.677,45,0.677,47,0.677,48,0.604,50,0.677,52,0.677,54,0.677,56,0.677,58,0.677,61,0.677,66,0.033,67,0.033,72,2.11,166,2.11,172,1.407,173,3.252,174,1.527,175,2.11,176,3.329,177,3.329,178,2.105,179,2.11,180,2.11,181,2.11,182,2.11,183,2.45,184,2.909,185,2.11,186,1.776,187,2.616,188,3.607,189,2.11,190,1.776,191,2.909,192,2.616,193,2.616,194,5.038,195,2.616,196,2.616,197,2.11,198,2.616,199,2.616,200,2.11,201,3.607,202,2.909,203,1.328,204,2.616,205,2.11,206,2.11,207,2.616,208,2.11,209,2.616,210,2.11,211,2.616,212,2.11,213,2.616,214,2.616]],["title/components/AppMusicListComponent.html",[0,0.137,47,0.381]],["body/components/AppMusicListComponent.html",[0,0.206,1,0.3,2,0.246,3,0.196,4,0.488,5,0.437,6,1.672,9,1.072,10,0.643,11,0.488,12,1.009,13,0.872,14,0.714,16,0.714,18,0.562,19,0.94,21,0.425,22,0.052,23,0.196,24,0.196,25,0.246,37,0.928,38,0.488,39,0.498,40,0.488,41,0.3,42,0.488,43,0.3,44,0.488,45,0.3,46,0.488,47,0.571,48,0.92,49,0.488,50,0.3,51,0.488,52,0.3,53,0.488,54,0.3,55,0.488,56,0.3,57,0.488,58,0.3,59,0.488,60,0.488,61,0.3,62,0.488,63,0.488,64,0.488,65,0.488,66,0.029,67,0.037,75,2.981,76,0.951,79,0.488,80,0.94,81,2.637,84,2.476,85,0.94,90,1.826,91,2.073,93,0.971,94,1.3,95,0.971,99,1.3,100,1.222,107,1.22,109,1.249,110,1.249,112,2.124,113,0.951,116,1.249,117,1.726,120,1.249,126,1.39,144,1.726,150,1.726,151,1.726,154,2.522,210,3.934,215,2.141,216,3.128,217,3.128,218,3.128,219,4.066,220,4.517,221,4.066,222,3.128,223,3.128,224,4.066,225,3.128,226,3.128,227,2.141,228,3.128,229,2.141,230,2.141,231,2.141,232,2.141,233,2.981,234,2.141,235,4.066,236,2.141,237,3.128,238,2.141,239,2.141,240,2.141,241,2.141,242,3.128,243,2.141,244,3.128,245,2.141,246,3.128,247,3.128,248,3.128,249,3.128,250,2.141,251,2.141,252,2.141,253,2.141,254,3.128,255,2.522,256,2.124,257,2.522,258,2.522,259,2.522,260,3.128]],["title/modules/AppRoutingModule.html",[172,1.06,183,1.379]],["body/modules/AppRoutingModule.html",[2,0.456,3,0.362,5,0.362,21,0.598,22,0.051,23,0.362,24,0.43,25,0.456,66,0.043,67,0.043,126,1.76,172,1.546,183,2.391,191,3.798,202,3.798,203,2.011,261,3.962,262,3.962,263,5.026,264,4.71,265,3.195,266,3.962]],["title/components/AppSearchComponent.html",[0,0.137,50,0.381]],["body/components/AppSearchComponent.html",[0,0.219,1,0.345,2,0.283,3,0.225,4,0.561,5,0.417,6,1.564,9,1.183,10,1.2,11,0.561,12,1.033,13,0.891,14,0.788,16,0.788,18,0.645,19,0.851,21,0.397,22,0.051,23,0.225,24,0.225,25,0.283,26,0.959,37,0.988,38,0.561,39,0.525,40,0.561,41,0.345,42,0.561,43,0.345,44,0.561,45,0.345,46,0.561,47,0.345,48,0.411,49,0.561,50,0.608,51,0.561,52,0.345,53,0.561,54,0.345,55,0.561,56,0.345,57,0.561,58,0.345,59,0.561,60,0.561,61,0.345,62,0.561,63,0.561,64,0.561,65,0.561,66,0.051,67,0.032,79,0.561,80,1.038,81,2.762,85,1.038,90,2.015,91,2.16,93,1.049,94,1.302,95,1.049,99,1.038,100,1.038,107,0.959,109,1.434,110,1.434,120,1.434,161,2.351,162,2.451,206,3.679,257,2.785,267,2.457,268,3.453,269,3.453,270,3.453,271,2.785,272,3.453,273,3.453,274,2.457,275,2.457,276,2.785,277,3.219,278,2.457,279,2.457,280,3.453]],["title/components/AppSettingsComponent.html",[0,0.137,52,0.381]],["body/components/AppSettingsComponent.html",[0,0.226,1,0.371,2,0.304,3,0.241,4,0.947,5,0.241,6,1.245,9,1.245,10,1.247,11,0.603,12,1.045,13,0.9,14,0.829,16,0.829,18,1.09,19,0.519,21,0.304,22,0.049,23,0.241,24,0.241,25,0.304,26,1.031,37,1.02,38,0.603,39,0.418,40,0.603,41,0.371,42,0.603,43,0.371,44,0.603,45,0.371,46,0.603,47,0.371,48,0.442,49,0.603,50,0.371,51,0.603,52,0.627,53,0.603,54,0.371,55,0.603,56,0.371,57,0.603,58,0.371,59,0.603,60,0.603,61,0.371,62,0.603,63,0.603,64,0.603,65,0.603,66,0.033,67,0.033,76,1.986,161,2.151,162,2.151,163,3.603,164,3.603,165,4.49,212,2.929,281,2.642,282,2.929,283,3.632,284,3.632,285,2.642,286,3.632,287,3.632,288,3.632,289,5.55,290,5.55,291,4.468,292,4.468]],["title/components/AppTabsComponent.html",[0,0.137,54,0.381]],["body/components/AppTabsComponent.html",[0,0.217,1,0.336,2,0.276,3,0.219,4,0.547,5,0.36,6,1.742,11,0.547,12,1.029,13,0.888,14,0.774,16,0.774,18,0.63,19,0.986,21,0.39,22,0.052,23,0.219,24,0.219,25,0.276,37,0.977,38,0.547,39,0.54,40,0.547,41,0.336,42,0.547,43,0.336,44,0.547,45,0.336,46,0.547,47,0.336,48,0.757,49,0.547,50,0.336,51,0.547,52,0.336,53,0.547,54,0.601,55,0.547,56,0.336,57,0.547,58,0.336,59,0.547,60,0.547,61,0.336,62,0.547,63,0.547,64,0.547,65,0.547,66,0.031,67,0.031,79,0.547,80,1.02,81,2.74,84,1.723,85,1.02,90,1.981,91,2.144,93,1.125,94,1.287,95,1.125,99,1.184,100,1.184,105,1.324,106,1.324,107,0.935,109,1.399,110,1.399,118,3.785,119,3.454,120,1.399,147,1.933,208,4.099,233,2.737,258,3.454,259,2.737,271,2.737,276,2.737,277,3.177,282,2.737,293,2.397,294,3.394,295,3.394,296,3.394,297,3.394,298,3.394,299,3.177,300,3.939,301,3.394,302,2.397,303,2.397,304,1.933,305,2.674,306,2.397,307,2.397,308,3.394,309,2.397,310,2.397,311,3.394,312,2.397,313,2.397,314,2.397,315,2.397,316,3.394,317,3.394,318,2.397,319,3.939,320,2.397,321,2.397,322,1.628,323,2.397,324,2.397,325,3.394]],["title/components/AppVolumeComponent.html",[0,0.137,56,0.381]],["body/components/AppVolumeComponent.html",[0,0.225,1,0.365,2,0.3,3,0.238,4,0.594,5,0.238,6,1.692,10,0.782,11,0.594,12,1.043,13,0.898,14,0.82,16,0.82,18,0.684,19,0.947,21,0.474,22,0.052,23,0.238,24,0.238,25,0.3,37,1.013,38,0.594,39,0.511,40,0.594,41,0.365,42,0.594,43,0.365,44,0.594,45,0.365,46,0.594,47,0.365,48,0.436,49,0.594,50,0.365,51,0.594,52,0.365,53,0.594,54,0.365,55,0.594,56,0.623,57,0.594,58,0.365,59,0.594,60,0.594,61,0.365,62,0.594,63,0.594,64,0.594,65,0.594,66,0.033,67,0.033,76,1.83,79,0.594,80,1.08,82,2.693,85,1.08,93,0.944,94,1.4,95,0.944,96,2.812,99,0.782,100,0.782,105,1.606,106,1.606,107,1.732,111,2.099,112,1.767,113,1.157,121,1.767,161,1.597,197,3.982,326,2.603,327,2.899,328,3.594,329,3.594,330,4.44,331,4.44,332,4.44,333,3.594,334,2.899,335,2.603,336,3.594,337,2.603,338,2.603,339,3.885,340,2.603,341,2.603,342,2.603,343,3.594,344,4.117]],["title/injectables/MusicLoaderService.html",[91,1.207,345,1.379]],["body/injectables/MusicLoaderService.html",[2,0.286,3,0.227,5,0.468,18,0.652,19,1.018,21,0.462,22,0.052,23,0.227,24,0.227,25,0.286,39,0.501,48,0.833,66,0.032,67,0.032,69,1.687,76,1.104,79,0.567,80,1.046,82,2.673,84,2.41,85,1.046,91,1.546,93,1.143,94,1.465,95,1.143,99,1.207,100,1.207,105,1.852,106,1.852,113,1.104,121,1.687,126,1.104,131,2.003,161,1.104,256,2.362,334,2.806,345,2.039,346,5.224,347,2.484,348,3.509,349,4.974,350,4.351,351,3.48,352,3.48,353,3.48,354,3.48,355,2.484,356,3.48,357,2.484,358,2.806,359,2.484,360,3.31,361,3.931,362,2.484,363,2.954,364,2.484,365,2.806,366,2.806,367,2.484,368,2.484,369,3.48,370,2.484,371,2.484,372,2.484,373,2.484,374,2.484,375,2.484,376,2.003,377,2.484,378,2.484,379,2.484,380,2.484,381,2.484,382,2.484,383,2.484,384,2.484,385,2.484,386,3.48,387,2.484,388,2.484,389,3.48,390,2.484]],["title/injectables/PlayerService.html",[82,1.379,345,1.379]],["body/injectables/PlayerService.html",[2,0.315,3,0.25,5,0.25,19,1.015,21,0.428,22,0.052,23,0.25,24,0.25,25,0.315,39,0.563,66,0.034,67,0.034,69,1.859,76,2.389,79,0.625,80,1.119,82,1.889,84,2.146,85,1.119,86,3.001,93,1.285,94,1.271,95,1.285,99,1.504,100,1.426,105,1.649,106,1.649,113,1.217,114,3.658,256,2.527,305,2.87,327,3.409,345,2.146,348,3.658,358,3.001,360,3.079,361,3.825,363,3.079,365,3.001,366,3.001,376,2.208,391,2.738,392,3.722,393,3.722,394,3.722,395,3.722,396,2.738,397,2.738,398,3.722,399,4.536,400,2.738,401,3.722,402,2.738,403,3.722,404,2.738,405,3.722,406,2.738,407,2.738,408,2.738,409,2.738,410,2.738,411,2.738,412,2.738,413,2.738,414,2.738,415,2.738,416,2.738,417,2.738]],["title/components/RouletteControllerComponent.html",[0,0.137,58,0.381]],["body/components/RouletteControllerComponent.html",[0,0.196,1,0.272,2,0.223,3,0.177,4,0.443,5,0.177,9,0.997,10,1.049,11,0.443,12,1.008,13,0.796,14,0.664,16,0.664,18,0.916,19,0.979,21,0.335,22,0.052,23,0.177,24,0.266,25,0.223,26,0.757,37,0.884,38,0.443,39,0.478,40,0.443,41,0.272,42,0.443,43,0.272,44,0.443,45,0.272,46,0.443,47,0.272,48,0.325,49,0.443,50,0.272,51,0.443,52,0.272,53,0.443,54,0.272,55,0.443,56,0.272,57,0.443,58,0.583,59,1.085,60,0.443,61,0.272,62,0.884,63,0.796,64,0.443,65,0.443,66,0.027,67,0.027,79,0.443,80,0.874,83,3.749,85,0.874,88,2.631,93,0.916,94,1.359,95,0.916,96,2.424,99,1.31,100,1.359,105,1.361,106,1.855,107,0.757,116,2.037,123,2.346,126,1.937,162,0.862,178,2.037,203,0.985,205,4.06,299,2.814,304,1.565,305,1.975,322,2.959,339,3.126,418,5.035,419,1.565,420,2.814,421,2.814,422,2.346,423,2.346,424,3.876,425,3.876,426,2.346,427,2.346,428,3.876,429,2.346,430,2.814,431,2.909,432,1.565,433,1.941,434,1.941,435,2.909,436,1.941,437,2.346,438,1.941,439,3.126,440,2.346,441,1.941,442,1.941,443,1.565,444,2.346,445,1.941,446,1.941,447,1.941,448,1.565,449,1.565,450,2.346,451,2.346,452,2.346,453,2.814,454,1.565,455,1.565,456,1.565,457,1.565,458,1.565,459,1.941,460,1.941,461,2.909,462,1.941,463,1.941,464,2.909,465,2.909,466,1.565,467,1.565,468,2.909,469,2.909,470,2.909,471,1.941,472,1.941,473,1.941,474,3.489,475,1.565,476,1.565,477,1.941,478,1.941,479,1.941,480,4.152,481,1.941,482,1.941,483,1.941,484,1.941,485,1.941,486,1.941,487,1.941,488,1.941,489,1.941,490,1.565,491,1.941,492,1.941]],["title/components/SliderControllerComponent.html",[0,0.137,61,0.381]],["body/components/SliderControllerComponent.html",[0,0.145,1,0.16,2,0.131,3,0.104,4,0.26,5,0.104,9,0.653,10,0.738,11,0.26,12,0.868,13,0.668,14,0.435,16,0.435,19,0.947,21,0.283,22,0.052,23,0.104,24,0.174,25,0.131,26,0.445,37,0.655,38,0.26,39,0.367,40,0.26,41,0.16,42,0.26,43,0.16,44,0.26,45,0.16,46,0.26,47,0.16,48,0.191,49,0.26,50,0.16,51,0.26,52,0.16,53,0.26,54,0.16,55,0.26,56,0.16,57,0.26,58,0.16,59,0.26,60,0.26,61,0.448,62,0.966,63,0.56,64,0.26,65,0.26,66,0.017,67,0.017,79,0.26,80,0.573,85,0.573,88,1.949,93,0.645,94,1.101,95,0.645,96,1.113,99,1.422,100,1.038,105,0.445,106,1.246,107,1.12,116,1.113,126,2.448,161,1.534,162,1.88,178,1.434,200,3.919,203,0.579,322,0.774,363,0.774,419,0.92,420,1.981,421,1.981,422,1.537,423,1.537,426,1.537,427,1.537,429,1.537,430,1.981,432,0.92,437,1.537,439,2.314,440,1.537,443,0.92,444,1.537,448,0.92,449,0.92,450,1.537,451,1.537,452,1.537,453,1.981,454,0.92,455,0.92,456,0.92,457,0.92,458,0.92,466,4.321,467,0.92,475,0.92,476,1.537,493,4.859,494,4.12,495,4.562,496,2.87,497,1.906,498,2.456,499,2.456,500,2.456,501,2.456,502,2.456,503,2.456,504,2.456,505,2.456,506,2.456,507,2.456,508,2.456,509,2.456,510,1.14,511,1.14,512,1.14,513,1.14,514,2.87,515,2.456,516,1.14,517,1.537,518,1.14,519,1.14,520,1.14,521,1.14,522,1.14,523,1.14,524,1.14,525,1.14,526,1.14,527,1.14,528,1.14,529,1.14,530,1.14,531,1.14,532,1.14,533,1.14,534,1.14,535,1.14,536,1.14,537,1.14,538,1.14,539,1.14,540,1.14,541,1.14,542,1.14,543,1.14,544,1.14,545,4.33,546,4.232,547,4.493,548,4.416,549,4.416,550,1.906,551,4.33,552,3.664,553,4.731,554,4.33,555,3.452,556,4.562,557,4.777,558,3.841,559,3.841,560,4.731,561,4.33,562,2.87,563,3.841,564,1.14,565,1.14,566,1.14,567,1.14,568,0.92]],["title/dependencies.html",[174,1.906,569,2.272]],["body/dependencies.html",[22,0.051,23,0.358,66,0.043,67,0.043,113,1.739,115,3.155,174,2.284,189,3.77,190,3.174,203,1.986,265,3.155,570,3.913,571,5.51,572,3.913,573,3.913,574,3.913,575,3.913,576,3.913,577,3.913,578,3.913,579,3.913,580,3.913,581,3.913,582,3.913]],["title/miscellaneous/functions.html",[583,1.832,584,2.633]],["body/miscellaneous/functions.html",[12,0.943,22,0.046,39,0.47,66,0.044,67,0.044,79,0.932,93,1.073,95,1.073,490,3.294,517,3.867,568,3.294,583,3.294,584,3.294,585,4.085,586,4.796,587,4.085,588,4.085,589,4.085,590,4.085,591,4.085,592,4.085,593,4.085,594,4.085,595,4.085,596,4.085,597,4.085]],["title/index.html",[79,0.518,255,1.832,598,2.272]],["body/index.html",[0,0.235,3,0.304,5,0.304,13,0.779,22,0.039,39,0.383,66,0.039,67,0.039,186,2.259,360,2.259,599,3.327,600,4.23,601,5.053,602,4.651,603,4.651,604,3.327,605,3.327,606,3.327,607,4.23,608,5.247,609,5.165,610,3.327,611,3.327,612,3.327,613,3.327,614,3.327,615,3.327,616,3.327,617,3.327,618,3.327,619,4.651,620,3.327,621,5.053,622,3.327,623,3.327,624,3.327,625,3.327,626,3.327,627,3.327,628,4.23,629,4.23,630,5.053,631,3.327,632,4.23,633,4.23,634,3.327,635,4.894,636,3.327,637,3.327,638,3.327,639,4.651,640,3.327,641,4.894,642,3.327,643,3.327,644,4.23,645,3.327,646,3.327,647,3.327,648,3.327,649,4.23,650,4.23,651,3.327,652,4.23,653,3.327,654,3.327,655,3.327]],["title/modules.html",[172,1.444]],["body/modules.html",[22,0.045,66,0.045,67,0.045,172,1.667,173,2.494,183,2.169,190,2.901,656,4.273,657,4.273,658,4.923,659,4.273,660,4.273]],["title/overview.html",[661,2.985]],["body/overview.html",[0,0.173,1,0.661,22,0.051,24,0.313,41,0.741,43,0.661,45,0.661,47,0.661,50,0.661,52,0.661,54,0.661,56,0.661,58,0.661,61,0.661,66,0.039,67,0.039,162,1.913,172,1.68,173,3.304,174,1.997,175,2.759,176,2.759,177,2.759,178,1.997,179,2.759,180,2.759,181,2.759,182,2.759,183,2.392,184,3.472,185,2.759,186,2.323,345,1.737,661,2.759,662,3.421]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":107,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["0.5",{"_index":473,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["0.8.26",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":161,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"components/SliderControllerComponent.html":{}}}],["1.25",{"_index":565,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["10",{"_index":148,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["100",{"_index":339,"title":{},"body":{"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["11",{"_index":662,"title":{},"body":{"overview.html":{}}}],["135",{"_index":472,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["16",{"_index":514,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["16x",{"_index":158,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["2",{"_index":162,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["2.1.1",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":550,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["2.5.4",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["2x",{"_index":155,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["3",{"_index":163,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["3.0",{"_index":35,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["32x",{"_index":159,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["360",{"_index":149,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["4",{"_index":164,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["4x",{"_index":156,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["5",{"_index":291,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["50",{"_index":124,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["6",{"_index":292,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["6.0.0",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":605,"title":{},"body":{"index.html":{}}}],["8x",{"_index":157,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_",{"_index":458,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["_contain",{"_index":492,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["_wave",{"_index":136,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["_wave').offsetheight",{"_index":130,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["about'},{'nam",{"_index":40,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["about.compon",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["about.component.css",{"_index":15,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.t",{"_index":8,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about.component.ts:8",{"_index":20,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["about/app",{"_index":7,"title":{},"body":{"components/AppAboutComponent.html":{},"modules/AppModule.html":{}}}],["access",{"_index":645,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":497,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["activ",{"_index":118,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["actual_compon",{"_index":65,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["addsong",{"_index":351,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["addsong(song",{"_index":354,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["afterviewinit",{"_index":74,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["angular",{"_index":602,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["aot",{"_index":595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["appaboutcompon",{"_index":1,"title":{"components/AppAboutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appcompon",{"_index":41,"title":{"components/AppComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appdeckcompon",{"_index":43,"title":{"components/AppDeckComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["applayoutcompon",{"_index":45,"title":{"components/AppLayoutComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appmodul",{"_index":173,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmusiclistcompon",{"_index":47,"title":{"components/AppMusicListComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["approutingmodul",{"_index":183,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsearchcompon",{"_index":50,"title":{"components/AppSearchComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appsettingscompon",{"_index":52,"title":{"components/AppSettingsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["apptabscompon",{"_index":54,"title":{"components/AppTabsComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["appvolumecompon",{"_index":56,"title":{"components/AppVolumeComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["argument",{"_index":304,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["artifact",{"_index":622,"title":{},"body":{"index.html":{}}}],["artist",{"_index":254,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["attribut",{"_index":28,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["automat",{"_index":614,"title":{},"body":{"index.html":{}}}],["avail",{"_index":660,"title":{},"body":{"modules.html":{}}}],["bigval",{"_index":556,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["bootstrap",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["break",{"_index":487,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["brows",{"_index":658,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":621,"title":{},"body":{"index.html":{}}}],["callback",{"_index":399,"title":{},"body":{"injectables/PlayerService.html":{}}}],["caveat",{"_index":592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cc",{"_index":34,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["chang",{"_index":616,"title":{},"body":{"index.html":{}}}],["changevolum",{"_index":333,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["changevolume(deck",{"_index":336,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["check",{"_index":642,"title":{},"body":{"index.html":{}}}],["choos",{"_index":280,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["class",{"_index":25,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["cli",{"_index":603,"title":{},"body":{"index.html":{}}}],["closest",{"_index":479,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["closest(el",{"_index":491,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["cluster_appmodul",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":617,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":646,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":38,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["components/app",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["components/roulett",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["components/slid",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["comput",{"_index":260,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["config",{"_index":430,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["configslid",{"_index":424,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["console.log('error",{"_index":387,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["console.log('sav",{"_index":410,"title":{},"body":{"injectables/PlayerService.html":{}}}],["const",{"_index":126,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{}}}],["constructor(musicservic",{"_index":90,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["constructor(playerservic",{"_index":334,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["contain",{"_index":134,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["content",{"_index":27,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["control",{"_index":63,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller'},{'nam",{"_index":60,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.compon",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["controller.component.css",{"_index":422,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.html",{"_index":423,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.t",{"_index":419,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:102",{"_index":531,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:121",{"_index":533,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:129",{"_index":535,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:140",{"_index":537,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:148",{"_index":539,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:155",{"_index":541,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:168",{"_index":512,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:173",{"_index":513,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:178",{"_index":510,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:181",{"_index":511,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:20",{"_index":433,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:21",{"_index":447,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:22",{"_index":449,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":446,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:24",{"_index":448,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:25",{"_index":518,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":432,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:28",{"_index":520,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:38",{"_index":522,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:44",{"_index":442,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:48",{"_index":443,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["controller.component.ts:52",{"_index":445,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:57",{"_index":438,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:60",{"_index":441,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:61",{"_index":525,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:64",{"_index":436,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["controller.component.ts:76",{"_index":527,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller.component.ts:87",{"_index":529,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["controller/roulett",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{}}}],["controller/slid",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/SliderControllerComponent.html":{}}}],["controlvalueaccessor",{"_index":420,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["core",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["cue",{"_index":160,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["custom_text_input_control_value_accessor",{"_index":421,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["dark",{"_index":290,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["deck",{"_index":76,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["deck'},{'nam",{"_index":44,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deck.compon",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["deck.component.css",{"_index":77,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.html",{"_index":78,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.t",{"_index":73,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:14",{"_index":97,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:16",{"_index":103,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:17",{"_index":104,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:18",{"_index":108,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:20",{"_index":92,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:51",{"_index":102,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:56",{"_index":101,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck.component.ts:63",{"_index":98,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deck/app",{"_index":72,"title":{},"body":{"components/AppDeckComponent.html":{},"modules/AppModule.html":{}}}],["deck_",{"_index":135,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["deckload",{"_index":348,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["decknumb",{"_index":89,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["decksong",{"_index":349,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["declar",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":516,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["decorators/n",{"_index":542,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["default",{"_index":105,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["defin",{"_index":19,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["deletesong",{"_index":352,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["deletesong(song",{"_index":356,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["depend",{"_index":174,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dev",{"_index":611,"title":{},"body":{"index.html":{}}}],["develop",{"_index":606,"title":{},"body":{"index.html":{}}}],["direct",{"_index":64,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":620,"title":{},"body":{"index.html":{}}}],["directori",{"_index":625,"title":{},"body":{"index.html":{}}}],["dist",{"_index":624,"title":{},"body":{"index.html":{}}}],["document",{"_index":644,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('deck_",{"_index":128,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["document:click",{"_index":431,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["document:click(ev",{"_index":434,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["drag",{"_index":258,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["drop",{"_index":325,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["drope",{"_index":297,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["droped(ev",{"_index":308,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["dynam",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":636,"title":{},"body":{"index.html":{}}}],["effect",{"_index":165,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppSettingsComponent.html":{}}}],["el",{"_index":480,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.match",{"_index":482,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.mozmatchesselector",{"_index":484,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.msmatchesselector",{"_index":485,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.parentel",{"_index":488,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["el.webkitmatchesselector",{"_index":483,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["element",{"_index":490,"title":{},"body":{"components/RouletteControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["element.decor",{"_index":543,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["element.decorator.t",{"_index":586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elementref.nativeel",{"_index":591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["end",{"_index":635,"title":{},"body":{"index.html":{}}}],["english",{"_index":288,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["error",{"_index":386,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["event",{"_index":305,"title":{},"body":{"components/AppTabsComponent.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{}}}],["event.preventdefault",{"_index":316,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.stoppropag",{"_index":317,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["event.target",{"_index":489,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["exampl",{"_index":597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["execut",{"_index":632,"title":{},"body":{"index.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["fals",{"_index":119,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["filechangeev",{"_index":270,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filechangeevent(fileinput",{"_index":273,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["fileinput",{"_index":275,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["filelist",{"_index":277,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["fileread",{"_index":380,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["fill",{"_index":467,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fillheight",{"_index":503,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillleft",{"_index":505,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filloffset",{"_index":563,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillsiz",{"_index":494,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["filltop",{"_index":504,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["fillwidth",{"_index":502,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["finish",{"_index":142,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["flag",{"_index":627,"title":{},"body":{"index.html":{}}}],["fn",{"_index":439,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["fold",{"_index":425,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["forkjoin",{"_index":374,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["formsmodul",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["forwardref",{"_index":450,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["function",{"_index":584,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":638,"title":{},"body":{"index.html":{}}}],["gener",{"_index":601,"title":{},"body":{"index.html":{}}}],["get",{"_index":598,"title":{"index.html":{}},"body":{}}],["getfillheight",{"_index":528,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillleft",{"_index":532,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfilltop",{"_index":530,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getfillwidth",{"_index":526,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbheight",{"_index":521,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbleft",{"_index":524,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbtop",{"_index":523,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["getthumbwidth",{"_index":519,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackheight",{"_index":536,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackleft",{"_index":540,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettracktop",{"_index":538,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["gettrackwidth",{"_index":534,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["go",{"_index":641,"title":{},"body":{"index.html":{}}}],["graph",{"_index":659,"title":{},"body":{"modules.html":{}}}],["height",{"_index":127,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["help",{"_index":639,"title":{},"body":{"index.html":{}}}],["here",{"_index":259,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["hostlisten",{"_index":299,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["hostlistener('document:click",{"_index":477,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["hostlistener('window:dragleav",{"_index":323,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["hostlistener('window:dragov",{"_index":320,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["htmlelement",{"_index":515,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["http://localhost:4200",{"_index":613,"title":{},"body":{"index.html":{}}}],["http://virtualdj",{"_index":653,"title":{},"body":{"index.html":{}}}],["http://virtualdj.surge.sh",{"_index":655,"title":{},"body":{"index.html":{}}}],["https://clm2609.gitlab.io/tfg",{"_index":647,"title":{},"body":{"index.html":{}}}],["icon",{"_index":29,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["id",{"_index":460,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ignor",{"_index":452,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["includes(lowsearch",{"_index":252,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["inject",{"_index":345,"title":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"overview.html":{}}}],["input",{"_index":88,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["instead",{"_index":590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isplay",{"_index":392,"title":{},"body":{"injectables/PlayerService.html":{}}}],["isplaying(deck",{"_index":395,"title":{},"body":{"injectables/PlayerService.html":{}}}],["jest",{"_index":634,"title":{},"body":{"index.html":{}}}],["js",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["languag",{"_index":286,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["latest",{"_index":650,"title":{},"body":{"index.html":{}}}],["layout",{"_index":168,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":46,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["layout.compon",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["layout.component.css",{"_index":169,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.html",{"_index":170,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.t",{"_index":167,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout.component.ts:8",{"_index":171,"title":{},"body":{"components/AppLayoutComponent.html":{}}}],["layout/app",{"_index":166,"title":{},"body":{"components/AppLayoutComponent.html":{},"modules/AppModule.html":{}}}],["legend",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["licens",{"_index":33,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["light",{"_index":289,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["list",{"_index":216,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list'},{'nam",{"_index":49,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["list.compon",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":217,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.html",{"_index":218,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.t",{"_index":215,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:11",{"_index":232,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:13",{"_index":231,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:14",{"_index":234,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:15",{"_index":225,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:30",{"_index":227,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:33",{"_index":229,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list.component.ts:36",{"_index":230,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["list/app",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/AppMusicListComponent.html":{}}}],["load",{"_index":256,"title":{},"body":{"components/AppMusicListComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["load(deck",{"_index":358,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["loader.servic",{"_index":110,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["loader.service.t",{"_index":347,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:10",{"_index":368,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:11",{"_index":362,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:12",{"_index":367,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:13",{"_index":364,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:14",{"_index":353,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:18",{"_index":359,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:32",{"_index":355,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:36",{"_index":357,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:8",{"_index":371,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loader.service.ts:9",{"_index":370,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["loadondeck",{"_index":222,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loadondeck(deck",{"_index":226,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["loc",{"_index":561,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["lowsearch",{"_index":245,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["made",{"_index":30,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["mastermultipli",{"_index":343,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["match",{"_index":67,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchesselector",{"_index":481,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["matchesselector.call(el",{"_index":486,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["math.max(0",{"_index":564,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["max",{"_index":463,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["method",{"_index":85,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["min",{"_index":462,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["miscellan",{"_index":583,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modul",{"_index":172,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":640,"title":{},"body":{"index.html":{}}}],["mouseev",{"_index":435,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["multi",{"_index":455,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music",{"_index":48,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["music.filter(mu",{"_index":250,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musiclist",{"_index":219,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicload",{"_index":350,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["musicloaderservic",{"_index":91,"title":{"injectables/MusicLoaderService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["musicservic",{"_index":81,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["musicservice.mus",{"_index":236,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicservice.music$.subscribe(a",{"_index":238,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["musicsubscript",{"_index":117,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nativ",{"_index":589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nativeel",{"_index":517,"title":{},"body":{"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["nativeelement('slidershel",{"_index":544,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["nativeelement(selector",{"_index":588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["navig",{"_index":612,"title":{},"body":{"index.html":{}}}],["new",{"_index":360,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"index.html":{}}}],["ng",{"_index":609,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":451,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ngafterviewinit",{"_index":125,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["ngmodul",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":150,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["noop",{"_index":453,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["normalize('nfd",{"_index":247,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["npm",{"_index":631,"title":{},"body":{"index.html":{}}}],["null",{"_index":363,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/SliderControllerComponent.html":{}}}],["number",{"_index":96,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["observ",{"_index":372,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["on(deck",{"_index":398,"title":{},"body":{"injectables/PlayerService.html":{}}}],["onchangecallback",{"_index":457,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ondestroy",{"_index":75,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["ondocumentclick(ev",{"_index":478,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["ondragover(ev",{"_index":321,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["ontouchedcallback",{"_index":456,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["option",{"_index":95,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":661,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":569,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":93,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["pc",{"_index":553,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["percent",{"_index":468,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["player.servic",{"_index":375,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["playerservic",{"_index":82,"title":{"injectables/PlayerService.html":{}},"body":{"components/AppDeckComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["playpaus",{"_index":86,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["playpause(deck",{"_index":401,"title":{},"body":{"injectables/PlayerService.html":{}}}],["privat",{"_index":116,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["prod",{"_index":626,"title":{},"body":{"index.html":{}}}],["product",{"_index":628,"title":{},"body":{"index.html":{}}}],["progresscolor",{"_index":139,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["project",{"_index":600,"title":{},"body":{"index.html":{}}}],["properti",{"_index":80,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["protractor",{"_index":637,"title":{},"body":{"index.html":{}}}],["provid",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["providedin",{"_index":376,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["purpl",{"_index":140,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["queri",{"_index":220,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["reader",{"_index":379,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onerror",{"_index":385,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.onload",{"_index":382,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.readasdataurl(song",{"_index":381,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["reader.result",{"_index":384,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["readm",{"_index":643,"title":{},"body":{"index.html":{}}}],["recievedfil",{"_index":271,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["recievedfiles(fil",{"_index":276,"title":{},"body":{"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["red",{"_index":138,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["registeronchang",{"_index":426,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registeronchange(fn",{"_index":437,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouch",{"_index":427,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["registerontouched(fn",{"_index":440,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["reload",{"_index":615,"title":{},"body":{"index.html":{}}}],["removesong",{"_index":223,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["removesong(song",{"_index":228,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["replace(/[\\u0300",{"_index":248,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["requestanimationfram",{"_index":131,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["reset",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetdisc",{"_index":87,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["result",{"_index":66,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":99,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["root",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["root'},{'nam",{"_index":42,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["rotat",{"_index":83,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["roulett",{"_index":59,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["roulettecontrollercompon",{"_index":58,"title":{"components/RouletteControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["roundicon",{"_index":36,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["rout",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":608,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":113,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["save",{"_index":393,"title":{},"body":{"injectables/PlayerService.html":{}}}],["save(deck",{"_index":403,"title":{},"body":{"injectables/PlayerService.html":{}}}],["scaffold",{"_index":618,"title":{},"body":{"index.html":{}}}],["search",{"_index":257,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{}}}],["search'},{'nam",{"_index":51,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["search.compon",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.css",{"_index":268,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.html",{"_index":269,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.t",{"_index":267,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:15",{"_index":274,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:19",{"_index":278,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search.component.ts:9",{"_index":272,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["search/app",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/AppSearchComponent.html":{}}}],["searchmus",{"_index":243,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchmusic(this.queri",{"_index":253,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["searchqueri",{"_index":244,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["see",{"_index":649,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["serv",{"_index":610,"title":{},"body":{"index.html":{}}}],["server",{"_index":607,"title":{},"body":{"index.html":{}}}],["services/mus",{"_index":109,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["services/player.servic",{"_index":111,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppVolumeComponent.html":{}}}],["set",{"_index":282,"title":{},"body":{"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{}}}],["setact",{"_index":298,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["setactive(act",{"_index":311,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["setinterv",{"_index":122,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["settings'},{'nam",{"_index":53,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["settings.compon",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["settings.component.css",{"_index":283,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.html",{"_index":284,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.t",{"_index":281,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings.component.ts:8",{"_index":285,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["settings/app",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/AppSettingsComponent.html":{}}}],["setvalu",{"_index":496,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["setvolum",{"_index":394,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setvolume(deck",{"_index":405,"title":{},"body":{"injectables/PlayerService.html":{}}}],["shell",{"_index":495,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetheight",{"_index":549,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shell.offsetwidth",{"_index":548,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["shownmus",{"_index":221,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["slider",{"_index":62,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["slidercontrollercompon",{"_index":61,"title":{"components/SliderControllerComponent.html":{}},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"overview.html":{}}}],["smallval",{"_index":547,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["smashicon",{"_index":31,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["song",{"_index":84,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["song.nam",{"_index":154,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"modules/AppModule.html":{},"components/AppMusicListComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{},"index.html":{}}}],["spanish",{"_index":287,"title":{},"body":{"components/AppSettingsComponent.html":{}}}],["src/.../nativ",{"_index":585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/app",{"_index":6,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{}}}],["src/app/components/decorators/n",{"_index":587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/components/roulett",{"_index":418,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["src/app/components/slid",{"_index":493,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["src/app/services/mus",{"_index":346,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["src/app/services/player.service.t",{"_index":391,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:10",{"_index":407,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:12",{"_index":404,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:17",{"_index":406,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:20",{"_index":400,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:23",{"_index":397,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:26",{"_index":402,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:29",{"_index":396,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:8",{"_index":409,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:9",{"_index":408,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stage",{"_index":651,"title":{},"body":{"index.html":{}}}],["stage.surge.sh",{"_index":654,"title":{},"body":{"index.html":{}}}],["start",{"_index":255,"title":{"index.html":{}},"body":{"components/AppMusicListComponent.html":{}}}],["state",{"_index":652,"title":{},"body":{"index.html":{}}}],["stopdrag",{"_index":324,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["store",{"_index":623,"title":{},"body":{"index.html":{}}}],["string",{"_index":233,"title":{},"body":{"components/AppMusicListComponent.html":{},"components/AppTabsComponent.html":{}}}],["string(mus.nam",{"_index":251,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["subject",{"_index":361,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["subscript",{"_index":112,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppVolumeComponent.html":{}}}],["support",{"_index":656,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":657,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":294,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs'},{'nam",{"_index":55,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["tabs.compon",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["tabs.component.css",{"_index":295,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.html",{"_index":296,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.t",{"_index":293,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:10",{"_index":313,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:11",{"_index":314,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:12",{"_index":315,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:13",{"_index":312,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:15",{"_index":302,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:20",{"_index":309,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:27",{"_index":307,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:33",{"_index":303,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs.component.ts:36",{"_index":310,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["tabs/app",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"components/AppTabsComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["test",{"_index":630,"title":{},"body":{"index.html":{}}}],["tfg",{"_index":599,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":147,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.config.id",{"_index":461,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.config.max",{"_index":555,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.config.min",{"_index":554,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.config.vert",{"_index":545,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.configslid",{"_index":459,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.max",{"_index":471,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.configslider.min",{"_index":470,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.deck[deck",{"_index":411,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deck[deck].isplay",{"_index":417,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deck[deck].load(song",{"_index":415,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deck[deck].on(ev",{"_index":414,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deck[deck].playpaus",{"_index":416,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deck[deck].setvolume(volum",{"_index":413,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deckloader[0].asobserv",{"_index":365,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[1].asobserv",{"_index":366,"title":{},"body":{"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{}}}],["this.deckloader[deck].next(this.deck[deck",{"_index":412,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.deckloader[deck].next(this.decksongs[deck",{"_index":378,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.decknumb",{"_index":129,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.decksongs[deck",{"_index":377,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.drag",{"_index":319,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.fills",{"_index":562,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.fold",{"_index":474,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.music.push(song",{"_index":388,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.music.splice(this.music.indexof(song",{"_index":390,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musiclist",{"_index":235,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicloader.asobserv",{"_index":369,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicloader.next(this.mus",{"_index":389,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.musicservic",{"_index":120,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{}}}],["this.musicservice.decksongs$[this.decknumber].subscribe(a",{"_index":145,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.musicservice.deletesong(song",{"_index":240,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicservice.load(deck",{"_index":239,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.musicsubscript",{"_index":144,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.musicsubscription.unsubscrib",{"_index":151,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{}}}],["this.onchangecallback",{"_index":475,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.onchangecallback(this.slid",{"_index":566,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.ontouchedcallback",{"_index":476,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["this.playerservic",{"_index":121,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{}}}],["this.playerservice.isplaying(this.decknumb",{"_index":153,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.load(deck",{"_index":383,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["this.playerservice.on(this.decknumb",{"_index":141,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.playpause(this.decknumb",{"_index":152,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.playerservice.sav",{"_index":132,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.queri",{"_index":241,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.recievedfiles(event.datatransfer.fil",{"_index":318,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["this.recievedfiles(fileinput.target.fil",{"_index":279,"title":{},"body":{"components/AppSearchComponent.html":{}}}],["this.resetdisc",{"_index":143,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.rot",{"_index":123,"title":{},"body":{"components/AppDeckComponent.html":{},"components/RouletteControllerComponent.html":{}}}],["this.shel",{"_index":546,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.shownmus",{"_index":242,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.slid",{"_index":552,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.song",{"_index":146,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["this.thumbheight",{"_index":558,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.thumbwidth",{"_index":559,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["this.updatemus",{"_index":237,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["this.valu",{"_index":469,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["this.volumemast",{"_index":344,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["throwerror",{"_index":373,"title":{},"body":{"injectables/MusicLoaderService.html":{}}}],["thumb",{"_index":464,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["thumbheight",{"_index":499,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbleft",{"_index":501,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbsiz",{"_index":557,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbtop",{"_index":500,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["thumbwidth",{"_index":498,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tolowercas",{"_index":246,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["track",{"_index":465,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["trackheight",{"_index":507,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackleft",{"_index":509,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracksiz",{"_index":560,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["tracktop",{"_index":508,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["trackwidth",{"_index":506,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["true",{"_index":322,"title":{},"body":{"components/AppTabsComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["type",{"_index":94,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["typeof",{"_index":567,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["u036f]/g",{"_index":249,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["undefin",{"_index":568,"title":{},"body":{"components/SliderControllerComponent.html":{},"miscellaneous/functions.html":{}}}],["unfold",{"_index":428,"title":{},"body":{"components/RouletteControllerComponent.html":{}}}],["unit",{"_index":629,"title":{},"body":{"index.html":{}}}],["updatemus",{"_index":224,"title":{},"body":{"components/AppMusicListComponent.html":{}}}],["us",{"_index":619,"title":{},"body":{"index.html":{}}}],["useexist",{"_index":454,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["val",{"_index":551,"title":{},"body":{"components/SliderControllerComponent.html":{}}}],["valu",{"_index":106,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["var",{"_index":37,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["version",{"_index":604,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":466,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["via",{"_index":633,"title":{},"body":{"index.html":{}}}],["void",{"_index":100,"title":{},"body":{"components/AppDeckComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"injectables/MusicLoaderService.html":{},"injectables/PlayerService.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volum",{"_index":327,"title":{},"body":{"components/AppVolumeComponent.html":{},"injectables/PlayerService.html":{}}}],["volume'},{'nam",{"_index":57,"title":{},"body":{"components/AppAboutComponent.html":{},"components/AppComponent.html":{},"components/AppDeckComponent.html":{},"components/AppLayoutComponent.html":{},"components/AppMusicListComponent.html":{},"components/AppSearchComponent.html":{},"components/AppSettingsComponent.html":{},"components/AppTabsComponent.html":{},"components/AppVolumeComponent.html":{},"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["volume.compon",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["volume.component.css",{"_index":328,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.html",{"_index":329,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.t",{"_index":326,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:10",{"_index":335,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:14",{"_index":340,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:15",{"_index":341,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:16",{"_index":342,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:17",{"_index":338,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume.component.ts:19",{"_index":337,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume/app",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"components/AppVolumeComponent.html":{}}}],["volume0",{"_index":330,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volume1",{"_index":331,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["volumemast",{"_index":332,"title":{},"body":{"components/AppVolumeComponent.html":{}}}],["wavecolor",{"_index":137,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurf",{"_index":114,"title":{},"body":{"components/AppDeckComponent.html":{},"injectables/PlayerService.html":{}}}],["wavesurfer.cr",{"_index":133,"title":{},"body":{"components/AppDeckComponent.html":{}}}],["wavesurfer.j",{"_index":115,"title":{},"body":{"components/AppDeckComponent.html":{},"dependencies.html":{}}}],["webapp",{"_index":648,"title":{},"body":{"index.html":{}}}],["window:dragleav",{"_index":300,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragov",{"_index":301,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["window:dragover(ev",{"_index":306,"title":{},"body":{"components/AppTabsComponent.html":{}}}],["won’t",{"_index":593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["work",{"_index":594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writevalu",{"_index":429,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["writevalue(valu",{"_index":444,"title":{},"body":{"components/RouletteControllerComponent.html":{},"components/SliderControllerComponent.html":{}}}],["www.flaticon.com",{"_index":32,"title":{},"body":{"components/AppAboutComponent.html":{}}}],["zone.j",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppAboutComponent.html":{"url":"components/AppAboutComponent.html","title":"component - AppAboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppAboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-about/app-about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                app-about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-about.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-about/app-about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './app-about.component.html',\n  styleUrls: ['./app-about.component.css']\n})\nexport class AppAboutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  Content attribution:\n\n\n\n  \n  \n  Icons made by\n    Smashicons\n    from\n    www.flaticon.com\n    is licensed by\n    CC 3.0 BY\n  \n\n\n\n  \n  \n  Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Content attribution:      Icons made by    Smashicons    from    www.flaticon.com    is licensed by    CC 3.0 BY        Icons made by Roundicons from www.flaticon.com is licensed by CC 3.0 BY'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppAboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n-->\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppDeckComponent.html":{"url":"components/AppDeckComponent.html","title":"component - AppDeckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppDeckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-deck/app-deck.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deck\n            \n\n            \n                styleUrls\n                app-deck.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-deck.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicService\n                            \n                            \n                                playerService\n                            \n                            \n                                rotation\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                playPause\n                            \n                            \n                                resetDisc\n                            \n                            \n                                rotate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deckNumber\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-deck/app-deck.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deckNumber\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetDisc\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetDisc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            song\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        song:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-deck/app-deck.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { PlayerService } from '../../services/player.service';\nimport { Subscription } from 'rxjs';\nimport * as WaveSurfer from 'wavesurfer.js';\n\n@Component({\n  selector: 'app-deck',\n  templateUrl: './app-deck.component.html',\n  styleUrls: ['./app-deck.component.css']\n})\nexport class AppDeckComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  deckNumber: number;\n  private musicSubscription: Subscription;\n  musicService: MusicLoaderService;\n  playerService: PlayerService;\n  rotation = 0;\n  private active = false;\n  song: any;\n  constructor(musicService: MusicLoaderService, playerService: PlayerService) {\n    this.musicService = musicService;\n    this.playerService = playerService;\n  }\n  ngOnInit() {\n    setInterval(() => {\n      this.rotate();\n    }, 50);\n  }\n  ngAfterViewInit(): void {\n    const height = document.getElementById('deck_' + this.deckNumber + '_wave').offsetHeight;\n    requestAnimationFrame(() => {\n      this.playerService.save(\n        this.deckNumber,\n        WaveSurfer.create({\n          container: '#deck_' + this.deckNumber + '_wave',\n          waveColor: 'red',\n          progressColor: 'purple',\n          height: height\n        })\n      );\n      this.playerService.on(this.deckNumber, 'finish', () => {\n        this.resetDisc();\n      });\n    });\n    this.musicSubscription = this.musicService.decksongs$[this.deckNumber].subscribe(a => {\n      this.resetDisc();\n      this.song = a as File;\n    });\n  }\n  rotate() {\n    if (this.active) {\n      this.rotation = (this.rotation + 10) % 360;\n    }\n  }\n  resetDisc() {\n    this.active = false;\n    this.rotation = 0;\n  }\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n  playPause() {\n    this.playerService.playPause(this.deckNumber);\n    this.active = this.playerService.isPlaying(this.deckNumber);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n    \n\n    \n      \n        {{song.name}}\n      \n\n      \n        \n          \n            \n          \n          \n            2x\n            4x\n            8x\n            16x\n            32x\n          \n        \n        \n          \n            \n              CUEs\n              \n                CUE 1\n                CUE 2\n                CUE 3\n                CUE 4\n              \n              Effects\n              \n                \n                  2x\n                  4x\n                  8x\n                \n                \n                  2x\n                  4x\n                  8x\n                \n              \n            \n            \n              \n            \n          \n          \n            CUE\n            \n              \n                \n                \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{song.name}}                                                                          2x            4x            8x            16x            32x                                                              CUEs                              CUE 1                CUE 2                CUE 3                CUE 4                            Effects                                                2x                  4x                  8x                                                  2x                  4x                  8x                                                                                                                CUE                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppDeckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppLayoutComponent.html":{"url":"components/AppLayoutComponent.html","title":"component - AppLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-layout/app-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                app-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-layout.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-layout/app-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './app-layout.component.html',\n  styleUrls: ['./app-layout.component.css']\n})\nexport class AppLayoutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppAboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                AppDeckComponent\n                            \n                            \n                                AppLayoutComponent\n                            \n                            \n                                AppMusicListComponent\n                            \n                            \n                                AppSearchComponent\n                            \n                            \n                                AppSettingsComponent\n                            \n                            \n                                AppTabsComponent\n                            \n                            \n                                AppVolumeComponent\n                            \n                            \n                                RouletteControllerComponent\n                            \n                            \n                                SliderControllerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppDeckComponent } from './components/app-deck/app-deck.component';\nimport { AppLayoutComponent } from './components/app-layout/app-layout.component';\nimport { AppVolumeComponent } from './components/app-volume/app-volume.component';\nimport { SliderControllerComponent } from './components/slider-controller/slider-controller.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouletteControllerComponent } from './components/roulette-controller/roulette-controller.component';\nimport { AppSearchComponent } from './components/app-search/app-search.component';\nimport { AppTabsComponent } from './components/app-tabs/app-tabs.component';\nimport { AppMusicListComponent } from './components/app-music-list/app-music-list.component';\nimport { AppSettingsComponent } from './components/app-settings/app-settings.component';\nimport { AppAboutComponent } from './components/app-about/app-about.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppDeckComponent,\n    AppLayoutComponent,\n    AppVolumeComponent,\n    SliderControllerComponent,\n    RouletteControllerComponent,\n    AppSearchComponent,\n    AppTabsComponent,\n    AppMusicListComponent,\n    AppSettingsComponent,\n    AppAboutComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppMusicListComponent.html":{"url":"components/AppMusicListComponent.html","title":"component - AppMusicListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppMusicListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-music-list/app-music-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music-list\n            \n\n            \n                styleUrls\n                app-music-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-music-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicList\n                            \n                            \n                                musicService\n                            \n                            \n                                query\n                            \n                            \n                                shownMusic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadOnDeck\n                            \n                            \n                                removeSong\n                            \n                            \n                                updateMusic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOnDeck\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadOnDeck(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeSong\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateMusic()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicList:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownMusic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shownMusic:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-music-list/app-music-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-music-list',\n  templateUrl: './app-music-list.component.html',\n  styleUrls: ['./app-music-list.component.css']\n})\nexport class AppMusicListComponent implements OnDestroy {\n  musicService: MusicLoaderService;\n  private musicSubscription: Subscription;\n  musicList: File[];\n  shownMusic: File[];\n  query: string;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n    this.musicList = musicService.music;\n    this.updateMusic();\n    this.musicSubscription = musicService.music$.subscribe(a => {\n      this.musicList = a as File[];\n      this.updateMusic();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.musicSubscription.unsubscribe();\n  }\n\n  loadOnDeck(deck, song) {\n    this.musicService.load(deck, song);\n  }\n  removeSong(song) {\n    this.musicService.deleteSong(song);\n  }\n  updateMusic() {\n    if (!this.query) {\n      this.shownMusic = this.musicList;\n    } else {\n      const searchMusic = (searchQuery, music: any[]) => {\n        const lowSearch = searchQuery\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n        return music.filter(mus => {\n          return String(mus.name)\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .includes(lowSearch);\n        });\n      };\n      this.shownMusic = searchMusic(this.query, this.musicList);\n    }\n  }\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      \n        \n          Song\n          \n            \n            \n          \n        \n      \n      Artist -->\n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      {{song.name}}\n       -->\n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n    \n    \n      No songs match {{query}}\n    \n\n  \n  \n    \n    To start load music from the search or drag music here from your computer.\n  \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                                  Song                                                                Artist -->                                                                        {{song.name}}       -->                                                                                                                                          No songs match {{query}}                To start load music from the search or drag music here from your computer.    '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppMusicListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), FormsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSearchComponent.html":{"url":"components/AppSearchComponent.html","title":"component - AppSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-search/app-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                app-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChangeEvent\n                            \n                            \n                                recievedFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChangeEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChangeEvent(fileInput: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileInput\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-search/app-search.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n@Component({\n  selector: 'app-search',\n  templateUrl: './app-search.component.html',\n  styleUrls: ['./app-search.component.css']\n})\nexport class AppSearchComponent implements OnInit {\n  musicService: MusicLoaderService;\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  ngOnInit() {}\n  fileChangeEvent(fileInput: any) {\n    this.recievedFiles(fileInput.target.files);\n  }\n\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 1\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n      \n        Result 2\n      \n\n    \n    \n      \n      Choose a\n        file\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 1                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                    Result 2                          Choose a        file      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppSettingsComponent.html":{"url":"components/AppSettingsComponent.html","title":"component - AppSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-settings/app-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                app-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-settings.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-settings/app-settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './app-settings.component.html',\n  styleUrls: ['./app-settings.component.css']\n})\nexport class AppSettingsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      Language\n\n      \n        Spanish\n        English\n      \n    \n    \n      Template\n      \n        Light\n        Dark\n      \n    \n  \n  \n\n    \n      Effects deck 1\n      \n        \n          Effect 1\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 2\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 3\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 4\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 5\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 6\n          \n            \n              Light\n              Dark\n            \n          \n\n        \n      \n    \n    \n      Effects deck 2\n      \n        \n          Effect 1\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 2\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 3\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 4\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 5\n          \n            \n              Light\n              Dark\n            \n          \n        \n        \n          Effect 6\n          \n            \n              Light\n              Dark\n            \n          \n\n        \n      \n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Language              Spanish        English                    Template              Light        Dark                        Effects deck 1                        Effect 1                                    Light              Dark                                                Effect 2                                    Light              Dark                                                Effect 3                                    Light              Dark                                                Effect 4                                    Light              Dark                                                Effect 5                                    Light              Dark                                                Effect 6                                    Light              Dark                                                  Effects deck 2                        Effect 1                                    Light              Dark                                                Effect 2                                    Light              Dark                                                Effect 3                                    Light              Dark                                                Effect 4                                    Light              Dark                                                Effect 5                                    Light              Dark                                                Effect 6                                    Light              Dark                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppTabsComponent.html":{"url":"components/AppTabsComponent.html","title":"component - AppTabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppTabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-tabs/app-tabs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                app-tabs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                dragging\n                            \n                            \n                                musicService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                droped\n                            \n                            \n                                recievedFiles\n                            \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:dragleave\n                            \n                            \n                                window:dragover\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(musicService: MusicLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-tabs/app-tabs.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicService\n                                                  \n                                                        \n                                                                    MusicLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragleave\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:dragleave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window:dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:dragover(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            droped\n                            \n                            \n                        \n                    \n                \n                \n                    \ndroped(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recievedFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecievedFiles(files: FileList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetActive(active: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'music'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragging\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dragging:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicService:     MusicLoaderService\n\n                    \n                \n                    \n                        \n                            Type :     MusicLoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-tabs/app-tabs.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { MusicLoaderService } from '../../services/music-loader.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './app-tabs.component.html',\n  styleUrls: ['./app-tabs.component.css']\n})\nexport class AppTabsComponent {\n  active = 'music';\n  dragging = false;\n  musicService: MusicLoaderService;\n  setActive(active) {\n    this.active = active;\n  }\n  constructor(musicService: MusicLoaderService) {\n    this.musicService = musicService;\n  }\n\n  droped(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.recievedFiles(event.dataTransfer.files);\n    this.dragging = false;\n  }\n  @HostListener('window:dragover', ['$event'])\n  onDragOver(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.dragging = true;\n  }\n  @HostListener('window:dragleave')\n  stopdrag() {\n    this.dragging = false;\n  }\n  recievedFiles(files: FileList) {\n    if (files) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n        Music\n      \n      \n        Settings\n      \n      \n        About\n      \n    \n    \n      \n      \n      \n    \n  \n  \n    Drop your song here\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Music                    Settings                    About                                            Drop your song here  '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppTabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppVolumeComponent.html":{"url":"components/AppVolumeComponent.html","title":"component - AppVolumeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppVolumeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app-volume/app-volume.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volume\n            \n\n            \n                styleUrls\n                app-volume.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-volume.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                playerService\n                            \n                            \n                                volume0\n                            \n                            \n                                volume1\n                            \n                            \n                                volumeMaster\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeVolume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app-volume/app-volume.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeVolume(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume0:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volume1:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volumeMaster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volumeMaster:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app-volume/app-volume.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PlayerService } from '../../services/player.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './app-volume.component.html',\n  styleUrls: ['./app-volume.component.css']\n})\nexport class AppVolumeComponent {\n  constructor(playerService: PlayerService) {\n    this.playerService = playerService;\n  }\n  volume0 = 100;\n  volume1 = 100;\n  volumeMaster = 0;\n  playerService: PlayerService;\n\n  changeVolume(deck) {\n    let masterMultiplier = 1;\n    if (deck === 0 && this.volumeMaster > 0) {\n      masterMultiplier = (100 - this.volumeMaster) / 100;\n    }\n    if (deck === 1 && this.volumeMaster \n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n      \n    \n    \n      \n\n    \n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppVolumeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicLoaderService.html":{"url":"injectables/MusicLoaderService.html","title":"injectable - MusicLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MusicLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/music-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deckLoader\n                            \n                            \n                                decksongs\n                            \n                            \n                                decksongs$\n                            \n                            \n                                music\n                            \n                            \n                                music$\n                            \n                            \n                                musicLoader\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSong\n                            \n                            \n                                deleteSong\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                    PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSong\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSong(song: File)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSong\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSong(song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decksongs$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        decksongs$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music:     File[]\n\n                    \n                \n                    \n                        \n                            Type :     File[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            music$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        music$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.musicLoader.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            musicLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        musicLoader:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerService:     PlayerService\n\n                    \n                \n                    \n                        \n                            Type :     PlayerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/music-loader.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable, of, throwError, forkJoin } from 'rxjs';\nimport { PlayerService } from './player.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicLoaderService {\n  musicLoader = new Subject();\n  music$ = this.musicLoader.asObservable();\n  music: File[] = [];\n  deckLoader = [new Subject(), new Subject()];\n  decksongs$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  decksongs: File[] = [null, null];\n  playerService: PlayerService;\n  constructor(playerService: PlayerService) {\n    this.playerService = playerService;\n  }\n  load(deck, song) {\n    this.decksongs[deck] = song;\n    this.deckLoader[deck].next(this.decksongs[deck]);\n    requestAnimationFrame(() => {\n      const reader = new FileReader();\n      reader.readAsDataURL(song);\n      reader.onload = () => {\n        this.playerService.load(deck, reader.result);\n      };\n      reader.onerror = error => {\n        console.log('Error: ', error);\n      };\n    });\n  }\n  addSong(song: File) {\n    this.music.push(song);\n    this.musicLoader.next(this.music);\n  }\n  deleteSong(song) {\n    this.music.splice(this.music.indexOf(song), 1);\n    this.musicLoader.next(this.music);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/player.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deck\n                            \n                            \n                                deck$\n                            \n                            \n                                deckLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isPlaying\n                            \n                            \n                                load\n                            \n                            \n                                on\n                            \n                            \n                                playPause\n                            \n                            \n                                save\n                            \n                            \n                                setVolume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPlaying(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(deck: , song: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        song\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            on\n                            \n                            \n                        \n                    \n                \n                \n                    \non(deck: , event: , callback: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playPause\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayPause(deck: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(deck: , wavesurfer: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        wavesurfer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setVolume\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetVolume(deck: , volume: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/player.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deck\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        volume\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [null, null]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deck$:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deckLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deckLoader:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [new Subject(), new Subject()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/player.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  deckLoader = [new Subject(), new Subject()];\n  deck$ = [this.deckLoader[0].asObservable(), this.deckLoader[1].asObservable()];\n  deck: any[] = [null, null];\n\n  save(deck, wavesurfer) {\n    console.log('saved');\n    this.deck[deck] = wavesurfer;\n    this.deckLoader[deck].next(this.deck[deck]);\n  }\n  setVolume(deck, volume) {\n    this.deck[deck].setVolume(volume);\n  }\n  on(deck, event, callback) {\n    this.deck[deck].on(event, callback);\n  }\n  load(deck, song) {\n    this.deck[deck].load(song);\n  }\n  playPause(deck) {\n    this.deck[deck].playPause();\n  }\n  isPlaying(deck) {\n    return this.deck[deck].isPlaying();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouletteControllerComponent.html":{"url":"components/RouletteControllerComponent.html","title":"component - RouletteControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouletteControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/roulette-controller/roulette-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                roulette-controller\n            \n\n            \n                styleUrls\n                roulette-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./roulette-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSlider\n                            \n                            \n                                folded\n                            \n                            \n                                rotation\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                rotate\n                            \n                            \n                                unfold\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/roulette-controller/roulette-controller.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unfold\n                            \n                            \n                        \n                    \n                \n                \n                    \nunfold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSlider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSlider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        folded:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/roulette-controller/roulette-controller.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RouletteControllerComponent),\n  multi: true\n};\n@Component({\n  selector: 'roulette-controller',\n  templateUrl: './roulette-controller.component.html',\n  styleUrls: ['./roulette-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class RouletteControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  folded = true;\n  value = 100;\n  configSlider: any;\n  rotation: number;\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.configSlider = {\n      id: this.config.id + 'slider',\n      min: 0,\n      max: 100,\n      default: 100,\n      thumb: 'roulette-slider-thumb',\n      track: 'roulette-slider-track',\n      vertical: true,\n      fill: true\n    };\n    this.rotate();\n  }\n\n  rotate() {\n    const percent = (this.value - this.configSlider.min) / (this.configSlider.max - this.configSlider.min);\n    this.rotation = 135 * 2 * (percent - 0.5);\n  }\n  unfold() {\n    this.folded = !this.folded;\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.value = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  @HostListener('document:click', ['$event'])\n  private onDocumentClick(event: MouseEvent) {\n    const closest = (el, selector) => {\n      const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\n      while (el) {\n        if (matchesSelector.call(el, selector)) {\n          break;\n        }\n        el = el.parentElement;\n      }\n      return el;\n    };\n    const ele = event.target as Element;\n    if (!closest(ele, '#' + this.config.id + '_container')) {\n      this.folded = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouletteControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderControllerComponent.html":{"url":"components/SliderControllerComponent.html","title":"component - SliderControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    src/app/components/slider-controller/slider-controller.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                slider-controller\n            \n\n            \n                styleUrls\n                slider-controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./slider-controller.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fillsize\n                            \n                            \n                                shell\n                            \n                            \n                                slider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbWidth\n                                \n                                \n                                    thumbHeight\n                                \n                                \n                                    thumbTop\n                                \n                                \n                                    thumbLeft\n                                \n                                \n                                    fillWidth\n                                \n                                \n                                    fillHeight\n                                \n                                \n                                    fillTop\n                                \n                                \n                                    fillLeft\n                                \n                                \n                                    trackWidth\n                                \n                                \n                                    trackHeight\n                                \n                                \n                                    trackTop\n                                \n                                \n                                    trackLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:178\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:168\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:173\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillsize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fillsize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shell\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shell:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Decorators : NativeElement\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slider:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thumbWidth\n                    \n                \n\n                \n                    \n                        getthumbWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbHeight\n                    \n                \n\n                \n                    \n                        getthumbHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:38\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbTop\n                    \n                \n\n                \n                    \n                        getthumbTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbLeft\n                    \n                \n\n                \n                    \n                        getthumbLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:61\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillWidth\n                    \n                \n\n                \n                    \n                        getfillWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillHeight\n                    \n                \n\n                \n                    \n                        getfillHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:87\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillTop\n                    \n                \n\n                \n                    \n                        getfillTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fillLeft\n                    \n                \n\n                \n                    \n                        getfillLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:121\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackWidth\n                    \n                \n\n                \n                    \n                        gettrackWidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackHeight\n                    \n                \n\n                \n                    \n                        gettrackHeight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:140\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackTop\n                    \n                \n\n                \n                    \n                        gettrackTop()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:148\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trackLeft\n                    \n                \n\n                \n                    \n                        gettrackLeft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/slider-controller/slider-controller.component.ts:155\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { NativeElement } from '../decorators/native-element.decorator';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/** @ignore */ const noop = () => {};\n/** @ignore */\n\nexport const CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SliderControllerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'slider-controller',\n  templateUrl: './slider-controller.component.html',\n  styleUrls: ['./slider-controller.component.css'],\n  providers: [CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class SliderControllerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  config: any;\n  @NativeElement('sliderShell')\n  shell: HTMLElement;\n  slider: any;\n  fillsize = 16;\n\n  get thumbWidth(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    if (vertical) {\n      return smallval;\n    } else {\n      return smallval / 2.5;\n    }\n  }\n  get thumbHeight(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    if (!vertical) {\n      return smallval;\n    } else {\n      return smallval / 2.5;\n    }\n  }\n  get thumbTop(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n    return vertical ? loc : 0;\n  }\n  get thumbLeft(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n    return vertical ? 0 : loc;\n  }\n\n  get fillWidth(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n    return vertical ? this.fillsize : loc + thumbsize / 2;\n  }\n  get fillHeight(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n    const fillsize = 16;\n    const filloffset = smallval / 2 - fillsize / 2;\n    return Math.max(0, vertical ? bigval - filloffset - fillsize - loc : fillsize);\n  }\n  get fillTop(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n\n    /* Fill */\n\n    const fillsize = 16;\n    const filloffset = smallval / 2 - fillsize / 2;\n    return vertical ? loc + thumbsize : filloffset;\n  }\n  get fillLeft(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    const filloffset = smallval / 2 - this.fillsize / 2;\n    return vertical ? filloffset : 0;\n  }\n\n  get trackWidth(): any {\n    const val = this.slider;\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const pc = (val - this.config.min) / (this.config.max - this.config.min);\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n    const tracksize = bigval - thumbsize;\n    const loc = vertical ? (1 - pc) * tracksize : pc * tracksize;\n    return vertical ? this.fillsize : loc + thumbsize / 2;\n  }\n  get trackHeight(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const bigval = vertical ? shell.offsetHeight : shell.offsetWidth;\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    return bigval - thumbsize * 1.25;\n  }\n  get trackTop(): any {\n    const vertical = !!this.config.vertical;\n\n    const thumbsize = vertical ? this.thumbHeight : this.thumbWidth;\n\n    return thumbsize / 2;\n  }\n  get trackLeft(): any {\n    const vertical = !!this.config.vertical;\n    const shell = this.shell;\n    const smallval = vertical ? shell.offsetWidth : shell.offsetHeight;\n    const filloffset = smallval / 2 - this.fillsize / 2;\n    return vertical ? filloffset : 0;\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  ngOnInit() {}\n\n  setValue() {\n    this.onChangeCallback(this.slider);\n    this.onTouchedCallback();\n  }\n\n  writeValue(value: any) {\n    if (!(typeof value === 'undefined' || value === null)) {\n      this.slider = value;\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\n\t\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppAboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppDeckComponent', 'selector': 'app-deck'},{'name': 'AppLayoutComponent', 'selector': 'app-layout'},{'name': 'AppMusicListComponent', 'selector': 'app-music-list'},{'name': 'AppSearchComponent', 'selector': 'app-search'},{'name': 'AppSettingsComponent', 'selector': 'app-settings'},{'name': 'AppTabsComponent', 'selector': 'app-tabs'},{'name': 'AppVolumeComponent', 'selector': 'app-volume'},{'name': 'RouletteControllerComponent', 'selector': 'roulette-controller'},{'name': 'SliderControllerComponent', 'selector': 'slider-controller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            wavesurfer.js : ^2.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NativeElement   (src/.../native-element.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/decorators/native-element.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NativeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \nNativeElement(selector: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            To get the native element instead of ElementRef.nativeElement\nCaveats: it won’t work with AOT\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Selector. Example: \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTFG\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun npm test to execute the unit tests via jest.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nDocumentation\nTo access the compodoc generated documentation go to https://clm2609.gitlab.io/tfg\nWebApp\nTo see the latest stage state of the app go to http://virtualdj-stage.surge.sh/\nTo see the latest production state of the app go to http://virtualdj.surge.sh/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppAboutComponent\n\nAppAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppDeckComponent\n\nAppDeckComponent\n\nAppModule -->\n\nAppDeckComponent->AppModule\n\n\n\n\n\nAppLayoutComponent\n\nAppLayoutComponent\n\nAppModule -->\n\nAppLayoutComponent->AppModule\n\n\n\n\n\nAppMusicListComponent\n\nAppMusicListComponent\n\nAppModule -->\n\nAppMusicListComponent->AppModule\n\n\n\n\n\nAppSearchComponent\n\nAppSearchComponent\n\nAppModule -->\n\nAppSearchComponent->AppModule\n\n\n\n\n\nAppSettingsComponent\n\nAppSettingsComponent\n\nAppModule -->\n\nAppSettingsComponent->AppModule\n\n\n\n\n\nAppTabsComponent\n\nAppTabsComponent\n\nAppModule -->\n\nAppTabsComponent->AppModule\n\n\n\n\n\nAppVolumeComponent\n\nAppVolumeComponent\n\nAppModule -->\n\nAppVolumeComponent->AppModule\n\n\n\n\n\nRouletteControllerComponent\n\nRouletteControllerComponent\n\nAppModule -->\n\nRouletteControllerComponent->AppModule\n\n\n\n\n\nSliderControllerComponent\n\nSliderControllerComponent\n\nAppModule -->\n\nSliderControllerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
